{
  "name": "@gridy/app-avatars",
  "description": "SVG avatar generator",
  "version": "2.1.0",
  "author": "Jan Forst <ensonador@gmail.com>",
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not ie <= 8"
  ],
  "devDependencies": {
    "@gridy/build": "^1.1.0",
    "d3-color": "^1.2.3",
    "del-cli": "^2.0.0",
    "esm": "^3.2.25",
    "jsdom": "^15.1.1",
    "vuetify": "^1.5.14"
  },
  "files": [
    "dist",
    "demo"
  ],
  "keywords": [
    "avatar",
    "generator",
    "random",
    "svg",
    "vector"
  ],
  "license": "MIT",
  "main": "dist/gridy-avatars.umd.js",
  "meta": {
    "namespace": "GridyAvatars"
  },
  "module": "dist/gridy-avatars.es.js",
  "repository": "https://github.com/darosh/gridys/tree/master/packages/gridy-app-avatars",
  "runkitExample": "const {outer, random} = require('@gridy/app-avatars')\nouter(random(), 96)",
  "scripts": {
    "build": "tsc --module commonjs && rollup -c node_modules/@gridy/build/rollup.config.js",
    "doc": "typedoc --out docs --target es6 --theme minimal --mode file src",
    "generate:colors": "node -r esm generate/print-colors.js > src/colors.json",
    "generate:samples": "node -e \"const {outer} = require('./dist/gridy-avatars.umd.js'); const write = require('fs').writeFileSync; write('./assets/sample-1.svg', outer('351610', 96)); write('./assets/sample-2.svg', outer('626272', 96)); write('./assets/sample-3.svg', outer('733677', 96)); write('./assets/sample-4.svg', outer('412101', 96)); write('./assets/sample-5.svg', outer('574644', 96)); \"",
    "generate:shapes": "node -r esm generate/print-shapes.js > src/shapes.json",
    "prebuild": "del-cli dist",
    "predoc": "del-cli docs",
    "prepublish": "npm run build"
  }
}
