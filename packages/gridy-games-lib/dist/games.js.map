{"version":3,"file":"games.js","sources":["es6/utils/actions.js","es6/utils/utils.js","es6/utils/table.js","es6/TimedProxy.js","es6/Theme.js","es6/games/utils/connect/connections.js","es6/games/utils/connect/evaluateLinked.js","es6/games/utils/connect/winning.js","es6/games/utils/serialization/index.js","es6/games/utils/undo/undo.js","es6/games/base/ConnectGameBase.js","es6/games/TicTacToeGame.js","es6/games/TicTacToeRoundGame.js","es6/games/TicTacToeTriGame.js","es6/games/base/TacTickleGameBase.js","es6/games/TacTickleGame.js","es6/games/TacTickle4Game.js","es6/games/TacTickleHexGame.js","es6/games/TacTickleHex2Game.js","es6/games/TacTickleRoundGame.js","es6/games/TacTickleTriGame.js","es6/games/ConnectFourGame.js","es6/games/utils/quirkat/index.js","es6/games/base/QuirkatBoard.js","es6/games/base/QirkatGameBase.js","es6/games/QirkatGame.js","es6/games/Qirkat3Game.js","es6/games/Qirkat7Game.js","es6/games/QirkatHexGame.js","es6/games/QirkatHex7Game.js","es6/games/QirkatHex2Game.js","es6/games/base/CatchTheHareGameBase.js","es6/games/CatchTheHareGame.js","es6/games/CatchTheHare10Game.js","es6/players/MinimaxPlayer.js","es6/games/FourInARow11Game.js","es6/games/FourInARowRoundGame.js","es6/games/GomokuGame.js","es6/games/Gomoku9Game.js","es6/games/Gomoku11Game.js","es6/games/GomokuHexGame.js","es6/games/base/ReversiGameBase.js","es6/games/OthelloGame.js","es6/games/Othello4Game.js","es6/games/ReversiGame.js","es6/games/Reversi4Game.js","es6/games/Reversi6Game.js","es6/games/Reversi10Game.js","es6/games/ReversiHexGame.js","es6/games/ReversiHex4Game.js","es6/games/ReversiHex6Game.js","es6/games/ReversiHex10Game.js","es6/games/AntiReversiGame.js","es6/games/AntiReversiHexGame.js","es6/games/base/HexGameBase.js","es6/games/HexGame.js","es6/games/Hex5Game.js","es6/games/Hex7Game.js","es6/games/Hex9Game.js","es6/games/Hex13Game.js","es6/games/index.js","es6/players/AlphaBetaPlayer.js","es6/players/RandomPlayer.js","es6/players/UctPlayer.js","es6/players/UctCachedPlayer.js","es6/Info.js","es6/index.js"],"sourcesContent":["export function getMovePlace(move, cursor = 0) {\r\n    if (Array.isArray(move)) {\r\n        if (Array.isArray(move[cursor])) {\r\n            return move[cursor][0];\r\n        }\r\n        else {\r\n            return move[cursor];\r\n        }\r\n    }\r\n    else if (!cursor) {\r\n        return move;\r\n    }\r\n}\r\nexport function initHighlight(game) {\r\n    for (const tile of game.grid.tiles) {\r\n        tile.highlighted = false;\r\n    }\r\n}\r\nexport function initActions(game, moves, cursorInput = 0) {\r\n    const highlighted = [];\r\n    for (const move of moves) {\r\n        let cursor = cursorInput;\r\n        let tile = getMovePlace(move, cursor);\r\n        if (!tile) {\r\n            cursor--;\r\n            tile = getMovePlace(move, cursor);\r\n        }\r\n        tile.actions = tile.actions || [];\r\n        tile.actions.push({ move, cursor: cursor + 1 });\r\n        if (!tile.highlighted) {\r\n            tile.highlighted = true;\r\n            highlighted.push(tile);\r\n        }\r\n    }\r\n    game.actions = !cursorInput ? [] : game.actions;\r\n    game.actions.push({ highlighted });\r\n}\r\nexport function selectAction(game, tile) {\r\n    if (tile.actions) {\r\n        return getAction(game, tile.actions);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport function undoAction(game) {\r\n    let h;\r\n    // tslint:disable-next-line:no-conditional-assignment\r\n    while (h = game.actions && game.actions.pop()) {\r\n        if (h.highlighted) {\r\n            for (const i of h.highlighted) {\r\n                i.highlighted = false;\r\n                i.actions = undefined;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction getAction(game, actions) {\r\n    if (actions.length === 1) {\r\n        const action = actions[0];\r\n        const place = getMovePlace(action.move, action.cursor);\r\n        if (!place) {\r\n            return action.move;\r\n        }\r\n        undoAction(game);\r\n        initActions(game, [action.move], action.cursor);\r\n    }\r\n    else {\r\n        const moves = actions.map((a) => a.move);\r\n        const action = actions[0];\r\n        undoAction(game);\r\n        initActions(game, moves, action.cursor);\r\n    }\r\n}\r\n//# sourceMappingURL=actions.js.map","import { HexagonalGrid, normalize, rotate } from 'gridy';\r\nexport const PASS = 'pass';\r\nexport function shuffle(a) {\r\n    for (let i = a.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [a[i], a[j]] = [a[j], a[i]];\r\n    }\r\n    return a;\r\n}\r\nexport function last(a) {\r\n    return a[a.length - 1];\r\n}\r\nexport function isEmpty(a) {\r\n    return !a || !a.length;\r\n}\r\nexport function playout(game, players) {\r\n    while (!game.winner && game.possible().length) {\r\n        game.move(players[game.moves.length % players.length].select(game).move);\r\n    }\r\n}\r\nexport function parseRecord(record) {\r\n    const tokens = [];\r\n    const records = record.replace(/[^0-9a-z]+/, '').replace(/([0-9])([a-z])/g, '$1,$2').split(',');\r\n    for (const r of records) {\r\n        tokens.push(parsePosition(r));\r\n    }\r\n    return tokens;\r\n}\r\nexport function parsePosition(r) {\r\n    if (r === PASS) {\r\n        return null;\r\n    }\r\n    else {\r\n        const t = r.replace(/([a-z])([0-9])/g, '$1,$2').split(',');\r\n        t[0] = parseInt(t[0], 36) - 10;\r\n        t[1] = parseInt(t[1], 10) - 1;\r\n        return t;\r\n    }\r\n}\r\nexport function parsePositions(r) {\r\n    if (r === PASS) {\r\n        return null;\r\n    }\r\n    else {\r\n        const t = r.split('-');\r\n        return t.map(parsePosition);\r\n    }\r\n}\r\nexport function stringifyPosition(position) {\r\n    return `${String.fromCharCode(position.x + 97)}${(position.y + 1)}`;\r\n}\r\nexport function stringifyPositions(positions) {\r\n    return positions.map(stringifyPosition).join('-');\r\n}\r\nexport function stringify(game) {\r\n    return !game ? [] : game.moves.map((m) => game.moveToString(m));\r\n}\r\nexport function other(player) {\r\n    // if (!player) {\r\n    //   throw new Error('Undefined player!');\r\n    // }\r\n    return 3 - player;\r\n}\r\nexport function landscapeHex(grid) {\r\n    rotate(grid, -1);\r\n    grid.toPoint = HexagonalGrid.CUBE_TO_TWO_AXIS_YZ;\r\n    grid.toTile = HexagonalGrid.TWO_AXIS_TO_CUBE_YZ;\r\n    normalize(grid);\r\n    return grid;\r\n}\r\nexport function reset(game) {\r\n    while (game.moves.length) {\r\n        game.undo();\r\n    }\r\n}\r\nexport function update(game, record) {\r\n    if (!record) {\r\n        return;\r\n    }\r\n    // .replace(/([0-9])([a-z])/g, \"$1,$2\")\r\n    const records = record.replace(/[^0-9a-z-,]+/g, '').split(',');\r\n    while (records.length > game.moves.length) {\r\n        game.move(game.stringToMove(records[game.moves.length]));\r\n    }\r\n}\r\nexport function undoFor(game, player) {\r\n    if ((game.player === player) && game.moves.length) {\r\n        game.undo();\r\n    }\r\n    while ((game.player !== player) && game.moves.length) {\r\n        game.undo();\r\n    }\r\n}\r\n//# sourceMappingURL=utils.js.map","import { HexagonalGrid, RadialGrid, RectangularGrid, TriangularGrid } from 'gridy';\r\nimport { initActions } from './actions';\r\nexport const FIELDS = [\r\n    'title',\r\n    'type',\r\n    'items',\r\n    'linkText',\r\n    'authors',\r\n    'aliases',\r\n    'rules',\r\n    'created',\r\n    'location',\r\n    'tiles',\r\n    'original',\r\n    'grid'\r\n];\r\nconst GRIDS = new Map([\r\n    [RectangularGrid, 'Rectangular'],\r\n    [HexagonalGrid, 'Hexagonal'],\r\n    [RadialGrid, 'Radial'],\r\n    [TriangularGrid, 'Triangular']\r\n]);\r\nfunction copy(name) {\r\n    return Object.assign({}, name);\r\n}\r\nfunction domain(link) {\r\n    return (/[^.]*\\.[^.]{2,3}(?:\\.[^.]{2,3})?$/.exec((new URL(link)).hostname))[0];\r\n}\r\nfunction id(key) {\r\n    return key.replace('Game', '');\r\n}\r\nconst links = ['wiki', 'source'];\r\nfunction merge(a, b) {\r\n    for (const k of Object.keys(a)) {\r\n        if (Array.isArray(a[k])) {\r\n            a[`${k}Array`] = a[k];\r\n            a[k] = a[k].join(', ');\r\n        }\r\n    }\r\n    a.originals = getOriginals(a, b);\r\n    links.forEach((l) => {\r\n        if (a[l]) {\r\n            a[`${l}Text`] = domain(a[l]);\r\n        }\r\n    });\r\n    return a;\r\n}\r\nfunction getOriginals(a, b) {\r\n    const originals = {};\r\n    for (const k of Object.keys(b)) {\r\n        if (a[k]) {\r\n            continue;\r\n        }\r\n        if (Array.isArray(b[k])) {\r\n            const n = `${k}Array`;\r\n            b[n] = b[k];\r\n            b[k] = b[k].join(', ');\r\n            a[n] = b[n];\r\n        }\r\n        a[k] = b[k];\r\n        originals[k] = true;\r\n    }\r\n    return originals;\r\n}\r\nexport function table(games, wip = false) {\r\n    const result = [];\r\n    for (const key of Object.keys(games)) {\r\n        const a = games[key];\r\n        if (!wip && a.wip) {\r\n            continue;\r\n        }\r\n        const m = row(a, games, key);\r\n        Object.freeze(m);\r\n        result.push(m);\r\n    }\r\n    return result;\r\n}\r\nfunction row(a, games, key) {\r\n    const originalId = a.original;\r\n    const b = (a.original ? games[a.original] : {});\r\n    const m = merge(copy(a), copy(b));\r\n    m.id = id(key);\r\n    m.originalId = originalId ? id(originalId) : undefined;\r\n    let instance;\r\n    Object.defineProperty(m, 'instance', {\r\n        // tslint:disable-next-line:no-reserved-keywords\r\n        get() {\r\n            if (instance) {\r\n                return instance;\r\n            }\r\n            instance = new games[key]();\r\n            initActions(instance, instance.possible());\r\n            return Object.freeze(instance);\r\n        }\r\n    });\r\n    Object.defineProperty(m, 'tiles', {\r\n        // tslint:disable-next-line:no-reserved-keywords\r\n        get() {\r\n            return m.instance.grid.tiles.length;\r\n        }\r\n    });\r\n    Object.defineProperty(m, 'grid', {\r\n        // tslint:disable-next-line:no-reserved-keywords\r\n        get() {\r\n            return GRIDS.get(m.instance.grid.constructor);\r\n        }\r\n    });\r\n    m.original = b.title || a.title;\r\n    m.originals.original = !b.title;\r\n    m.link = m.wiki || m.source;\r\n    m.linkText = m.wikiText || m.sourceText;\r\n    m.wip = a.wip;\r\n    return m;\r\n}\r\n//# sourceMappingURL=table.js.map","import { other } from './utils';\r\nexport class TimedProxy {\r\n    constructor(game, opt = {}) {\r\n        this.limit = 10000;\r\n        this.countdown = 5;\r\n        this.countdownSignal = 3;\r\n        this.signalDelay = 100;\r\n        this.counter = -1;\r\n        this.counterSignal = -1;\r\n        this.expired = false;\r\n        this.pending = false;\r\n        this.timer = null;\r\n        this.timeoutWinner = null;\r\n        this.game = game;\r\n        this.constructor = game.constructor;\r\n        Object.assign(this, opt);\r\n        this.bind('winning');\r\n        this.bind('links');\r\n        this.bind('rulers');\r\n    }\r\n    dispose() {\r\n        this.stop();\r\n    }\r\n    get grid() {\r\n        return this.game.grid;\r\n    }\r\n    get scale() {\r\n        return this.game.scale;\r\n    }\r\n    get moves() {\r\n        return this.game.moves;\r\n    }\r\n    possible() {\r\n        return this.game.possible();\r\n    }\r\n    undo() {\r\n        this.game.undo();\r\n    }\r\n    move(m) {\r\n        this.game.move(m);\r\n        if (!this.game.winner && this.game.moves[this.game.moves.length - 1]) {\r\n            this.start();\r\n        }\r\n        else {\r\n            this.stop();\r\n            this.counter = -1;\r\n            this.counterSignal = -1;\r\n            this.expired = false;\r\n        }\r\n    }\r\n    evaluate() {\r\n        return this.game.evaluate();\r\n    }\r\n    get player() {\r\n        return this.game.player;\r\n    }\r\n    get winner() {\r\n        return this.timeoutWinner || this.game.winner;\r\n    }\r\n    get score() {\r\n        return this.game.score;\r\n    }\r\n    get landscape() {\r\n        return this.game.landscape;\r\n    }\r\n    get hull() {\r\n        return this.game.hull;\r\n    }\r\n    moveToString(move) {\r\n        return this.game.moveToString ? this.game.moveToString(move) : '';\r\n    }\r\n    stringToMove(move) {\r\n        return this.game.stringToMove(move);\r\n    }\r\n    start() {\r\n        this.stop(!!this.limit);\r\n        this.counter = -1;\r\n        this.counterSignal = -1;\r\n        this.expired = false;\r\n        this.timeoutWinner = null;\r\n        if (!this.limit) {\r\n            return;\r\n        }\r\n        let counter = this.countdown;\r\n        this.timer = setInterval(() => {\r\n            this.stop(true);\r\n            this.counter = counter;\r\n            this.timer = setInterval(() => {\r\n                counter--;\r\n                if (counter <= this.countdownSignal) {\r\n                    this.counterSignal = counter;\r\n                }\r\n                setTimeout(() => {\r\n                    this.counter = counter;\r\n                    if (!counter) {\r\n                        this.stop();\r\n                        this.expired = true;\r\n                        this.timeoutWinner = other(this.game.player);\r\n                    }\r\n                }, this.signalDelay);\r\n            }, 1000);\r\n        }, this.limit - counter * 1000 - this.signalDelay);\r\n    }\r\n    stop(pending = false) {\r\n        this.pending = pending;\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n            this.timer = null;\r\n        }\r\n    }\r\n    bind(prop) {\r\n        if (this.game[prop]) {\r\n            this[prop] = this.game[prop].bind(this.game);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=TimedProxy.js.map","export var Theme;\r\n(function (Theme) {\r\n    Theme[Theme[\"Checkers\"] = 0] = \"Checkers\";\r\n    Theme[Theme[\"CheckersHex\"] = 1] = \"CheckersHex\";\r\n    Theme[Theme[\"Gomoku\"] = 2] = \"Gomoku\";\r\n    Theme[Theme[\"Hex\"] = 3] = \"Hex\";\r\n    Theme[Theme[\"Mills\"] = 4] = \"Mills\";\r\n    Theme[Theme[\"Plastic\"] = 5] = \"Plastic\";\r\n    Theme[Theme[\"Qirkat\"] = 6] = \"Qirkat\";\r\n    Theme[Theme[\"Reversi\"] = 7] = \"Reversi\";\r\n    Theme[Theme[\"TacTickle\"] = 8] = \"TacTickle\";\r\n})(Theme || (Theme = {}));\r\nexport var Stones;\r\n(function (Stones) {\r\n    Stones[Stones[\"BlackWhite\"] = 0] = \"BlackWhite\";\r\n    Stones[Stones[\"OrangeBlue\"] = 1] = \"OrangeBlue\";\r\n    Stones[Stones[\"RedYellow\"] = 2] = \"RedYellow\";\r\n})(Stones || (Stones = {}));\r\n// tslint:disable-next-line:variable-name\r\nexport const ThemeStones = {\r\n    [Theme.Checkers]: Stones.BlackWhite,\r\n    [Theme.CheckersHex]: Stones.BlackWhite,\r\n    [Theme.Gomoku]: Stones.BlackWhite,\r\n    [Theme.Hex]: Stones.OrangeBlue,\r\n    [Theme.Mills]: Stones.BlackWhite,\r\n    [Theme.Plastic]: Stones.RedYellow,\r\n    [Theme.Qirkat]: Stones.BlackWhite,\r\n    [Theme.Reversi]: Stones.BlackWhite,\r\n    [Theme.TacTickle]: Stones.OrangeBlue\r\n};\r\n// tslint:disable-next-line:variable-name\r\nexport const StoneNames = {\r\n    [Stones.BlackWhite]: ['Black', 'White'],\r\n    [Stones.OrangeBlue]: ['Orange', 'Blue'],\r\n    [Stones.RedYellow]: ['Red', 'Yellow']\r\n};\r\n//# sourceMappingURL=Theme.js.map","export function connections(move, player, min) {\r\n    const done = {};\r\n    for (const [n, m] of move.links) {\r\n        // const opposite = move.opposite ? move.opposite(n) : -n;\r\n        const opposite = -n;\r\n        if (!done[opposite]) {\r\n            done[opposite] = true;\r\n            let o = m;\r\n            let v = 1;\r\n            while (o && (o.data === player)) {\r\n                v++;\r\n                o = o.links.get(n);\r\n                o = (o !== move) ? o : false;\r\n            }\r\n            o = (move).links.get(opposite);\r\n            while (o && (o.data === player)) {\r\n                v++;\r\n                o = o.links.get(opposite);\r\n                o = (o !== move) ? o : false;\r\n            }\r\n            if (v >= min) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=connections.js.map","export function evaluateLinked(tiles, min, player) {\r\n    let c = 0;\r\n    for (const t of tiles) {\r\n        const s = [];\r\n        for (const u of t.links) {\r\n            if (u[0] > 0) {\r\n                const to = u[1];\r\n                const fromTile = t.links.get(t.opposite ? t.opposite(u[0]) : -u[0]);\r\n                if ((!fromTile || fromTile.data !== player) && (to.data === player)) {\r\n                    s.push(u[0]);\r\n                }\r\n            }\r\n        }\r\n        if (!s.length) {\r\n            let mp = 0;\r\n            for (const d of t.links.values()) {\r\n                if (!d.data) {\r\n                    mp++;\r\n                }\r\n            }\r\n            c += mp / 8;\r\n            continue;\r\n        }\r\n        for (const k of s) {\r\n            c += evaluate(t, k, min, player);\r\n        }\r\n    }\r\n    return c;\r\n}\r\nfunction evaluate(t, k, min, player) {\r\n    const l = [];\r\n    let i = t;\r\n    while (i) {\r\n        l.push(i);\r\n        i = (i).links.get(k);\r\n        if (!i || ((i).data !== player)) {\r\n            break;\r\n        }\r\n    }\r\n    let f = 0;\r\n    i = l[0].links.get(-k);\r\n    if (i && !i.data) {\r\n        f++;\r\n    }\r\n    i = l[l.length - 1].links.get(k);\r\n    if (i && !i.data) {\r\n        f++;\r\n    }\r\n    if (!f && (l.length < min)) {\r\n        return 0;\r\n    }\r\n    return Math.pow(min, l.length + 1 + (l.length >= min ? 1 : 0)) - Math.pow(min, l.length) * (2 - f);\r\n}\r\n//# sourceMappingURL=evaluateLinked.js.map","export function winning(move, player, min) {\r\n    const done = {};\r\n    for (const n of move.links) {\r\n        if (done[-n[0]]) {\r\n            continue;\r\n        }\r\n        const result = [move];\r\n        done[-n[0]] = true;\r\n        const v = getWinning(n, player, result, move);\r\n        if (v >= min) {\r\n            return result;\r\n        }\r\n    }\r\n}\r\nfunction getWinning(n, player, result, move) {\r\n    let o = n[1];\r\n    let v = 1;\r\n    while (o && (o.data === player)) {\r\n        result.push(o);\r\n        v++;\r\n        o = o.links.get(n[0]);\r\n        o = (o !== move) ? o : false;\r\n    }\r\n    o = (move).links.get(-n[0]);\r\n    while (o && (o.data === player)) {\r\n        result.unshift(o);\r\n        v++;\r\n        o = o.links.get(-n[0]);\r\n        o = (o !== move) ? o : false;\r\n    }\r\n    return v;\r\n}\r\n//# sourceMappingURL=winning.js.map","import { parsePosition, parsePositions, stringifyPosition, stringifyPositions } from '../../../utils/index';\r\nexport function moveToString(move) {\r\n    if (!move) {\r\n        return 'pass';\r\n    }\r\n    const p = this.grid.toPoint(move);\r\n    return stringifyPosition(p);\r\n}\r\nexport function stringToMove(move) {\r\n    const p = parsePosition(move);\r\n    if (!p) {\r\n        return p;\r\n    }\r\n    const t = this.grid.tile.apply(this.grid, p);\r\n    return this.tileMap.get(t.key);\r\n}\r\nexport function movesToString(move) {\r\n    if (!move) {\r\n        return 'pass';\r\n    }\r\n    const p = (Array.isArray(move) ? move : [move]).map(this.grid.toPoint);\r\n    return stringifyPositions(p);\r\n}\r\nexport function jumpsToString(move) {\r\n    if (!move) {\r\n        return 'pass';\r\n    }\r\n    const p = (Array.isArray(move) ? move : [move]).reduce((r, t) => {\r\n        const a = (Array.isArray(t) ? t.slice() : [t]);\r\n        a.reverse();\r\n        a.forEach((d) => r.push(d));\r\n        return r;\r\n    }, []).map(this.grid.toPoint);\r\n    return stringifyPositions(p);\r\n}\r\nexport function stringsToJump(move) {\r\n    const p = parsePositions(move);\r\n    if (!p) {\r\n        return p;\r\n    }\r\n    const m = [getTile.call(this, p.shift())];\r\n    if (p.length === 1) {\r\n        m.push(getTile.call(this, p.shift()));\r\n    }\r\n    else {\r\n        while (p.length) {\r\n            const b = getTile.call(this, p.shift());\r\n            const a = getTile.call(this, p.shift());\r\n            m.push([a, b]);\r\n        }\r\n    }\r\n    return m;\r\n}\r\nfunction getTile(t) {\r\n    return this.tileMap.get(this.grid.tile.apply(this.grid, t).key);\r\n}\r\nexport function stringsToMove(move) {\r\n    const p = parsePositions(move);\r\n    if (!p) {\r\n        return p;\r\n    }\r\n    return p.map((pp) => {\r\n        const t = this.grid.tile.apply(this.grid, pp);\r\n        return this.tileMap.get(t.key);\r\n    });\r\n}\r\n//# sourceMappingURL=index.js.map","import { other } from '../../../utils';\r\nexport function undo() {\r\n    const move = this.moves.pop();\r\n    move.data = null;\r\n    this.freeTileMap.set(move.key, move);\r\n    this.player = other(this.player);\r\n    this.finished = false;\r\n    this.winner = 0;\r\n    this.playerTiles[this.player].pop();\r\n}\r\n//# sourceMappingURL=undo.js.map","import { link, toArray, toMap } from 'gridy';\r\nimport { Theme } from '../../Theme';\r\nimport { other, parseRecord } from '../../utils';\r\nimport { connections, evaluateLinked, winning } from '../utils/connect';\r\nimport { moveToString, stringToMove } from '../utils/serialization';\r\nimport { undo } from '../utils/undo';\r\nexport class ConnectGameBase {\r\n    constructor(grid, min) {\r\n        this.moves = [];\r\n        this.player = 1;\r\n        this.winner = 0;\r\n        this.finished = false;\r\n        this.playerTiles = {};\r\n        this.moveToString = moveToString.bind(this);\r\n        this.stringToMove = stringToMove.bind(this);\r\n        this.undo = undo.bind(this);\r\n        this.grid = grid;\r\n        this.min = min;\r\n        this.tileMap = toMap(this.grid.tiles);\r\n        this.freeTileMap = toMap(this.grid.tiles);\r\n        link(this.tileMap);\r\n    }\r\n    init(record) {\r\n        const moves = parseRecord(record);\r\n        for (const move of moves) {\r\n            this.move(this.tileMap.get(this.grid.tile(move[0], move[1]).key));\r\n        }\r\n    }\r\n    possible() {\r\n        if (this.finished) {\r\n            return [];\r\n        }\r\n        // const arr = toArray(this.freeTileMap) as any;\r\n        // for (const t of arr) {\r\n        //   t.sort = 0;\r\n        //   for (const n of t.links.values()) {\r\n        //     t.sort += n.data ? 1 : 0;\r\n        //   }\r\n        // }\r\n        // arr.sort((a: any, b: any) => (a.sort - b.sort));\r\n        // return arr;\r\n        return toArray(this.freeTileMap);\r\n    }\r\n    move(m) {\r\n        m.data = this.player;\r\n        (this.playerTiles[this.player] || (this.playerTiles[this.player] = [])).push(m);\r\n        this.player = other(this.player);\r\n        this.moves.push(m);\r\n        this.freeTileMap.delete(m.key);\r\n        this.winner = this.getWinner();\r\n        if ((this.moves.length === this.grid.tiles.length) || this.winner) {\r\n            this.finished = true;\r\n        }\r\n    }\r\n    evaluate() {\r\n        const a = evaluateLinked(this.playerTiles[this.player] || [], this.min, this.player);\r\n        const b = evaluateLinked(this.playerTiles[other(this.player)] || [], this.min, other(this.player));\r\n        return a - b * this.min;\r\n    }\r\n    getWinner() {\r\n        const w = connections(this.moves[this.moves.length - 1], other(this.player), this.min);\r\n        if (w) {\r\n            return other(this.player);\r\n        }\r\n        return this.moves.length === this.grid.tiles.length ? -1 : 0;\r\n    }\r\n    winning() {\r\n        const m = this.moves[this.moves.length - 1];\r\n        return winning(m, m.data, this.min);\r\n    }\r\n}\r\nConnectGameBase.theme = Theme.Gomoku;\r\n//# sourceMappingURL=ConnectGameBase.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { Theme } from '../Theme';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class TicTacToeGame extends ConnectGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, 3, 3, Rectangular8Tile), 3);\r\n    }\r\n}\r\nTicTacToeGame.title = 'Tic Tac Toe';\r\nTicTacToeGame.theme = Theme.Hex;\r\nTicTacToeGame.group = 'Connect';\r\nTicTacToeGame.aliases = ['Noughts and Crosses', 'Xs and Os', 'Exy-ozys'];\r\nTicTacToeGame.created = -1300;\r\nTicTacToeGame.location = 'Egypt';\r\nTicTacToeGame.wiki = 'https://en.wikipedia.org/wiki/Tic-tac-toe';\r\nTicTacToeGame.rules = ['Connect three pieces'];\r\nTicTacToeGame.sample = 'b2, b3, a3, c1, c3, a2, a1';\r\n//# sourceMappingURL=TicTacToeGame.js.map","import { Radial8Tile, RadialGrid, Shape } from 'gridy';\r\nimport { Theme } from '../Theme';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class TicTacToeRoundGame extends ConnectGameBase {\r\n    constructor() {\r\n        const grid = new RadialGrid(1, true, Shape.Even, 3, 4, Radial8Tile, 1);\r\n        super(grid, 3);\r\n    }\r\n}\r\nTicTacToeRoundGame.title = 'Tic Tac Toe Round';\r\nTicTacToeRoundGame.theme = Theme.Hex;\r\nTicTacToeRoundGame.group = 'Connect';\r\nTicTacToeRoundGame.original = 'TicTacToeGame';\r\nTicTacToeRoundGame.sample = 'c3, a4, b3, a3, a2, b4, c4';\r\n//# sourceMappingURL=TicTacToeRoundGame.js.map","import { Shape, TriangularGrid } from 'gridy';\r\nimport { Theme } from '../Theme';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class TicTacToeTriGame extends ConnectGameBase {\r\n    constructor() {\r\n        super(new TriangularGrid(1, false, Shape.Triangular, 3, 3), 3);\r\n        this.landscape = true;\r\n    }\r\n}\r\nTicTacToeTriGame.title = 'Tic Tac Toe Tri';\r\nTicTacToeTriGame.theme = Theme.Hex;\r\nTicTacToeTriGame.group = 'Connect';\r\nTicTacToeTriGame.original = 'TicTacToeGame';\r\nTicTacToeTriGame.sample = 'a2, b2, b1, a1, c1';\r\n//# sourceMappingURL=TicTacToeTriGame.js.map","import { link, toMap } from 'gridy';\r\nimport { Theme } from '../../Theme';\r\nimport { other } from '../../utils';\r\nimport { connections, winning } from '../utils/connect';\r\nimport { movesToString, stringsToMove } from '../utils/serialization';\r\nexport class TacTickleGameBase {\r\n    constructor(grid, min = 3, directions, lines) {\r\n        this.moves = [];\r\n        this.player = 1;\r\n        this.winner = 0;\r\n        this.playerTiles = { 1: [], 2: [] };\r\n        this.moveToString = movesToString.bind(this);\r\n        this.stringToMove = stringsToMove.bind(this);\r\n        this.finished = false;\r\n        this.grid = grid;\r\n        this.tileMap = toMap(grid.tiles);\r\n        link(this.tileMap);\r\n        this.min = min;\r\n        this.init(lines);\r\n        this.directions = directions.map(([d]) => d);\r\n    }\r\n    possible() {\r\n        // throw new Error(\"Method not implemented.\");\r\n        if (this.finished) {\r\n            return [];\r\n        }\r\n        return this.grid.tiles.reduce((r, t) => {\r\n            if (t.data !== this.player) {\r\n                return r;\r\n            }\r\n            for (const [dir, nei] of t.links) {\r\n                if (!nei.data && (this.directions.indexOf(dir) > -1)) {\r\n                    r.push([t, nei]);\r\n                }\r\n            }\r\n            return r;\r\n        }, []);\r\n    }\r\n    move(m) {\r\n        m[1].data = m[0].data;\r\n        m[0].data = null;\r\n        this.player = other(this.player);\r\n        this.moves.push(m);\r\n        const w = connections(m[1], m[1].data, this.min);\r\n        if (w) {\r\n            this.finished = true;\r\n            this.winner = m[1].data;\r\n        }\r\n        else if (this.moves.length === (this.grid.tiles.length * 2)) {\r\n            this.finished = true;\r\n            this.winner = -1;\r\n        }\r\n    }\r\n    undo() {\r\n        const move = this.moves.pop();\r\n        move[0].data = move[1].data;\r\n        move[1].data = null;\r\n        this.player = other(this.player);\r\n        this.finished = false;\r\n        this.winner = 0;\r\n    }\r\n    evaluate() {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    winning() {\r\n        const m = this.moves[this.moves.length - 1];\r\n        return winning(m[1], m[1].data, this.min);\r\n    }\r\n    init(lines = [[0, 0, 1], [0, this.grid.y - 1, 0]]) {\r\n        for (const [xx, y, skip] of lines) {\r\n            for (let x = xx; x < xx + 4; x++) {\r\n                const t = this.tileMap.get(this.grid.tile(x, y).key);\r\n                const p = (x + skip) % 2 + 1;\r\n                if (!t) {\r\n                    continue;\r\n                }\r\n                t.data = p;\r\n                // this.playerTiles[p].push(t);\r\n            }\r\n        }\r\n    }\r\n}\r\nTacTickleGameBase.theme = Theme.TacTickle;\r\nTacTickleGameBase.move = true;\r\n//# sourceMappingURL=TacTickleGameBase.js.map","import { Rectangular8Tile, RectangularGrid, RectangularTile, Shape } from 'gridy';\r\nimport { TacTickleGameBase } from './base/TacTickleGameBase';\r\nexport class TacTickleGame extends TacTickleGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 4, 5, Rectangular8Tile), 3, RectangularTile.directions);\r\n    }\r\n}\r\nTacTickleGame.title = 'Tac-tickle';\r\nTacTickleGame.group = 'Move to Connect';\r\nTacTickleGame.authors = ['NRICH'];\r\nTacTickleGame.source = 'https://nrich.maths.org/1240';\r\nTacTickleGame.created = '2000';\r\nTacTickleGame.rules = ['Move to connect three pieces'];\r\nTacTickleGame.sample = 'c5-c4, b5-b4, d1-d2, a1-a2, a5-b5, b4-a4, d2-d3';\r\n//# sourceMappingURL=TacTickleGame.js.map","import { Rectangular8Tile, RectangularGrid, RectangularTile, Shape } from 'gridy';\r\nimport { TacTickleGameBase } from './base/TacTickleGameBase';\r\nexport class TacTickle4Game extends TacTickleGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 4, 4, Rectangular8Tile), 3, RectangularTile.directions);\r\n    }\r\n}\r\nTacTickle4Game.title = 'Tac-tickle 4x4';\r\nTacTickle4Game.group = 'Move to Connect';\r\nTacTickle4Game.aliases = 'Tic-tackle';\r\nTacTickle4Game.original = 'TacTickleGame';\r\nTacTickle4Game.sample = 'c4-c3, a1-a2, d1-d2, d4-c4, c3-b3, c1-c2, d2-d1, c4-c3, b3-a3, c2-d2';\r\n//# sourceMappingURL=TacTickle4Game.js.map","import { HexagonalGrid, HexagonalTile, Shape } from 'gridy';\r\nimport { TacTickleGameBase } from './base/TacTickleGameBase';\r\nexport class TacTickleHexGame extends TacTickleGameBase {\r\n    constructor() {\r\n        super(new HexagonalGrid(1, true, Shape.Even, 4, 5), 3, HexagonalTile.directions);\r\n    }\r\n}\r\nTacTickleHexGame.title = 'Tac-tickle Hex';\r\nTacTickleHexGame.group = 'Move to Connect';\r\nTacTickleHexGame.original = 'TacTickleGame';\r\nTacTickleHexGame.sample = 'b1-c2, d5-d4, c5-c4, c1-d2, a5-b4, b5-a5, c4-b3';\r\n//# sourceMappingURL=TacTickleHexGame.js.map","import { HexagonalGrid, HexagonalTile, normalize, Shape } from 'gridy';\r\nimport { TacTickleGameBase } from './base/TacTickleGameBase';\r\nexport class TacTickleHex2Game extends TacTickleGameBase {\r\n    constructor() {\r\n        const grid = new HexagonalGrid(1, true, Shape.Hexagonal, 4);\r\n        normalize(grid);\r\n        super(grid, 3, HexagonalTile.directions, [[3, 0, 0], [0, 6, 0]]);\r\n    }\r\n}\r\nTacTickleHex2Game.title = 'Tac-tickle Hex2';\r\nTacTickleHex2Game.group = 'Move to Connect';\r\nTacTickleHex2Game.original = 'TacTickleGame';\r\n// tslint:disable-next-line:max-line-length\r\nTacTickleHex2Game.sample = 'g1-f2, f1-e2, f2-f3, d7-d6, f3-e4, b7-b6, e4-d5, d6-c6, d5-c5, d1-d2, a7-b7, e2-d3, e1-f1, d3-c4, f1-e2, d2-d3, c5-b5, b6-c5';\r\n//# sourceMappingURL=TacTickleHex2Game.js.map","import { Radial8Tile, RadialGrid, RadialTile, Shape } from 'gridy';\r\nimport { TacTickleGameBase } from './base/TacTickleGameBase';\r\nexport class TacTickleRoundGame extends TacTickleGameBase {\r\n    constructor() {\r\n        super(new RadialGrid(1, false, Shape.Even, 4, 5, Radial8Tile, 1), 3, RadialTile.directions, [[0, 1, 1], [0, 4, 0]]);\r\n    }\r\n}\r\nTacTickleRoundGame.title = 'Tac-tickle Round';\r\nTacTickleRoundGame.group = 'Move to Connect';\r\nTacTickleRoundGame.original = 'TacTickleGame';\r\nTacTickleRoundGame.sample = 'c5-c4, c2-c3, b2-b3, b5-b4, b3-a3, d5-d4, c4-c5, a2-b2';\r\n//# sourceMappingURL=TacTickleRoundGame.js.map","import { Shape, TriangularGrid, TriangularTile } from 'gridy';\r\nimport { TacTickleGameBase } from './base/TacTickleGameBase';\r\nexport class TacTickleTriGame extends TacTickleGameBase {\r\n    constructor() {\r\n        super(new TriangularGrid(1, true, Shape.Rhombus, 4, 4), 3, TriangularTile.directions1, [[2, 0, 1], [2, 3, 1]]);\r\n    }\r\n}\r\nTacTickleTriGame.title = 'Tac-tickle Tri';\r\nTacTickleTriGame.group = 'Move to Connect';\r\nTacTickleTriGame.original = 'TacTickleGame';\r\n// tslint:disable-next-line:max-line-length\r\nTacTickleTriGame.sample = 'f1-e2, c4-d3, f4-g4, e4-f3, g4-h3, d3-e3, d4-c4, e1-f1, c4-d3, f3-g3, d3-c3, f1-g1, d1-c2, g3-h2, c2-d2';\r\n//# sourceMappingURL=TacTickleTriGame.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { Theme } from '../Theme';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class ConnectFourGame extends ConnectGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, 7, 6, Rectangular8Tile), 4);\r\n        this.landscape = true;\r\n    }\r\n    possible() {\r\n        if (this.finished) {\r\n            return [];\r\n        }\r\n        const moves = [];\r\n        for (let x = 0; x < this.grid.x; x++) {\r\n            for (let y = 0; y < this.grid.y; y++) {\r\n                const m = this.tileMap.get([x, y].toString());\r\n                if (!m.data) {\r\n                    moves.push(m);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return moves;\r\n    }\r\n}\r\nConnectFourGame.title = 'Connect Four';\r\nConnectFourGame.theme = Theme.Plastic;\r\nConnectFourGame.group = 'Connect';\r\nConnectFourGame.authors = ['Howard Wexler', 'Ned Strongin'];\r\nConnectFourGame.created = 1974;\r\nConnectFourGame.wiki = 'https://en.wikipedia.org/wiki/Connect_Four';\r\nConnectFourGame.alias = ['Captain\\'s Mistress',\r\n    'Four Up', 'Plot Four', 'Find Four', 'Four in a Row', 'Four in a Line', 'Gravitrips'];\r\nConnectFourGame.rules = ['Connect four pieces'];\r\nConnectFourGame.sample = 'c1, d1, c2, e1, b1, f1, g1, d2, d3, c3, e2, e3, e4';\r\n//# sourceMappingURL=ConnectFourGame.js.map","import { other } from '../../../utils';\r\nexport function isDiagonalCenter(a, b) {\r\n    return isDiagonal(a, b) && (isCenter(a) || isCenter(b));\r\n}\r\nfunction isDiagonal(a, b) {\r\n    return (a.x !== b.x && a.y !== b.y);\r\n}\r\nfunction isCenter(a) {\r\n    return ((a.x % 2) && !(a.y % 2));\r\n}\r\nexport function quirkatSetup(tiles) {\r\n    let i = 0;\r\n    const mid = (tiles.length - 1) / 2;\r\n    for (const t of tiles) {\r\n        if (i < mid) {\r\n            t.data = 1;\r\n        }\r\n        else if (i > mid) {\r\n            t.data = 2;\r\n        }\r\n        i++;\r\n    }\r\n}\r\nexport function jumpsPossible() {\r\n    const o = other(this.player);\r\n    return this.grid.tiles.reduce((r, t) => {\r\n        if ((t).data !== this.player) {\r\n            return r;\r\n        }\r\n        const leaves = this.multiJumps({ tile: t }, o);\r\n        return r.concat(leaves);\r\n    }, []);\r\n}\r\nexport function multiJumps(parent, o, leaves = [], depth = 0, removed = []) {\r\n    const t = parent.tile;\r\n    parent.jumps = [];\r\n    if (!removed.length) {\r\n        removed.push(t);\r\n    }\r\n    for (const [n, m] of t.links) {\r\n        if (((m).data === o) && (removed.indexOf(m) === -1)) {\r\n            const d = (m).links.get(n);\r\n            if (d && (!d.data || (removed.indexOf(d) > -1))) {\r\n                const r = { tile: d, removed: m, depth, parent };\r\n                parent.jumps.push(r);\r\n                this.multiJumps(r, o, leaves, depth + 1, removed.concat([m]));\r\n            }\r\n        }\r\n    }\r\n    if (!parent.jumps.length && depth) {\r\n        leaves.push(parent);\r\n    }\r\n    return leaves;\r\n}\r\nexport function leavesToMoves(r) {\r\n    return r.map(this.leaveToMove);\r\n}\r\nexport function leaveToMove(nodeInput) {\r\n    const result = [];\r\n    let node = nodeInput;\r\n    while (node) {\r\n        if (node.parent) {\r\n            result.unshift([node.tile, node.removed]);\r\n        }\r\n        else {\r\n            result.unshift(node.tile);\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return result;\r\n}\r\nexport function expandJumps(leaves) {\r\n    return leaves.reduce((r, t) => {\r\n        let node = t;\r\n        while (node.parent) {\r\n            r.push(node);\r\n            node = node.parent;\r\n        }\r\n        return r;\r\n    }, []);\r\n}\r\n//# sourceMappingURL=index.js.map","import { link, toMap } from 'gridy';\r\nimport { Theme } from '../../Theme';\r\nimport { isDiagonalCenter } from '../utils/quirkat';\r\nexport class QuirkatBoard {\r\n    constructor(grid) {\r\n        this.moves = [];\r\n        this.player = 1;\r\n        this.scale = 1;\r\n        this.winner = 0;\r\n        this.grid = grid;\r\n        this.tileMap = toMap(this.grid.tiles);\r\n        link(this.tileMap);\r\n        for (const t of this.grid.tiles) {\r\n            for (const [n, m] of (t).links) {\r\n                if (isDiagonalCenter(m, t)) {\r\n                    t.links.delete(n);\r\n                    m.links.delete(-n);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    rulers() {\r\n        const m = new Map();\r\n        for (const t of this.grid.tiles) {\r\n            for (const l of (t).links) {\r\n                const keys = [t.key, l[1].key];\r\n                keys.sort();\r\n                m.set(keys.toString(), [t, l[1]]);\r\n            }\r\n        }\r\n        return Array.from(m.values());\r\n    }\r\n}\r\nQuirkatBoard.theme = Theme.Qirkat;\r\nQuirkatBoard.move = true;\r\n//# sourceMappingURL=QuirkatBoard.js.map","import { other } from '../../utils';\r\nimport { quirkatSetup } from '../utils/quirkat';\r\nimport { jumpsToString, stringsToJump } from '../utils/serialization';\r\nimport { QuirkatBoard } from './QuirkatBoard';\r\nexport class QirkatGameBase extends QuirkatBoard {\r\n    constructor(grid, maxMoves) {\r\n        super(grid);\r\n        this.moveToString = jumpsToString.bind(this);\r\n        this.stringToMove = stringsToJump.bind(this);\r\n        this.finished = false;\r\n        this.maxMoves = maxMoves;\r\n        quirkatSetup(grid.tiles);\r\n        const stones = (grid.tiles.length - 1) / 2;\r\n        this.score = { 1: stones, 2: stones };\r\n    }\r\n    move(m) {\r\n        const first = m[0];\r\n        let last = m[m.length - 1];\r\n        last = Array.isArray(last) ? last[0] : last;\r\n        for (let i = 1; i < m.length; i++) {\r\n            if (Array.isArray(m[i])) {\r\n                this.score[m[i][1].data]--;\r\n                m[i][1].data = null;\r\n            }\r\n        }\r\n        last.data = first.data;\r\n        if (last !== first) {\r\n            first.data = null;\r\n        }\r\n        this.player = other(this.player);\r\n        this.moves.push(m);\r\n        this.winner = this.getWinner();\r\n        if (this.winner) {\r\n            this.finished = true;\r\n        }\r\n    }\r\n    undo() {\r\n        const m = this.moves.pop();\r\n        const first = m[0];\r\n        let last = m[m.length - 1];\r\n        last = Array.isArray(last) ? last[0] : last;\r\n        const o = other(last.data);\r\n        for (let i = m.length - 1; i > 0; i--) {\r\n            const n = m[i];\r\n            if (Array.isArray(n)) {\r\n                this.score[o]++;\r\n                n[1].data = o;\r\n            }\r\n        }\r\n        first.data = last.data;\r\n        if (last !== first) {\r\n            last.data = null;\r\n        }\r\n        this.winner = 0;\r\n        this.finished = false;\r\n        this.player = other(this.player);\r\n    }\r\n    getWinner() {\r\n        if (!this.score[1]) {\r\n            return 2;\r\n        }\r\n        else if (!this.score[2]) {\r\n            return 1;\r\n        }\r\n        else if (this.moves.length === this.maxMoves) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    possible() {\r\n        if (this.finished) {\r\n            return [];\r\n        }\r\n        let result = this.jumpsPossible();\r\n        result = this.topJumps(result);\r\n        result = this.leavesToMoves(result);\r\n        if (!result.length) {\r\n            result = this.simplePossible();\r\n        }\r\n        return result;\r\n    }\r\n    leavesToMoves(r) {\r\n        return r.map(this.leaveToMove);\r\n    }\r\n    leaveToMove(nodeInput) {\r\n        const result = [];\r\n        let node = nodeInput;\r\n        while (node) {\r\n            if (node.parent) {\r\n                result.unshift([node.tile, node.removed]);\r\n            }\r\n            else {\r\n                result.unshift(node.tile);\r\n            }\r\n            node = node.parent;\r\n        }\r\n        return result;\r\n    }\r\n    topJumps(r) {\r\n        if (!r.length) {\r\n            return r;\r\n        }\r\n        r.sort((a, b) => b.depth - a.depth);\r\n        const d = r[0].depth;\r\n        return r.filter((t) => t.depth === d);\r\n    }\r\n    jumpsPossible() {\r\n        const o = other(this.player);\r\n        return this.grid.tiles.reduce((r, t) => {\r\n            if ((t).data !== this.player) {\r\n                return r;\r\n            }\r\n            const leaves = this.multiJumps({ tile: t }, o);\r\n            return r.concat(leaves);\r\n        }, []);\r\n    }\r\n    multiJumps(parent, o, leaves = [], depth = 0, removed = []) {\r\n        const t = parent.tile;\r\n        parent.jumps = [];\r\n        for (const [n, m] of t.links) {\r\n            if (((m).data === o) && (removed.indexOf(m) === -1)) {\r\n                const d = (m).links.get(n);\r\n                if (d && !d.data) {\r\n                    const r = { tile: d, removed: m, depth, parent };\r\n                    parent.jumps.push(r);\r\n                    this.multiJumps(r, o, leaves, depth + 1, removed.concat([m]));\r\n                }\r\n            }\r\n        }\r\n        if (!parent.jumps.length && depth) {\r\n            leaves.push(parent);\r\n        }\r\n        return leaves;\r\n    }\r\n    jumpPossible(t, p, o) {\r\n        const result = [];\r\n        for (const [n, m] of t.links) {\r\n            if ((m).data === o) {\r\n                const d = (m).links.get(n);\r\n                if (d && !d.data) {\r\n                    result.push([t, [d, m]]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    simplePossible() {\r\n        return this.grid.tiles.reduce((r, t) => {\r\n            if ((t).data !== this.player) {\r\n                return r;\r\n            }\r\n            for (const [n, m] of t.links) {\r\n                if (!(m).data) {\r\n                    r.push([t, m]);\r\n                }\r\n            }\r\n            return r;\r\n        }, []);\r\n    }\r\n}\r\n//# sourceMappingURL=QirkatGameBase.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { QirkatGameBase } from './base/QirkatGameBase';\r\nconst SIZE = 5;\r\nexport class QirkatGame extends QirkatGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, SIZE, SIZE, Rectangular8Tile), SIZE * SIZE * 3);\r\n    }\r\n}\r\nQirkatGame.title = 'Qirkat';\r\nQirkatGame.group = 'Qirkat';\r\nQirkatGame.created = 950;\r\nQirkatGame.aliases = ['Alquerque'];\r\nQirkatGame.location = 'Middle East';\r\nQirkatGame.wiki = 'https://en.wikipedia.org/wiki/Alquerque';\r\nQirkatGame.rules = ['Capture all pieces'];\r\n// tslint:disable-next-line:max-line-length\r\nQirkatGame.sample = 'c2-c3, c4-c3-c2, c1-c2-c3, d2-c1, c3-c4, c5-c4-c3, b4-c3-d2, e1-d2-c3, b2-c2, e2-e1, c2-c3-c4, d4-c4-b4-b3-b2, a2-b2-c2, c1-c2-c3, b5-b4, d3-d4, b4-c3-d2, d1-d2-d3, a5-b5, d5-c5, b5-c5-d5, e5-d5-c5, a3-b2, d4-e5, b2-a2, e3-e2, a1-b2, c5-d4, b2-c2, e4-e3, a4-a5, e1-d2, a2-b2, e5-e4, b2-a3, d2-c2-b2, a3-b2-c1, d3-d2, a5-a4, d4-e5, c1-b2, e2-e1, b2-c1, e3-e2, c1-d2-e3, e1-d1, e3-e2-e1-d1-c1, e4-e3, c1-b2, e3-e2, b1-a1, e2-e3, b2-a3, e5-e4, a3-b2, e3-e2, b2-c3, e4-e5, a1-a2, e2-d2, c3-d2-e1, e5-d5, a4-a5, d5-e5, a2-a3, e5-e4, a5-b5, e4-e5, b5-c5, e5-e4, c5-d4, e4-d4-c4, a3-b3, c4-b4, b3-b4-b5';\r\n//# sourceMappingURL=QirkatGame.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { QirkatGameBase } from './base/QirkatGameBase';\r\nconst SIZE = 3;\r\nexport class Qirkat3Game extends QirkatGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, SIZE, SIZE, Rectangular8Tile), SIZE * SIZE * 3);\r\n    }\r\n}\r\nQirkat3Game.title = 'Qirkat 3x3';\r\nQirkat3Game.group = 'Qirkat';\r\nQirkat3Game.original = 'QirkatGame';\r\n// tslint:disable-next-line:max-line-length\r\nQirkat3Game.sample = 'b1-b2, b3-b2-b1, a2-b2, b1-b2-b3, a3-a2, c1-b2, a2-a3, b2-b1, a1-b1-c1, b3-b2, c1-b1, b2-c1, b1-a1, c1-b1, a1-b1-c1, c2-b2, c1-b1, b2-a2, a3-a2-a1, c3-b3, b1-c1, b3-c3, a1-a2, c3-b3, a2-b2, b3-b2-b1, c1-b1-a1';\r\n//# sourceMappingURL=Qirkat3Game.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { QirkatGameBase } from './base/QirkatGameBase';\r\nconst SIZE = 7;\r\nexport class Qirkat7Game extends QirkatGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, SIZE, SIZE, Rectangular8Tile), SIZE * SIZE * 3);\r\n    }\r\n}\r\nQirkat7Game.title = 'Qirkat 7x7';\r\nQirkat7Game.group = 'Qirkat';\r\nQirkat7Game.original = 'QirkatGame';\r\n// tslint:disable-next-line:max-line-length\r\nQirkat7Game.sample = 'c4-d4, e4-d4-c4, b4-c4-d4, d6-c5-b4, d4-d5-d6, e7-d6-c5, b6-c5-d4, b4-b5-b6-c6-d6, c7-d7-e7-d6-c5, f6-e7, d4-e5-f6-e6-d6, f5-e5, a3-b4, e5-d6-c7, b7-c7-d7, e7-d7-c7, b4-a3, g5-f6, c5-b6, f6-g5, b6-c5, f7-f6, c5-b6, f6-e5, c3-d4, e1-d2-c3, c2-c3-c4, e5-d4-c3-c4-c5, b6-c5-d4, e3-d3-c3-d4-e5, d1-e1, f1-e1-d1, c1-d1-e1-e2-e3, f4-e3-d2, a5-b5, c7-d7, b5-b6, g5-f4, b2-c2, d2-c2-b2-b3-b4, a4-b4-c4, g6-g5, b1-b2, e5-f5, b6-c6, g7-f6, c6-c7, d7-c7-b7, a7-b7-c7, f6-e5, b2-c2, f2-e2, a1-b1, f5-f6, a3-b4, e5-e4, b4-a5, g1-f1, a5-b6, g3-f2, c4-c3, g4-g3, a6-a5, f2-e3, b1-a1, e4-d4, c3-d4-e5-f6-g7, g5-f6, g7-f6-e5, f4-e5-d6, c7-d6-e5, g3-f2, a1-b1, g2-g3, e5-f6, e3-d3, f6-f5, f2-e3, a2-a1, d3-d2, b6-a6, d2-c2-b2, b1-b2-b3, e3-e4, a6-a7, e2-e1, a5-a6, e4-e3, f5-e5, g3-g4, a6-a5, g4-g3, e5-d6, e3-e4, b3-b4, e1-d2, d6-d7, d2-c1, b4-c5, f3-f2, c5-c4, f1-g1, d7-c7, e4-e3, a5-b6, f2-f3, c7-b7, g3-g4, b6-c6, e3-e4, c4-b4, c1-c2, b4-c5, g1-f1, c5-c4, g4-f4, a1-b1, c2-c3, c4-c3-c2, e4-d4, c6-d6, d4-e5, d6-c5, e5-d4, c5-d4-e3-f3-g3-f4-e5, f1-g1, e5-d6, g1-f2, b1-b2, f2-e2, c2-d2, e2-d2-c2-b2-a2, d6-c5, a2-a1, a7-a6, a1-b1, c5-c4, b1-a1, a6-a5, a1-b2, a5-a4, b2-c3, c4-c3-c2';\r\n//# sourceMappingURL=Qirkat7Game.js.map","import { HexagonalGrid, normalize, Shape } from 'gridy';\r\nimport { QirkatGameBase } from './base/QirkatGameBase';\r\nconst SIZE = 5;\r\nexport class QirkatHexGame extends QirkatGameBase {\r\n    constructor() {\r\n        const grid = new HexagonalGrid(1, true, Shape.Rhombus, SIZE, SIZE);\r\n        normalize(grid);\r\n        super(grid, SIZE * SIZE * SIZE * 3);\r\n        this.hull = true;\r\n    }\r\n}\r\nQirkatHexGame.title = 'Qirkat Hex';\r\nQirkatHexGame.group = 'Qirkat';\r\nQirkatHexGame.original = 'QirkatGame';\r\n// tslint:disable-next-line:max-line-length\r\nQirkatHexGame.sample = 'c2-c3, c4-c3-c2, c1-c2-c3, d1-c2, c3-c2-c1, d3-c3, b3-c3-d3-d2-d1, e3-d3, a3-b3, e2-e3, b3-a3, e1-e2, d1-c2, d3-d2, a4-b3, d4-d3, a5-a4, c5-b5-a5-b4-c3, c2-c3-c4, d3-c4-b5, b3-b4, b5-b4-b3, a3-b3-c3-d2-e1, d5-c5, e1-d1, e2-d3, d1-d2, d3-d2-d1, c1-d1-e1, e3-d3, e1-d1, c5-d5, b2-b3, d3-d2, d1-d2-d3, e4-e3, b3-c2, e3-d3-c3-c2-c1, b1-c1-d1, d5-d4, d1-c2, d4-d3, c2-c3, d3-c3-b3, a4-b3-c2, e5-d5, c2-c1, d5-e4, c1-b1, e4-e3, a2-a3, e3-d4, b1-b2, d4-e3, a3-a2, e3-d4, a2-a3, d4-e3, a3-a4, e3-d4, a4-a3, d4-e3, a3-a4, e3-e2, a1-a2, e2-e1, a2-a3, e1-d1, b2-c1, d1-c1-b1, a3-a2, b1-a1, a2-a3, a1-a2, a3-a2-a1';\r\n//# sourceMappingURL=QirkatHexGame.js.map","import { HexagonalGrid, normalize, Shape } from 'gridy';\r\nimport { QirkatGameBase } from './base/QirkatGameBase';\r\nconst SIZE = 7;\r\nexport class QirkatHex7Game extends QirkatGameBase {\r\n    constructor() {\r\n        const grid = new HexagonalGrid(1, true, Shape.Rhombus, SIZE, SIZE);\r\n        normalize(grid);\r\n        super(grid, SIZE * SIZE * 3);\r\n        this.hull = true;\r\n    }\r\n}\r\nQirkatHex7Game.title = 'Qirkat Hex 7x7';\r\nQirkatHex7Game.group = 'Qirkat';\r\nQirkatHex7Game.original = 'QirkatGame';\r\n// tslint:disable-next-line:max-line-length\r\nQirkatHex7Game.sample = 'd3-d4, d5-d4-d3, d2-d3-d4, d6-d5, d4-d5-d6, d7-d6-d5, c3-d2, e1-d2-c3, b3-c3-d3, e3-d3-c3, b4-c3-d2, e2-e3, b5-b4, d5-c5-b5-c4-d3, d2-d3-d4, e3-d4-c5, b6-c5-d4, f1-e2, d4-d5, e5-d5-c5, c6-c5-c4, f2-f1, c4-c5, f3-f2, a7-b6, e4-e5, c5-b5, e5-d5, b4-c3, e6-d7, b7-c6, d5-c6-b7, c7-b7-a7, f2-e3, b5-c5, f5-e6, b2-b3, e3-d3, c3-d3-e3-e2-e1, g3-f3, b1-b2, d7-c7, b3-b4, f3-e4, c1-b1, g1-f2, e1-f1-g1-f2-e3-e4-e5-f4-g3-g2-g1, e6-f5, d1-e1, c7-b7, a7-b7-c7, f5-e5, e1-d2, e7-e6, c5-c4, e5-d5, c7-c6, d5-c6-b7-b6-b5-b4-b3-c2-d1-d2-d3-c4-b5, a6-b5-c4, e6-e5, c4-d3, f6-f5, a3-b3, e5-e6, d3-e2, e6-d7, a2-a3, f5-e5, b3-b4, e5-f4, b4-b3, f4-e5, a3-a2, d7-e6, b3-a3, e5-f4, g1-f2, g4-g3, e2-f1, f7-f6, f1-g1, f6-f7, a4-b3, g3-f3, b3-c3, f3-f2-f1, g1-f1-e1, e6-e5, c3-c4, g5-f5, c4-c3, f5-e6, e1-e2, f7-f6, c3-c2, f6-f7, e2-e3, f4-f5, c2-c1, f5-g4, a3-a4, e5-f5, a4-b3, e6-d7, e3-d4, f5-f6, d4-c5, f6-f5, a5-b5, f5-f4, b5-b6, f7-f6, a2-a3, g7-f7, b6-b7, f6-g5, c1-d1, g6-g7, c5-c6, g5-g6, b3-c3, f7-f6, b2-c1, f4-f3, c1-b2, g6-g5, d1-e1, f6-f7, c6-d5, d7-c7, b7-c7-d7, f7-f6, b1-a2, f3-f4, d5-e4, g7-f7, b2-b1, f7-e7, d7-e7-f7-f6-f5-f4-f3, g4-f5, c3-d3, f5-f4, f3-f4-f5, g5-f5-e5-e4-e3-d3-c3, a3-b3, c3-b3-a3, a2-a3-a4';\r\n//# sourceMappingURL=QirkatHex7Game.js.map","import { HexagonalGrid, normalize, Shape } from 'gridy';\r\nimport { QirkatGameBase } from './base/QirkatGameBase';\r\nconst SIZE = 5;\r\nexport class QirkatHex2Game extends QirkatGameBase {\r\n    constructor() {\r\n        const grid = new HexagonalGrid(1, true, Shape.Hexagonal, SIZE, SIZE);\r\n        normalize(grid);\r\n        super(grid, SIZE * SIZE * SIZE * 3);\r\n        this.hull = true;\r\n    }\r\n}\r\nQirkatHex2Game.title = 'Qirkat Hex2';\r\nQirkatHex2Game.group = 'Qirkat';\r\nQirkatHex2Game.original = 'QirkatGame';\r\n// tslint:disable-next-line:max-line-length\r\nQirkatHex2Game.sample = 'e6-e5, e4-e5-e6, e7-e6-e5, f6-e7, e8-e7-e6, f7-e7, d8-e7-f6, g5-f6-e7, e6-e7-e8, f5-f6, e8-f7, g7-f7-e7, d7-e7-f7-f6-f5, g4-f5-e6-e5-e4, e9-f8-g7-g6-g5, h5-g5-f5, d5-e5, f5-e5-d5-d6-d7, c7-d7-e7, f4-f5, e7-e6, f5-e6-d7, c8-d7-e6, h6-h5, d4-d5, g3-g4, d9-d8, e3-d4, c5-d4-e3-f3-g3-g4-g5, h5-g5-f5-e6-d7-d8-d9, c9-d9-e9, e4-e3, d3-e3-f3, f2-f3-f4, c4-d3, e2-d3-c4, c3-c4-c5, e1-d2-c3, b4-c3-d2, i4-h5, a5-b4, h3-g4, d2-e1, g4-h3, d5-d6, f4-f5, b9-c9, h4-g5, c6-d5, f5-e5, d6-e5-f4, g2-f3, f4-f3-f2, f1-f2-f3, d5-d4, h3-g3, e1-e2, h5-g6, d4-d5, i3-h4, e9-e8, g6-f7, e8-f7-g6-g5-g4-g3-g2-f3-e4, h2-g3, d5-c6, g1-g2, e4-d5, g3-f3, b4-a5, f3-e3, e2-e3-e4, i2-h3, b5-b4, h3-i2, c5-b5, i1-h2, e4-f3, g2-f3-e4, d5-e4-f3, h4-i3, b4-c3, i2-h3, b5-c5, h1-g1, c6-d5, i5-h6, f3-e3, h2-i1, c9-d9, i1-h1, d5-d6, i3-h4, e3-f3, h6-i5, b8-c7, h4-h5, c7-c6, h1-i1, c5-b5, h5-h4, a9-b9, h3-i2, f3-g2, g1-g2-g3, a8-a9, i2-i3, c3-b4, g3-g2, c6-c5, i5-i4, b5-c4, g2-g3, d6-d5, i3-h3, c4-d3, i1-i2, c5-b5, h4-g5, d3-d4, g5-g6, b9-b8, h3-i3, d5-e4, g3-f3, e4-f3-g2, g6-h5, d9-d8, h5-g5, d4-e3, i3-h4, a7-a8, i2-i1, b7-c6, h4-h5, b8-c7, g5-g6, c7-b7, g6-g7, d8-e7, h5-g6, a9-b8, g7-f7, e7-f7-g7-g6-g5, i1-h1, g5-f5, h1-g2-f3-e3-d3, b7-a7, d3-e3, b8-b9, i4-i3, b9-b8, i3-i2, a8-b7, e3-f3, b6-c5, f3-e4, f5-f4, e4-e5, f4-e5-d6, i2-i1, b7-c7, i1-h2, b8-a9, h2-h1, a7-a8, h1-g1, d6-e5, g1-f2, c7-d6, f2-f1, d6-d7, f1-e1, d7-e6, e1-e2, a8-a7, e2-f1, c5-d4, f1-e1, c6-d5, e1-d2, b4-c3, d2-c3-b4-b5-b6, a7-b6-c5';\r\n//# sourceMappingURL=QirkatHex2Game.js.map","import { other } from '../../utils';\r\nimport { QuirkatBoard } from '../base/QuirkatBoard';\r\nimport { expandJumps, jumpsPossible, leavesToMoves, leaveToMove, multiJumps } from '../utils/quirkat';\r\nimport { jumpsToString, stringsToJump } from '../utils/serialization';\r\nexport class CatchTheHareGameBase extends QuirkatBoard {\r\n    constructor(grid, maxMoves) {\r\n        super(grid);\r\n        this.moveToString = jumpsToString.bind(this);\r\n        this.stringToMove = stringsToJump.bind(this);\r\n        this.jumpsPossible = jumpsPossible.bind(this);\r\n        this.multiJumps = multiJumps.bind(this);\r\n        this.leavesToMoves = leavesToMoves.bind(this);\r\n        this.leaveToMove = leaveToMove.bind(this);\r\n        this.expandJumps = expandJumps.bind(this);\r\n        this.score = {};\r\n        this.finished = false;\r\n        this.maxMoves = maxMoves;\r\n    }\r\n    move(m) {\r\n        const first = m[0];\r\n        let last = m[m.length - 1];\r\n        last = Array.isArray(last) ? last[0] : last;\r\n        for (let i = 1; i < m.length; i++) {\r\n            if (Array.isArray(m[i])) {\r\n                this.score[m[i][1].data]--;\r\n                m[i][1].data = null;\r\n            }\r\n        }\r\n        last.data = first.data;\r\n        if (last !== first) {\r\n            first.data = null;\r\n        }\r\n        this.player = other(this.player);\r\n        this.moves.push(m);\r\n        this.winner = this.getWinner();\r\n        if (this.winner) {\r\n            this.finished = true;\r\n        }\r\n    }\r\n    possible() {\r\n        if (this.finished) {\r\n            return [];\r\n        }\r\n        if (this.player === 1) {\r\n            return this.possibleHunters(1);\r\n        }\r\n        else {\r\n            return this.possibleHunters(2).concat(this.possibleHare());\r\n        }\r\n    }\r\n    undo() {\r\n        const m = this.moves.pop();\r\n        const first = m[0];\r\n        let last = m[m.length - 1];\r\n        last = Array.isArray(last) ? last[0] : last;\r\n        const o = other(last.data);\r\n        for (let i = m.length - 1; i > 0; i--) {\r\n            const n = m[i];\r\n            if (Array.isArray(n)) {\r\n                this.score[o]++;\r\n                n[1].data = o;\r\n            }\r\n        }\r\n        first.data = last.data;\r\n        if (last !== first) {\r\n            last.data = null;\r\n        }\r\n        this.winner = 0;\r\n        this.finished = false;\r\n        this.player = other(this.player);\r\n    }\r\n    evaluate() {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    possibleHunters(value) {\r\n        return this.grid.tiles\r\n            .filter((t) => t.data === value)\r\n            .reduce((r, t) => {\r\n            for (const [n, m] of t.links) {\r\n                if (!m.data) {\r\n                    r.push([t, m]);\r\n                }\r\n            }\r\n            return r;\r\n        }, []);\r\n    }\r\n    possibleHare() {\r\n        let result = this.jumpsPossible();\r\n        result = this.expandJumps(result);\r\n        result = this.leavesToMoves(result);\r\n        return result;\r\n    }\r\n    getWinner() {\r\n        if (this.possible().length === 0) {\r\n            return other(this.player);\r\n        }\r\n        if (this.score[1] <= 9) {\r\n            return 2;\r\n        }\r\n        if (this.moves.length === this.maxMoves) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nCatchTheHareGameBase.title = 'Catch the Hare';\r\nCatchTheHareGameBase.group = 'Qirkat';\r\nCatchTheHareGameBase.wiki = 'https://en.wikipedia.org/wiki/Catch_the_Hare';\r\nCatchTheHareGameBase.location = 'Europe';\r\nCatchTheHareGameBase.created = 1283;\r\n//# sourceMappingURL=CatchTheHareGameBase.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { CatchTheHareGameBase } from './base/CatchTheHareGameBase';\r\nexport class CatchTheHareGame extends CatchTheHareGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, 5, 5, Rectangular8Tile), 5 * 5 * 3);\r\n        for (let i = 0; i < 10; i++) {\r\n            this.grid.tiles[i].data = 1;\r\n        }\r\n        this.grid.tiles[10].data = 1;\r\n        this.grid.tiles[14].data = 1;\r\n        this.grid.tiles[12].data = 2;\r\n        this.score = { 1: 12, 2: 1 };\r\n    }\r\n}\r\nCatchTheHareGame.title = 'Catch the Hare';\r\nCatchTheHareGame.group = 'Qirkat';\r\nCatchTheHareGame.wiki = 'https://en.wikipedia.org/wiki/Catch_the_Hare';\r\nCatchTheHareGame.location = 'Europe';\r\nCatchTheHareGame.created = 1283;\r\nCatchTheHareGame.rules = ['Black hunters block hare move', 'White hare captures hunters'];\r\n// tslint:disable-next-line:max-line-length\r\nCatchTheHareGame.sample = 'c5-c4, c3-d2, c4-c3, d2-e1, c3-d3, e1-d1, b2-c2, d1-e1, b3-c3, e1-d1, d3-d2, d1-e1, c3-d3, e1-d1, d3-e3, d1-e1, b4-c3, e1-d1, c3-d3, d1-e1, e3-e2, e1-d1, c2-c3, d1-e1, d3-e3, e1-d1, e2-e1, d1-d2-d3, c1-d2, d3-d4, c3-c4, d4-e5, e3-e4, e5-d4, c4-c5, d4-e5, c5-d5, e5-d4, b5-c5, d4-e5, d2-d3, e5-d4, d3-c3, d4-e5, e1-e2, e5-d4, e2-e3, d4-e5, c5-b5, e5-d4, b5-c5, d4-e5, a4-b4, e5-d4, b4-c4, d4-e5, c4-d4';\r\n//# sourceMappingURL=CatchTheHareGame.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { CatchTheHareGameBase } from './base/CatchTheHareGameBase';\r\nexport class CatchTheHare10Game extends CatchTheHareGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, 5, 5, Rectangular8Tile), 5 * 5 * 3);\r\n        for (let i = 0; i < 10; i++) {\r\n            this.grid.tiles[i].data = 1;\r\n        }\r\n        this.grid.tiles[12].data = 2;\r\n        this.score = { 1: 10, 2: 1 };\r\n    }\r\n}\r\nCatchTheHare10Game.title = 'Catch the Hare 10';\r\nCatchTheHare10Game.group = 'Qirkat';\r\nCatchTheHare10Game.original = 'CatchTheHareGame';\r\n// tslint:disable-next-line:max-line-length\r\nCatchTheHare10Game.sample = 'b4-c4, c3-c4-c5, a5-b4, c5-b5-a5-b4-c3, a3-b4, c3-b3-a3-a4-a5, b2-c2, a5-b4-c3-c2-c1, a1-b2, c1-b1-a1-a2-a3, b2-b3, a3-b3-c3';\r\n//# sourceMappingURL=CatchTheHare10Game.js.map","// based on https://medium.freecodecamp.org/simple-chess-ai-step-by-step-1d55a9266977\r\nexport class MinimaxPlayer {\r\n    constructor(depth = 3) {\r\n        this.count = 0;\r\n        this.depth = 0;\r\n        this.depth = depth;\r\n    }\r\n    select(game) {\r\n        return { move: this.move(game, this.depth), count: this.count };\r\n    }\r\n    move(game, depth, isMaximisingPlayer = true) {\r\n        this.count = 0;\r\n        const newGameMoves = game.possible();\r\n        let bestMove = -Infinity;\r\n        let bestMoveFound;\r\n        for (const newGameMove of newGameMoves) {\r\n            game.move(newGameMove);\r\n            const value = this.minimax(depth - 1, game, !isMaximisingPlayer);\r\n            game.undo();\r\n            if (value > bestMove) {\r\n                bestMove = value;\r\n                bestMoveFound = newGameMove;\r\n            }\r\n        }\r\n        return bestMoveFound;\r\n    }\r\n    minimax(depth, game, isMaximisingPlayer) {\r\n        this.count++;\r\n        if (depth === 0) {\r\n            return game.evaluate();\r\n        }\r\n        const newGameMoves = game.possible();\r\n        if (isMaximisingPlayer) {\r\n            let bestMove = -Infinity;\r\n            for (const newGameMove of newGameMoves) {\r\n                game.move(newGameMove);\r\n                bestMove = Math.max(bestMove, this.minimax(depth - 1, game, !isMaximisingPlayer));\r\n                game.undo();\r\n            }\r\n            return bestMove;\r\n        }\r\n        else {\r\n            let bestMove = Infinity;\r\n            for (const newGameMove of newGameMoves) {\r\n                game.move(newGameMove);\r\n                bestMove = Math.min(bestMove, this.minimax(depth - 1, game, !isMaximisingPlayer));\r\n                game.undo();\r\n            }\r\n            return bestMove;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=MinimaxPlayer.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { MinimaxPlayer } from '../players/MinimaxPlayer';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class FourInARow11Game extends ConnectGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 11, 11, Rectangular8Tile), 4);\r\n    }\r\n}\r\nFourInARow11Game.title = 'Four-in-a-row';\r\nFourInARow11Game.group = 'Connect';\r\nFourInARow11Game.rules = ['Connect four pieces'];\r\nFourInARow11Game.wiki = 'https://en.wikipedia.org/wiki/M,n,k-game';\r\nFourInARow11Game.sample = 'f6, f5, e6, g6, d6, c6, e7, e5, c5, b4, f8';\r\nFourInARow11Game.player = () => new MinimaxPlayer(2);\r\n//# sourceMappingURL=FourInARow11Game.js.map","import { Radial8Tile, RadialGrid, Shape } from 'gridy';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class FourInARowRoundGame extends ConnectGameBase {\r\n    constructor() {\r\n        const grid = new RadialGrid(1, false, Shape.Even, 12, 8, Radial8Tile, 2);\r\n        super(grid, 4);\r\n    }\r\n}\r\nFourInARowRoundGame.title = 'Four-in-a-row Round';\r\nFourInARowRoundGame.group = 'Connect';\r\nFourInARowRoundGame.rules = ['Connect four pieces'];\r\nFourInARowRoundGame.original = 'FourInARow11Game';\r\nFourInARowRoundGame.sample = 'f5, g4, g5, h5, f3, i6, f6, f4, h4, i3, e7';\r\n//# sourceMappingURL=FourInARowRoundGame.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { MinimaxPlayer } from '../players/MinimaxPlayer';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class GomokuGame extends ConnectGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, 15, 15, Rectangular8Tile), 5);\r\n    }\r\n}\r\nGomokuGame.title = 'Gomoku';\r\nGomokuGame.group = 'Connect';\r\nGomokuGame.wiki = 'https://en.wikipedia.org/wiki/Gomoku';\r\nGomokuGame.location = 'Japan';\r\nGomokuGame.created = 990;\r\nGomokuGame.rules = ['Connect five pieces'];\r\n// tslint:disable-next-line:max-line-length\r\nGomokuGame.sample = 'h8, h7, i8, g8, g9, i7, g7, i9, h9, f9, h10, h11, f8, i11, e7, d6, f6, e5, g5, h4, g10, j7, f11, e12, e9, h6, e10, d10, e8, e11, e6';\r\nGomokuGame.player = () => new MinimaxPlayer(2);\r\n//# sourceMappingURL=GomokuGame.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { MinimaxPlayer } from '../players/MinimaxPlayer';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class Gomoku9Game extends ConnectGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, 9, 9, Rectangular8Tile), 5);\r\n    }\r\n}\r\nGomoku9Game.title = 'Gomoku 9x9';\r\nGomoku9Game.group = 'Connect';\r\nGomoku9Game.original = 'GomokuGame';\r\n// tslint:disable-next-line:max-line-length\r\nGomoku9Game.sample = 'e5, e4, d6, f4, d5, d4, c4, g4, h4, f5, e6, b3, f7, g8, h5, f6, g6, e8, h7, h6, c7, b8, c5, c6, e7, d7, b4, f8, a3';\r\nGomoku9Game.player = () => new MinimaxPlayer(2);\r\n//# sourceMappingURL=Gomoku9Game.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { MinimaxPlayer } from '../players/MinimaxPlayer';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class Gomoku11Game extends ConnectGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, false, Shape.Even, 11, 11, Rectangular8Tile), 5);\r\n    }\r\n}\r\nGomoku11Game.title = 'Gomoku 11x11';\r\nGomoku11Game.group = 'Connect';\r\nGomoku11Game.original = 'GomokuGame';\r\n// tslint:disable-next-line:max-line-length\r\nGomoku11Game.sample = 'f6, f5, e7, g5, f7, e5, d5, h5, i5, e6, d7, g7, d6, d8, c5, f8, c7, b7, d4, d3, c6, c4, e8, b5, c8, c9, f9, g10, d9, g6, e4, g4, f4, g3';\r\nGomoku11Game.player = () => new MinimaxPlayer(2);\r\n//# sourceMappingURL=Gomoku11Game.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { MinimaxPlayer } from '../players/MinimaxPlayer';\r\nimport { ConnectGameBase } from './base/ConnectGameBase';\r\nexport class GomokuHexGame extends ConnectGameBase {\r\n    constructor() {\r\n        super(new HexagonalGrid(1, true, Shape.Even, 15), 5);\r\n    }\r\n}\r\nGomokuHexGame.title = 'Gomoku Hex';\r\nGomokuHexGame.group = 'Connect';\r\nGomokuHexGame.original = 'GomokuGame';\r\nGomokuHexGame.sample = 'h8, i8, h7, i7, i6, i5, g9, g10, h10, j6, h9, j7, g8, k8, i4, k9';\r\nGomokuHexGame.player = () => new MinimaxPlayer(2);\r\n//# sourceMappingURL=GomokuHexGame.js.map","import { link, toMap } from 'gridy';\r\nimport { Theme } from '../../Theme';\r\nimport { other } from '../../utils';\r\nimport { moveToString, stringToMove } from '../utils/serialization';\r\nexport class ReversiGameBase {\r\n    constructor(grid, center = false, anti = false) {\r\n        this.player = 1;\r\n        this.moves = [];\r\n        this.score = { 1: 0, 2: 0 };\r\n        this.winner = 0;\r\n        this.moveToString = moveToString.bind(this);\r\n        this.stringToMove = stringToMove.bind(this);\r\n        this.finished = false;\r\n        this.history = [];\r\n        this.anti = anti;\r\n        this.grid = grid;\r\n        this.tileMap = toMap(grid.tiles);\r\n        const x1 = Math.floor(grid.x / 2 - 0.5);\r\n        const x2 = Math.ceil(grid.x / 2 - 0.5);\r\n        const y1 = Math.floor(grid.y / 2 - 0.5);\r\n        const y2 = Math.ceil(grid.y / 2 - 0.5);\r\n        this.center = [\r\n            this.tileMap.get(grid.tile(x1, y1).key),\r\n            this.tileMap.get(grid.tile(x1, y2).key),\r\n            this.tileMap.get(grid.tile(x2, y2).key),\r\n            this.tileMap.get(grid.tile(x2, y1).key)\r\n        ];\r\n        this.empty = toMap(this.grid.tiles);\r\n        link(this.tileMap);\r\n        if (center) {\r\n            this.center.forEach((t) => {\r\n                this.move(t, true);\r\n            });\r\n        }\r\n        this.updatePossible();\r\n    }\r\n    possible() {\r\n        return this.knownPossible;\r\n    }\r\n    updatePossible() {\r\n        this.knownPossible = this.possibleFor(this.player);\r\n        if (!this.knownPossible.length) {\r\n            if (this.possibleFor(other(this.player)).length) {\r\n                this.move(null);\r\n            }\r\n            else {\r\n                this.finished = true;\r\n            }\r\n        }\r\n    }\r\n    possibleFor(pl) {\r\n        const r = [];\r\n        if ((this.grid.tiles.length - this.empty.size) < 4) {\r\n            return this.center.filter((t) => !t.data);\r\n        }\r\n        for (const m of this.empty.values()) {\r\n            for (const d of (m).links.keys()) {\r\n                let node = (m).links.get(d);\r\n                let nodes = 0;\r\n                while (node && node.data && (node.data !== pl)) {\r\n                    nodes++;\r\n                    node = node.links.get(d);\r\n                }\r\n                if (nodes && node && (node.data === pl)) {\r\n                    r.push(m);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n    undo() {\r\n        const m = this.moves.pop();\r\n        this.finished = false;\r\n        this.winner = 0;\r\n        if (!m) {\r\n            this.player = other(this.player);\r\n            this.history.pop();\r\n            this.undo();\r\n            return;\r\n        }\r\n        this.score[m.data]--;\r\n        m.data = null;\r\n        this.empty.set(m.key, m);\r\n        const h = this.history.pop();\r\n        this.player = other(this.player);\r\n        for (const k of Object.keys(h)) {\r\n            const d = (this.tileMap.get(k));\r\n            this.score[d.data]--;\r\n            d.data = h[k];\r\n            this.score[d.data]++;\r\n        }\r\n        this.updatePossible();\r\n    }\r\n    move(m, fake = false) {\r\n        if (!m) {\r\n            this.movePass(m);\r\n            return;\r\n        }\r\n        m.data = this.player;\r\n        this.score[this.player] = this.score[this.player] || 0;\r\n        this.score[this.player]++;\r\n        this.player = other(this.player);\r\n        this.empty.delete(m.key);\r\n        if (fake) {\r\n            return;\r\n        }\r\n        this.moves.push(m);\r\n        const state = this.getState(m);\r\n        this.history.push(state);\r\n        this.updatePossible();\r\n        this.winner = this.getWinner();\r\n    }\r\n    evaluate() {\r\n        return -this.score[this.player] + this.score[other(this.player)];\r\n    }\r\n    getWinner() {\r\n        return !this.finished\r\n            ? 0\r\n            : this.score[1] === this.score[2]\r\n                ? -1\r\n                : this.score[1] > this.score[2]\r\n                    ? this.anti ? 2 : 1\r\n                    : this.anti ? 1 : 2;\r\n    }\r\n    movePass(m) {\r\n        this.player = other(this.player);\r\n        this.moves.push(m);\r\n        this.history.push({});\r\n        this.updatePossible();\r\n        this.winner = this.getWinner();\r\n    }\r\n    getState(m) {\r\n        const state = {};\r\n        for (const d of m.links.keys()) {\r\n            let node = m.links.get(d);\r\n            const nodes = [];\r\n            while (node && node.data && node.data !== m.data) {\r\n                nodes.push(node);\r\n                node = node.links.get(d);\r\n            }\r\n            if (node && (node.data === m.data)) {\r\n                for (const n of nodes) {\r\n                    state[n.key] = n.data;\r\n                    this.score[n.data]--;\r\n                    this.score[m.data]++;\r\n                    n.data = m.data;\r\n                }\r\n            }\r\n        }\r\n        return state;\r\n    }\r\n}\r\nReversiGameBase.theme = Theme.Reversi;\r\n//# sourceMappingURL=ReversiGameBase.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class OthelloGame extends ReversiGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 8, 8, Rectangular8Tile), true);\r\n    }\r\n}\r\nOthelloGame.title = 'Othello';\r\nOthelloGame.group = 'Reversi';\r\nOthelloGame.created = 1971;\r\nOthelloGame.authors = [' Goro Hasegawa'];\r\nOthelloGame.wiki = 'https://en.wikipedia.org/wiki/Reversi';\r\nOthelloGame.location = 'Japan';\r\n// public static original = 'ReversiGame';\r\n// tslint:disable-next-line:max-line-length\r\nOthelloGame.sample = 'f4, d3, c3, f5, e3, g3, e6, c2, d6, c7, f3, b3, f6, g6, d2, e1, f7, e8, h3, c4, c1, e2, h6, h5, h4, g2, c6, g7, h1, f2, b4, b5, c5, d1, f1, d7, a5, b6, a6, g5, g1, b7, a8, a7, d8, e7, b8, b2, g4, c8, b1, a3, a4, h2, f8, h8, h7, g8, a2, a1';\r\n//# sourceMappingURL=OthelloGame.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class Othello4Game extends ReversiGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 4, 4, Rectangular8Tile), true);\r\n    }\r\n}\r\nOthello4Game.title = 'Othello 4x4';\r\nOthello4Game.group = 'Reversi';\r\nOthello4Game.original = 'OthelloGame';\r\nOthello4Game.sample = 'd2, d3, d4, b1, a4, b4, c4, d1, a3, pass, a2';\r\n//# sourceMappingURL=Othello4Game.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class ReversiGame extends ReversiGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 8, 8, Rectangular8Tile));\r\n    }\r\n}\r\nReversiGame.title = 'Reversi';\r\nReversiGame.group = 'Reversi';\r\nReversiGame.created = 1883;\r\nReversiGame.authors = ['Lewis Waterman', 'John W. Mollett'];\r\nReversiGame.wiki = 'https://en.wikipedia.org/wiki/Reversi';\r\nReversiGame.rules = ['Capture more pieces'];\r\nReversiGame.location = 'England';\r\n// tslint:disable-next-line:max-line-length\r\nReversiGame.sample = 'd5, e5, d4, e4, f3, e3, f2, c3, f5, e6, c5, c6, f4, g2, d6, g6, h1, c4, b5, e2, b6, f1, d2, e1, b4, g3, c2, h3, f7, e7, h2, e8, f8, a6, g7, c1, d8, f6, b2, g4, d7, c8, h4, d1, h6, d3, c7, h8, g8, a1, a5, h5, b3, g5, a7, b1, a2, h7, b8, b7, a8, g1, a4, a3';\r\n//# sourceMappingURL=ReversiGame.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class Reversi4Game extends ReversiGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 4, 4, Rectangular8Tile));\r\n    }\r\n}\r\nReversi4Game.title = 'Reversi 4x4';\r\nReversi4Game.group = 'Reversi';\r\nReversi4Game.original = 'ReversiGame';\r\nReversi4Game.sample = 'c2, c3, b2, b3, b4, a1, d2, d4, a2, a3, a4, c4, pass, c1, b1, pass, d3, d1';\r\n//# sourceMappingURL=Reversi4Game.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class Reversi6Game extends ReversiGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 6, 6, Rectangular8Tile));\r\n    }\r\n}\r\nReversi6Game.title = 'Reversi 6x6';\r\nReversi6Game.group = 'Reversi';\r\nReversi6Game.original = 'ReversiGame';\r\n// tslint:disable-next-line:max-line-length\r\nReversi6Game.sample = 'd4, d3, c4, c3, d2, c5, b5, e3, d5, c1, d1, e1, b2, b4, b3, d6, f3, a4, e5, a6, a5, c2, a2, f6, e4, e2, b6, c6, f5, a3, f1, f4, f2, e6, a1, b1';\r\n//# sourceMappingURL=Reversi6Game.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class Reversi10Game extends ReversiGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 10, 10, Rectangular8Tile));\r\n    }\r\n}\r\nReversi10Game.title = 'Reversi 10x10';\r\nReversi10Game.group = 'Reversi';\r\nReversi10Game.original = 'ReversiGame';\r\n// tslint:disable-next-line:max-line-length\r\nReversi10Game.sample = 'f6, e5, e6, f5, g4, e7, d8, h3, d4, e8, f8, e4, f4, g7, g5, e3, g3, c3, d6, d7, i3, g6, c8, f3, h6, c7, c6, b9, f2, b5, e2, d9, c10, i7, h4, i2, b2, h5, a4, c5, j1, j2, i4, g8, h7, a5, a10, a1, f9, a3, g9, i6, b8, h8, c9, d2, j3, i5, b6, d3, f7, a6, d1, e1, j7, j8, d5, c2, j4, e10, b7, b10, h9, h2, e9, i9, a9, b4, c4, b3, c1, i8, j10, j9, i10, j5, j6, h10, i1, d10, f10, g10, a8, g2, a7, h1, b1, a2, f1, g1';\r\n//# sourceMappingURL=Reversi10Game.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class ReversiHexGame extends ReversiGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, false, Shape.Rhombus, 8)));\r\n    }\r\n}\r\nReversiHexGame.title = 'Reversi Hex';\r\nReversiHexGame.group = 'Reversi';\r\nReversiHexGame.original = 'ReversiGame';\r\n// tslint:disable-next-line:max-line-length\r\nReversiHexGame.sample = 'e4, d4, e5, d5, c6, d6, c7, f3, c5, b6, a6, c8, b5, c4, d3, a5, a4, e2, f4, f5, e6, e3, g5, e7, f2, g4, f6, g2, f1, g3, h1, d2, h4, g1, c2, g6, h2, d1, h3, b2, f7, c3, h6, g7, f8, e8, h5, h7, h8, g8, d7, a7, a8, b4, e1, d8, c1, b1, a2, a3, b7, b8, a1, b3';\r\n//# sourceMappingURL=ReversiHexGame.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class ReversiHex4Game extends ReversiGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, undefined, Shape.Rhombus, 4)));\r\n    }\r\n}\r\nReversiHex4Game.title = 'Reversi Hex 4x4';\r\nReversiHex4Game.group = 'Reversi';\r\nReversiHex4Game.original = 'ReversiGame';\r\nReversiHex4Game.sample = 'b3, c3, c2, b2, c4, b4, a4, d2, d1, pass, a2, pass, d3';\r\n//# sourceMappingURL=ReversiHex4Game.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class ReversiHex6Game extends ReversiGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, undefined, Shape.Rhombus, 6)));\r\n    }\r\n}\r\nReversiHex6Game.title = 'Reversi Hex 6x6';\r\nReversiHex6Game.group = 'Reversi';\r\nReversiHex6Game.original = 'ReversiGame';\r\n// tslint:disable-next-line:max-line-length\r\nReversiHex6Game.sample = 'd3, c4, d4, c3, b3, e4, d5, c2, f4, e3, f3, e2, d2, e5, f1, f2, e1, a3, e6, c5, b4, d6, c6, b5, b2, c1, a6, b6, a5, f6, b1, a1, d1, f5, pass, a4, a2';\r\n//# sourceMappingURL=ReversiHex6Game.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class ReversiHex10Game extends ReversiGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, undefined, Shape.Rhombus, 10)));\r\n    }\r\n}\r\nReversiHex10Game.title = 'Reversi Hex 10x10';\r\nReversiHex10Game.group = 'Reversi';\r\nReversiHex10Game.original = 'ReversiGame';\r\n// tslint:disable-next-line:max-line-length\r\nReversiHex10Game.sample = 'f5, f6, e6, e5, d5, d6, e7, d4, c5, f4, g4, b6, d3, g5, e4, d8, c6, d7, e8, e3, c9, h4, g6, d2, f3, f7, h3, h2, d1, b10, a7, d9, i4, c3, c10, g7, b4, b5, a10, g3, h1, d10, f2, a6, c8, c4, f8, f1, a5, e9, g1, a4, e10, i1, a3, b8, b9, e1, j1, h5, g2, j4, i3, e2, j3, a9, h6, i6, b3, f9, c7, b2, j6, i2, a8, h7, i5, j5, g8, f10, c1, j7, g9, g10, c2, j2, j8, b1, i7, i8, a2, b7, h9, i9, h10, j9, j10, pass, a1, pass, h8, pass, i10';\r\n//# sourceMappingURL=ReversiHex10Game.js.map","import { Rectangular8Tile, RectangularGrid, Shape } from 'gridy';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class AntiReversiGame extends ReversiGameBase {\r\n    constructor() {\r\n        super(new RectangularGrid(1, undefined, Shape.Even, 8, 8, Rectangular8Tile), false, true);\r\n    }\r\n}\r\nAntiReversiGame.title = 'Anti-Reversi';\r\nAntiReversiGame.group = 'Reversi';\r\nAntiReversiGame.original = 'ReversiGame';\r\nAntiReversiGame.rules = ['Capture less pieces'];\r\n// tslint:disable-next-line:max-line-length\r\nAntiReversiGame.sample = 'd5, e4, e5, d4, e3, d6, c4, f4, d7, c5, e6, b4, d3, f2, f5, c3, e2, c7, b6, e1, d8, g5, b2, b8, a3, a1, c6, c8, g4, a5, h6, e7, b5, h4, c2, b7, f7, g7, e8, f8, a7, a8, a4, f6, g8, b3, h7, h8, c1, g6, d2, f3, f1, b1, g1, h5, h3, g3, d1, a2, h2, h1, g2, a6';\r\n//# sourceMappingURL=AntiReversiGame.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { ReversiGameBase } from './base/ReversiGameBase';\r\nexport class AntiReversiHexGame extends ReversiGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, false, Shape.Rhombus, 8)), false, true);\r\n    }\r\n}\r\nAntiReversiHexGame.title = 'Anti-Reversi Hex';\r\nAntiReversiHexGame.group = 'Reversi';\r\nAntiReversiHexGame.original = 'ReversiGame';\r\nAntiReversiHexGame.rules = ['Capture less pieces'];\r\n// tslint:disable-next-line:max-line-length\r\nAntiReversiHexGame.sample = 'e4, e5, d5, d4, f5, d6, c4, g5, e6, d7, d8, c8, b8, c5, f4, c6, b7, b6, a7, b5, f6, g4, h4, e3, a6, g6, d3, c7, e7, a8, g7, g3, h2, f3, f2, b4, a4, h3, a5, g1, e2, c3, d2, h5, g2, e8, f7, f1, e1, d1, c2, c1, h6, f8, b3, b2, a2, b1, a3, g8, h1, a1, h7';\r\n//# sourceMappingURL=AntiReversiHexGame.js.map","import { Float3, link, toArray, toMap } from 'gridy';\r\nimport { Theme } from '../../Theme';\r\nimport { other } from '../../utils';\r\nimport { moveToString, stringToMove } from '../utils/serialization';\r\nimport { undo } from '../utils/undo';\r\nexport class HexGameBase {\r\n    constructor(grid, lines = 3, skip = 2) {\r\n        this.moves = [];\r\n        this.player = 1;\r\n        this.winner = 0;\r\n        this.playerTiles = { 1: [], 2: [] };\r\n        this.moveToString = moveToString.bind(this);\r\n        this.stringToMove = stringToMove.bind(this);\r\n        this.undo = undo.bind(this);\r\n        this.finished = false;\r\n        this.grid = grid;\r\n        this.tileMap = toMap(grid.tiles);\r\n        this.freeTileMap = toMap(grid.tiles);\r\n        link(this.tileMap);\r\n        this.markLine(this.grid.tile(0, 0), this.grid.tile(0, this.grid.y - 1), 1, 'begin');\r\n        this.markLine(this.grid.tile(this.grid.x - 1, 0), this.grid.tile(this.grid.x - 1, this.grid.y - 1), 1, 'end');\r\n        this.markLine(this.grid.tile(0, 0), this.grid.tile(this.grid.x - 1, 0), 2, 'begin');\r\n        this.markLine(this.grid.tile(0, this.grid.y - 1), this.grid.tile(this.grid.x - 1, this.grid.y - 1), 2, 'end');\r\n    }\r\n    possible() {\r\n        // throw new Error(\"Method not implemented.\");\r\n        if (this.finished) {\r\n            return [];\r\n        }\r\n        return toArray(this.freeTileMap);\r\n    }\r\n    links() {\r\n        return [\r\n            [this.grid.tile(-1, 1), this.grid.tile(-1, this.grid.y - 1), 1],\r\n            [this.grid.tile(this.grid.x, 0), this.grid.tile(this.grid.x, this.grid.y - 2), 1],\r\n            [this.grid.tile(1, -1), this.grid.tile(this.grid.x - 1, -1), 2],\r\n            [this.grid.tile(0, this.grid.y), this.grid.tile(this.grid.x - 2, this.grid.y), 2]\r\n        ];\r\n    }\r\n    move(m) {\r\n        m.data = this.player;\r\n        this.playerTiles[this.player].push(m);\r\n        this.player = other(this.player);\r\n        this.moves.push(m);\r\n        this.freeTileMap.delete(m.key);\r\n        this.winner = this.getWinner();\r\n        if ((this.moves.length === this.grid.tiles.length) || this.winner) {\r\n            this.finished = true;\r\n        }\r\n    }\r\n    evaluate() {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    winning() {\r\n        const tile = this.moves[this.moves.length - 1];\r\n        const m = new Map([[tile.key, true]]);\r\n        const a = [{ tile, previous: null }];\r\n        const v = tile.data;\r\n        let i = 0;\r\n        let begin;\r\n        let end;\r\n        while (i < a.length) {\r\n            const t = a[i].tile;\r\n            if (t[`begin${v}`]) {\r\n                begin = begin || a[i];\r\n                // if (!end) {\r\n                //   continue;\r\n                // }\r\n            }\r\n            else if (t[`end${v}`]) {\r\n                end = end || a[i];\r\n                // if (!begin) {\r\n                //   continue;\r\n                // }\r\n            }\r\n            if (begin && end) {\r\n                const result = [];\r\n                let item = begin;\r\n                while (item) {\r\n                    result.push(item.tile);\r\n                    item = item.previous;\r\n                }\r\n                item = end;\r\n                const line = [];\r\n                while (item) {\r\n                    line.unshift(item.tile);\r\n                    item = item.previous;\r\n                }\r\n                line.shift();\r\n                return result.concat(line);\r\n            }\r\n            for (const [, n] of t.links) {\r\n                if (n.data === v) {\r\n                    if (!m.has(n.key)) {\r\n                        a.push({ tile: n, previous: a[i] });\r\n                        m.set(n.key, true);\r\n                    }\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n    getWinner() {\r\n        if (!this.moves.length) {\r\n            return 0;\r\n        }\r\n        const last = this.moves[this.moves.length - 1];\r\n        const w = this.flood(last);\r\n        if (w) {\r\n            return last.data;\r\n        }\r\n        if (this.moves.length === this.grid.tiles.length) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    }\r\n    markLine(fromTile, to, value, key) {\r\n        Float3.LINE(fromTile, to).forEach((t) => {\r\n            this.tileMap.get(t.toString())[`${key}${value}`] = true;\r\n        });\r\n    }\r\n    flood(tile) {\r\n        const m = new Map([[tile.key, true]]);\r\n        const a = [tile];\r\n        const v = tile.data;\r\n        let i = 0;\r\n        let begin = false;\r\n        let end = false;\r\n        while (i < a.length) {\r\n            const t = a[i];\r\n            if (t[`begin${v}`]) {\r\n                begin = true;\r\n                // if (!end) {\r\n                //   continue;\r\n                // }\r\n            }\r\n            else if (t[`end${v}`]) {\r\n                end = true;\r\n                // if (!begin) {\r\n                //   continue;\r\n                // }\r\n            }\r\n            if (begin && end) {\r\n                return true;\r\n            }\r\n            for (const [, n] of t.links) {\r\n                if (n.data === v) {\r\n                    if (!m.has(n.key)) {\r\n                        a.push(n);\r\n                        m.set(n.key, true);\r\n                    }\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nHexGameBase.theme = Theme.Hex;\r\n//# sourceMappingURL=HexGameBase.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { HexGameBase } from './base/HexGameBase';\r\nexport class HexGame extends HexGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, undefined, Shape.Rhombus, 11)));\r\n    }\r\n}\r\nHexGame.title = 'Hex';\r\nHexGame.group = 'Hex';\r\nHexGame.created = 1942;\r\nHexGame.location = 'Denmark';\r\nHexGame.authors = ['Piet Hein', 'John Nash'];\r\nHexGame.aliases = ['Con-tac-tix'];\r\nHexGame.wiki = 'https://en.wikipedia.org/wiki/Hex_(board_game)';\r\nHexGame.rules = ['Connect edges'];\r\n// tslint:disable-next-line:max-line-length\r\nHexGame.sample = 'f6, g6, f7, g5, e5, f5, e6, d4, d5, c5, b6, c6, g8, c8, i8, e2, k8, c10, j8, c9, h8, e3, f8, c11, c7, b7, d6, b8, a6, e1';\r\n//# sourceMappingURL=HexGame.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { HexGameBase } from './base/HexGameBase';\r\nexport class Hex5Game extends HexGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, undefined, Shape.Rhombus, 5)));\r\n    }\r\n}\r\nHex5Game.title = 'Hex 5x5';\r\nHex5Game.group = 'Hex';\r\nHex5Game.original = 'HexGame';\r\nHex5Game.sample = 'e1, b2, b3, a4, a3, c2, c3, d2, d3, e3, e2';\r\n//# sourceMappingURL=Hex5Game.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { HexGameBase } from './base/HexGameBase';\r\nexport class Hex7Game extends HexGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, undefined, Shape.Rhombus, 7)));\r\n    }\r\n}\r\nHex7Game.title = 'Hex 7x7';\r\nHex7Game.group = 'Hex';\r\nHex7Game.original = 'HexGame';\r\nHex7Game.sample = 'c7, c6, c5, a4, f1, e7, c3, g4, g3, g2, a6, e2, d5, f5, f4, d3, e4, g7, b5';\r\n//# sourceMappingURL=Hex7Game.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { HexGameBase } from './base/HexGameBase';\r\nexport class Hex9Game extends HexGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, undefined, Shape.Rhombus, 9)));\r\n    }\r\n}\r\nHex9Game.title = 'Hex 9x9';\r\nHex9Game.group = 'Hex';\r\nHex9Game.original = 'HexGame';\r\n// tslint:disable-next-line:max-line-length\r\nHex9Game.sample = 'e5, e4, f5, e3, d5, g5, g4, c5, i3, c6, h3, d4, b8, c7, c8, d7, a8, e8, d8, e7, e2, g2, f2, f3, g1, h1, d9, e9';\r\n//# sourceMappingURL=Hex9Game.js.map","import { HexagonalGrid, Shape } from 'gridy';\r\nimport { landscapeHex } from '../utils';\r\nimport { HexGameBase } from './base/HexGameBase';\r\nexport class Hex13Game extends HexGameBase {\r\n    constructor() {\r\n        super(landscapeHex(new HexagonalGrid(1, undefined, Shape.Rhombus, 13)));\r\n    }\r\n}\r\nHex13Game.title = 'Hex 13x13';\r\nHex13Game.group = 'Hex';\r\nHex13Game.original = 'HexGame';\r\n// tslint:disable-next-line:max-line-length\r\nHex13Game.sample = 'l1, j3, c1, k12, b1, e6, d8, a12, b7, j6, l3, a1, l6, m2, h1, h4, i1, d3, g8, f1, k8, g7, f6, e2, b6, f8, i7, e5, f9, j4, h2, e10, l9, k6, m5, e9, g2, h7, a3, a6, g4, i6, a10, g10, f11, k3, h11, a9, j5, b8, e13, c8, i5, h12, i11, g1, b4, h5, b12, e1, c6, d13, k2, m3, c10, a11, i12, j10, d11, f5, a7, j1, e11, g13, m9, i8, d5, c11, b11, a5, l7, d10, i13, c12, b2, c5, m10, i9, m1, c13, a4, d2, m4, g11, f13, e8, d7, h3, b10, k9, g5, h6, j13, g3, i2, f3, d4, i3, l5, k4, j2, j2';\r\n//# sourceMappingURL=Hex13Game.js.map","export { TicTacToeGame } from './TicTacToeGame';\r\nexport { TicTacToeRoundGame } from './TicTacToeRoundGame';\r\nexport { TicTacToeTriGame } from './TicTacToeTriGame';\r\nexport { TacTickleGame } from './TacTickleGame';\r\nexport { TacTickle4Game } from './TacTickle4Game';\r\nexport { TacTickleHexGame } from './TacTickleHexGame';\r\nexport { TacTickleHex2Game } from './TacTickleHex2Game';\r\nexport { TacTickleRoundGame } from './TacTickleRoundGame';\r\nexport { TacTickleTriGame } from './TacTickleTriGame';\r\nexport { ConnectFourGame } from './ConnectFourGame';\r\nexport { QirkatGame } from './QirkatGame';\r\nexport { Qirkat3Game } from './Qirkat3Game';\r\nexport { Qirkat7Game } from './Qirkat7Game';\r\nexport { QirkatHexGame } from './QirkatHexGame';\r\nexport { QirkatHex7Game } from './QirkatHex7Game';\r\nexport { QirkatHex2Game } from './QirkatHex2Game';\r\nexport { CatchTheHareGame } from './CatchTheHareGame';\r\nexport { CatchTheHare10Game } from './CatchTheHare10Game';\r\nexport { FourInARow11Game } from './FourInARow11Game';\r\nexport { FourInARowRoundGame } from './FourInARowRoundGame';\r\nexport { GomokuGame } from './GomokuGame';\r\n// export { Gomoku7Game } from \"./Gomoku7Game\";\r\nexport { Gomoku9Game } from './Gomoku9Game';\r\nexport { Gomoku11Game } from './Gomoku11Game';\r\nexport { GomokuHexGame } from './GomokuHexGame';\r\nexport { OthelloGame } from './OthelloGame';\r\nexport { Othello4Game } from './Othello4Game';\r\nexport { ReversiGame } from './ReversiGame';\r\nexport { Reversi4Game } from './Reversi4Game';\r\nexport { Reversi6Game } from './Reversi6Game';\r\nexport { Reversi10Game } from './Reversi10Game';\r\nexport { ReversiHexGame } from './ReversiHexGame';\r\nexport { ReversiHex4Game } from './ReversiHex4Game';\r\nexport { ReversiHex6Game } from './ReversiHex6Game';\r\nexport { ReversiHex10Game } from './ReversiHex10Game';\r\nexport { AntiReversiGame } from './AntiReversiGame';\r\nexport { AntiReversiHexGame } from './AntiReversiHexGame';\r\nexport { HexGame } from './HexGame';\r\nexport { Hex5Game } from './Hex5Game';\r\nexport { Hex7Game } from './Hex7Game';\r\nexport { Hex9Game } from './Hex9Game';\r\nexport { Hex13Game } from './Hex13Game';\r\n// export { Hex14Game } from \"./Hex14Game\";\r\n// export { CzechCheckersGame } from \"./CzechCheckersGame\";\r\n// export { InternationalCheckersGame } from \"./InternationalCheckersGame\";\r\n// export { HexCheckCheckersGame } from \"./HexCheckCheckersGame\";\r\n// export { NineMensMorrisGame } from './NineMensMorrisGame';\r\n// export { ThreeMensMorrisGame } from './ThreeMensMorrisGame';\r\n// export { SixMensMorrisGame } from './SixMensMorrisGame';\r\n// export { TwelveMensMorrisGame } from './TwelveMensMorrisGame';\r\n// export { NineHolesGame } from './NineHolesGame';\r\n//# sourceMappingURL=index.js.map","// based on https://medium.freecodecamp.org/simple-chess-ai-step-by-step-1d55a9266977\r\nexport class AlphaBetaPlayer {\r\n    constructor(depth = 3) {\r\n        this.count = 0;\r\n        this.hit = 0;\r\n        this.depth = 0;\r\n        this.depth = depth;\r\n    }\r\n    select(game) {\r\n        return { move: this.move(game, this.depth), count: this.count, hit: this.hit };\r\n    }\r\n    move(game, depth, isMaximisingPlayer = true) {\r\n        this.count = 0;\r\n        const newGameMoves = game.possible();\r\n        let bestMove = -Infinity;\r\n        let bestMoveFound;\r\n        for (const newGameMove of newGameMoves) {\r\n            game.move(newGameMove);\r\n            const value = this.minimax(depth - 1, game, -Infinity, Infinity, !isMaximisingPlayer);\r\n            game.undo();\r\n            if (value > bestMove) {\r\n                bestMove = value;\r\n                bestMoveFound = newGameMove;\r\n            }\r\n        }\r\n        return bestMoveFound;\r\n    }\r\n    minimax(depth, game, inputAlpha, inputBeta, isMaximisingPlayer) {\r\n        this.count++;\r\n        if (depth === 0) {\r\n            return game.evaluate();\r\n        }\r\n        const newGameMoves = game.possible();\r\n        let alpha = inputAlpha;\r\n        let beta = inputBeta;\r\n        if (isMaximisingPlayer) {\r\n            let bestMove = -Infinity;\r\n            for (const newGameMove of newGameMoves) {\r\n                game.move(newGameMove);\r\n                bestMove = Math.max(bestMove, this.minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\r\n                game.undo();\r\n                alpha = Math.max(alpha, bestMove);\r\n                if (beta <= alpha) {\r\n                    this.hit++;\r\n                    return bestMove;\r\n                }\r\n            }\r\n            return bestMove;\r\n        }\r\n        else {\r\n            let bestMove = Infinity;\r\n            for (const newGameMove of newGameMoves) {\r\n                game.move(newGameMove);\r\n                bestMove = Math.min(bestMove, this.minimax(depth - 1, game, alpha, beta, !isMaximisingPlayer));\r\n                game.undo();\r\n                beta = Math.min(beta, bestMove);\r\n                if (beta <= alpha) {\r\n                    this.hit++;\r\n                    return bestMove;\r\n                }\r\n            }\r\n            return bestMove;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=AlphaBetaPlayer.js.map","export class RandomPlayer {\r\n    select(game) {\r\n        const possible = game.possible();\r\n        return { move: possible[Math.floor(Math.random() * possible.length)] };\r\n    }\r\n}\r\n//# sourceMappingURL=RandomPlayer.js.map","// Based on https://github.com/OMerkel/UCThello\r\nimport { other } from '../utils';\r\nexport class UctNode {\r\n    constructor(game, parentNode, action) {\r\n        this.depth = game.moves.length;\r\n        this.action = action;\r\n        this.parentNode = parentNode;\r\n        this.children = [];\r\n        this.wins = 0;\r\n        this.visits = 0;\r\n        this.unexamined = game.possible();\r\n        this.activePlayer = other(game.player);\r\n    }\r\n    addChild(game, index) {\r\n        const node = new UctNode(game, this, this.unexamined[index]);\r\n        this.unexamined.splice(index, 1);\r\n        this.children.push(node);\r\n        return node;\r\n    }\r\n    selectChild() {\r\n        let selected = null;\r\n        let bestValue = Number.NEGATIVE_INFINITY;\r\n        for (const child of this.children) {\r\n            const uctValue = child.wins / child.visits + Math.sqrt(Math.log(this.visits) * 2 / child.visits);\r\n            if (uctValue > bestValue) {\r\n                selected = child;\r\n                bestValue = uctValue;\r\n            }\r\n        }\r\n        return selected;\r\n    }\r\n    update(result) {\r\n        this.visits++;\r\n        this.wins += this.activePlayer === result ? 1 : result === -1 ? 0 : -1;\r\n    }\r\n    mostVisitedChild() {\r\n        this.children.sort((a, b) => b.visits - a.visits);\r\n        return this.children[0];\r\n    }\r\n}\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class UctPlayer {\r\n    constructor(maxTime = 400, maxIterations = 8192, blockSize = 8) {\r\n        this.blockSize = blockSize;\r\n        this.maxTime = maxTime;\r\n        this.maxIterations = maxIterations;\r\n    }\r\n    select(game) {\r\n        const root = new UctNode(game);\r\n        const startTime = Date.now();\r\n        const timeLimit = startTime + this.maxTime;\r\n        let nodesVisited = 0;\r\n        if (root.unexamined.length === 1) {\r\n            return {\r\n                duration: Date.now() - startTime,\r\n                move: root.unexamined[0],\r\n                nodesVisited\r\n            };\r\n        }\r\n        nodesVisited = this.iterate(game, root, timeLimit);\r\n        return {\r\n            duration: Date.now() - startTime,\r\n            move: root.mostVisitedChild().action,\r\n            nodesVisited\r\n        };\r\n    }\r\n    iterate(game, root, timeLimit) {\r\n        let nodesVisited = 0;\r\n        for (let iterations = 0; iterations < this.maxIterations && Date.now() < timeLimit; iterations += this.blockSize) {\r\n            for (let i = 0; i < this.blockSize; ++i) {\r\n                let node = root;\r\n                const original = game.moves.length;\r\n                // Selection\r\n                while (node.unexamined.length === 0 && node.children.length > 0) {\r\n                    node = node.selectChild();\r\n                    game.move(node.action);\r\n                }\r\n                // Expansion\r\n                if (node.unexamined.length > 0) {\r\n                    const j = Math.floor(Math.random() * node.unexamined.length);\r\n                    game.move(node.unexamined[j]);\r\n                    node = node.addChild(game, j);\r\n                }\r\n                // Simulation\r\n                let actions = game.possible();\r\n                while (actions.length > 0) {\r\n                    game.move(actions[Math.floor(Math.random() * actions.length)]);\r\n                    ++nodesVisited;\r\n                    actions = game.possible();\r\n                }\r\n                // Backpropagation\r\n                const result = game.winner;\r\n                while (node) {\r\n                    node.update(result);\r\n                    node = node.parentNode;\r\n                }\r\n                while (game.moves.length > original) {\r\n                    game.undo();\r\n                }\r\n            }\r\n        }\r\n        return nodesVisited;\r\n    }\r\n}\r\n//# sourceMappingURL=UctPlayer.js.map","// Based on https://github.com/OMerkel/UCThello\r\nimport { UctNode, UctPlayer } from './UctPlayer';\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class UctCachedPlayer extends UctPlayer {\r\n    constructor(maxTime = 400, maxIterations = 8192, blockSize = 8) {\r\n        super(maxTime, maxIterations, blockSize);\r\n    }\r\n    select(game) {\r\n        const root = this.getRoot(game) || new UctNode(game);\r\n        const startTime = Date.now();\r\n        const timeLimit = startTime + this.maxTime;\r\n        const nodesVisited = this.iterate(game, root, timeLimit);\r\n        this.cachedRoot = root.mostVisitedChild();\r\n        return {\r\n            duration: Date.now() - startTime,\r\n            move: this.cachedRoot.action,\r\n            nodesVisited\r\n        };\r\n    }\r\n    getRoot(game) {\r\n        if (!this.cachedRoot || this.cachedRoot.depth >= game.moves.length) {\r\n            return;\r\n        }\r\n        for (let i = this.cachedRoot.depth; i < game.moves.length; i++) {\r\n            this.cachedRoot = this.cachedRoot.children.find((c) => c.action === game.moves[i]);\r\n            if (!this.cachedRoot) {\r\n                return;\r\n            }\r\n        }\r\n        return this.cachedRoot;\r\n    }\r\n}\r\n//# sourceMappingURL=UctCachedPlayer.js.map","import * as games from './games';\r\nimport { table } from './utils';\r\n// tslint:disable:no-unnecessary-class function-name\r\nexport class Info {\r\n    static set wip(value) {\r\n        if (value !== this.wipValue) {\r\n            this.wipValue = value;\r\n            Info.gamesValue = undefined;\r\n        }\r\n    }\r\n    static get games() {\r\n        if (!Info.gamesValue) {\r\n            Info.gamesValue = Object.freeze(table(games, this.wipValue));\r\n        }\r\n        return Info.gamesValue;\r\n    }\r\n    static game(id) {\r\n        return Info.games.find((g) => g.id === id);\r\n    }\r\n    static similar(id, exclude) {\r\n        return Info.games.filter((g) => g.originalId === id && g.id !== exclude);\r\n    }\r\n}\r\nInfo.wipValue = false;\r\n//# sourceMappingURL=Info.js.map","export { TimedProxy } from './TimedProxy';\r\nexport * from './games';\r\nexport * from './players';\r\nimport * as games from './games';\r\n// tslint:disable-next-line:variable-name\r\nexport const Games = games;\r\nimport * as players from './players';\r\n// tslint:disable-next-line:variable-name\r\nexport const Players = players;\r\nexport { FIELDS, other, reset, stringify, table, undoFor, update } from './utils';\r\nexport * from './utils/actions';\r\nexport { Info } from './Info';\r\nexport { Theme, ThemeStones, Stones, StoneNames } from './Theme';\r\n//# sourceMappingURL=index.js.map"],"names":["getMovePlace","move","cursor","Array","isArray","initHighlight","game","grid","tiles","tile","highlighted","initActions","moves","cursorInput","actions","push","selectAction","getAction","undoAction","h","pop","i","undefined","length","action","place","map","a","PASS","parseRecord","record","tokens","records","replace","split","r","parsePosition","t","parseInt","parsePositions","stringifyPosition","position","String","fromCharCode","x","y","stringifyPositions","positions","join","stringify","m","moveToString","other","player","landscapeHex","rotate","toPoint","HexagonalGrid","CUBE_TO_TWO_AXIS_YZ","toTile","TWO_AXIS_TO_CUBE_YZ","normalize","reset","undo","update","stringToMove","undoFor","FIELDS","GRIDS","Map","RectangularGrid","RadialGrid","TriangularGrid","copy","name","Object","assign","domain","link","exec","URL","hostname","id","key","links","merge","b","keys","k","originals","getOriginals","forEach","l","n","table","games","wip","result","row","freeze","originalId","original","instance","defineProperty","get","possible","constructor","title","wiki","source","linkText","wikiText","sourceText","TimedProxy","opt","limit","countdown","countdownSignal","signalDelay","counter","counterSignal","expired","pending","timer","timeoutWinner","bind","stop","winner","start","evaluate","setInterval","setTimeout","clearInterval","prop","scale","score","landscape","hull","Theme","Stones","ThemeStones","Checkers","BlackWhite","CheckersHex","Gomoku","Hex","OrangeBlue","Mills","Plastic","RedYellow","Qirkat","Reversi","TacTickle","StoneNames","connections","min","done","opposite","o","v","data","evaluateLinked","c","s","u","to","fromTile","mp","values","d","f","Math","pow","winning","getWinning","unshift","p","apply","tileMap","movesToString","jumpsToString","reduce","slice","reverse","stringsToJump","getTile","call","shift","stringsToMove","pp","freeTileMap","set","finished","playerTiles","ConnectGameBase","toMap","toArray","delete","getWinner","w","theme","TicTacToeGame","Shape","Even","Rectangular8Tile","group","aliases","created","location","rules","sample","TicTacToeRoundGame","Radial8Tile","TicTacToeTriGame","Triangular","TacTickleGameBase","directions","lines","init","dir","nei","indexOf","Error","xx","skip","TacTickleGame","RectangularTile","authors","TacTickle4Game","TacTickleHexGame","HexagonalTile","TacTickleHex2Game","Hexagonal","TacTickleRoundGame","RadialTile","TacTickleTriGame","Rhombus","TriangularTile","directions1","ConnectFourGame","toString","alias","isDiagonalCenter","isDiagonal","isCenter","quirkatSetup","mid","jumpsPossible","leaves","multiJumps","concat","parent","depth","removed","jumps","leavesToMoves","leaveToMove","nodeInput","node","expandJumps","QuirkatBoard","sort","from","QirkatGameBase","maxMoves","stones","first","last","topJumps","simplePossible","filter","SIZE","QirkatGame","Qirkat3Game","Qirkat7Game","QirkatHexGame","QirkatHex7Game","QirkatHex2Game","CatchTheHareGameBase","possibleHunters","possibleHare","value","CatchTheHareGame","CatchTheHare10Game","MinimaxPlayer","count","isMaximisingPlayer","newGameMoves","bestMove","Infinity","bestMoveFound","newGameMove","minimax","max","FourInARow11Game","FourInARowRoundGame","GomokuGame","Gomoku9Game","Gomoku11Game","GomokuHexGame","ReversiGameBase","center","anti","history","x1","floor","x2","ceil","y1","y2","empty","updatePossible","knownPossible","possibleFor","pl","size","nodes","fake","movePass","state","getState","OthelloGame","Othello4Game","ReversiGame","Reversi4Game","Reversi6Game","Reversi10Game","ReversiHexGame","ReversiHex4Game","ReversiHex6Game","ReversiHex10Game","AntiReversiGame","AntiReversiHexGame","HexGameBase","markLine","previous","begin","end","item","line","has","flood","Float3","LINE","HexGame","Hex5Game","Hex7Game","Hex9Game","Hex13Game","AlphaBetaPlayer","hit","inputAlpha","inputBeta","alpha","beta","RandomPlayer","random","UctNode","parentNode","children","wins","visits","unexamined","activePlayer","index","splice","selected","bestValue","Number","NEGATIVE_INFINITY","child","uctValue","sqrt","log","UctPlayer","maxTime","maxIterations","blockSize","root","startTime","Date","now","timeLimit","nodesVisited","duration","iterate","mostVisitedChild","iterations","selectChild","j","addChild","UctCachedPlayer","getRoot","cachedRoot","find","Info","g","exclude","wipValue","gamesValue","Games","Players","players"],"mappings":";;;;;;IAAO,SAASA,YAAT,CAAsBC,IAAtB,EAAwC;IAAA,QAAZC,MAAY,uEAAH,CAAG;;IAC3C,QAAIC,MAAMC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;IACrB,YAAIE,MAAMC,OAAN,CAAcH,KAAKC,MAAL,CAAd,CAAJ,EAAiC;IAC7B,mBAAOD,KAAKC,MAAL,EAAa,CAAb,CAAP;IACH,SAFD,MAGK;IACD,mBAAOD,KAAKC,MAAL,CAAP;IACH;IACJ,KAPD,MAQK,IAAI,CAACA,MAAL,EAAa;IACd,eAAOD,IAAP;IACH;IACJ;AACD,IAAO,SAASI,aAAT,CAAuBC,IAAvB,EAA6B;IAAA;IAAA;IAAA;;IAAA;IAChC,6BAAmBA,KAAKC,IAAL,CAAUC,KAA7B,8HAAoC;IAAA,gBAAzBC,IAAyB;;IAChCA,iBAAKC,WAAL,GAAmB,KAAnB;IACH;IAH+B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAInC;AACD,IAAO,SAASC,WAAT,CAAqBL,IAArB,EAA2BM,KAA3B,EAAmD;IAAA,QAAjBC,WAAiB,uEAAH,CAAG;;IACtD,QAAMH,cAAc,EAApB;IADsD;IAAA;IAAA;;IAAA;IAEtD,8BAAmBE,KAAnB,mIAA0B;IAAA,gBAAfX,IAAe;;IACtB,gBAAIC,SAASW,WAAb;IACA,gBAAIJ,OAAOT,aAAaC,IAAb,EAAmBC,MAAnB,CAAX;IACA,gBAAI,CAACO,IAAL,EAAW;IACPP;IACAO,uBAAOT,aAAaC,IAAb,EAAmBC,MAAnB,CAAP;IACH;IACDO,iBAAKK,OAAL,GAAeL,KAAKK,OAAL,IAAgB,EAA/B;IACAL,iBAAKK,OAAL,CAAaC,IAAb,CAAkB,EAAEd,UAAF,EAAQC,QAAQA,SAAS,CAAzB,EAAlB;IACA,gBAAI,CAACO,KAAKC,WAAV,EAAuB;IACnBD,qBAAKC,WAAL,GAAmB,IAAnB;IACAA,4BAAYK,IAAZ,CAAiBN,IAAjB;IACH;IACJ;IAfqD;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAgBtDH,SAAKQ,OAAL,GAAe,CAACD,WAAD,GAAe,EAAf,GAAoBP,KAAKQ,OAAxC;IACAR,SAAKQ,OAAL,CAAaC,IAAb,CAAkB,EAAEL,wBAAF,EAAlB;IACH;AACD,IAAO,SAASM,YAAT,CAAsBV,IAAtB,EAA4BG,IAA5B,EAAkC;IACrC,QAAIA,KAAKK,OAAT,EAAkB;IACd,eAAOG,UAAUX,IAAV,EAAgBG,KAAKK,OAArB,CAAP;IACH,KAFD,MAGK;IACD,eAAO,KAAP;IACH;IACJ;AACD,IAAO,SAASI,UAAT,CAAoBZ,IAApB,EAA0B;IAC7B,QAAIa,UAAJ;IACA;IACA,WAAOA,IAAIb,KAAKQ,OAAL,IAAgBR,KAAKQ,OAAL,CAAaM,GAAb,EAA3B,EAA+C;IAC3C,YAAID,EAAET,WAAN,EAAmB;IAAA;IAAA;IAAA;;IAAA;IACf,sCAAgBS,EAAET,WAAlB,mIAA+B;IAAA,wBAApBW,CAAoB;;IAC3BA,sBAAEX,WAAF,GAAgB,KAAhB;IACAW,sBAAEP,OAAF,GAAYQ,SAAZ;IACH;IAJc;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAKlB;IACJ;IACJ;IACD,SAASL,SAAT,CAAmBX,IAAnB,EAAyBQ,OAAzB,EAAkC;IAC9B,QAAIA,QAAQS,MAAR,KAAmB,CAAvB,EAA0B;IACtB,YAAMC,SAASV,QAAQ,CAAR,CAAf;IACA,YAAMW,QAAQzB,aAAawB,OAAOvB,IAApB,EAA0BuB,OAAOtB,MAAjC,CAAd;IACA,YAAI,CAACuB,KAAL,EAAY;IACR,mBAAOD,OAAOvB,IAAd;IACH;IACDiB,mBAAWZ,IAAX;IACAK,oBAAYL,IAAZ,EAAkB,CAACkB,OAAOvB,IAAR,CAAlB,EAAiCuB,OAAOtB,MAAxC;IACH,KARD,MASK;IACD,YAAMU,QAAQE,QAAQY,GAAR,CAAY,UAACC,CAAD;IAAA,mBAAOA,EAAE1B,IAAT;IAAA,SAAZ,CAAd;IACA,YAAMuB,UAASV,QAAQ,CAAR,CAAf;IACAI,mBAAWZ,IAAX;IACAK,oBAAYL,IAAZ,EAAkBM,KAAlB,EAAyBY,QAAOtB,MAAhC;IACH;IACJ;;ICxEM,IAAM0B,OAAO,MAAb;AACP,IAkBO,SAASC,WAAT,CAAqBC,MAArB,EAA6B;IAChC,QAAMC,SAAS,EAAf;IACA,QAAMC,UAAUF,OAAOG,OAAP,CAAe,YAAf,EAA6B,EAA7B,EAAiCA,OAAjC,CAAyC,iBAAzC,EAA4D,OAA5D,EAAqEC,KAArE,CAA2E,GAA3E,CAAhB;IAFgC;IAAA;IAAA;;IAAA;IAGhC,6BAAgBF,OAAhB,8HAAyB;IAAA,gBAAdG,CAAc;;IACrBJ,mBAAOhB,IAAP,CAAYqB,cAAcD,CAAd,CAAZ;IACH;IAL+B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAMhC,WAAOJ,MAAP;IACH;AACD,IAAO,SAASK,aAAT,CAAuBD,CAAvB,EAA0B;IAC7B,QAAIA,MAAMP,IAAV,EAAgB;IACZ,eAAO,IAAP;IACH,KAFD,MAGK;IACD,YAAMS,IAAIF,EAAEF,OAAF,CAAU,iBAAV,EAA6B,OAA7B,EAAsCC,KAAtC,CAA4C,GAA5C,CAAV;IACAG,UAAE,CAAF,IAAOC,SAASD,EAAE,CAAF,CAAT,EAAe,EAAf,IAAqB,EAA5B;IACAA,UAAE,CAAF,IAAOC,SAASD,EAAE,CAAF,CAAT,EAAe,EAAf,IAAqB,CAA5B;IACA,eAAOA,CAAP;IACH;IACJ;AACD,IAAO,SAASE,cAAT,CAAwBJ,CAAxB,EAA2B;IAC9B,QAAIA,MAAMP,IAAV,EAAgB;IACZ,eAAO,IAAP;IACH,KAFD,MAGK;IACD,YAAMS,IAAIF,EAAED,KAAF,CAAQ,GAAR,CAAV;IACA,eAAOG,EAAEX,GAAF,CAAMU,aAAN,CAAP;IACH;IACJ;AACD,IAAO,SAASI,iBAAT,CAA2BC,QAA3B,EAAqC;IACxC,gBAAUC,OAAOC,YAAP,CAAoBF,SAASG,CAAT,GAAa,EAAjC,CAAV,IAAkDH,SAASI,CAAT,GAAa,CAA/D;IACH;AACD,IAAO,SAASC,kBAAT,CAA4BC,SAA5B,EAAuC;IAC1C,WAAOA,UAAUrB,GAAV,CAAcc,iBAAd,EAAiCQ,IAAjC,CAAsC,GAAtC,CAAP;IACH;AACD,IAAO,SAASC,SAAT,CAAmB3C,IAAnB,EAAyB;IAC5B,WAAO,CAACA,IAAD,GAAQ,EAAR,GAAaA,KAAKM,KAAL,CAAWc,GAAX,CAAe,UAACwB,CAAD;IAAA,eAAO5C,KAAK6C,YAAL,CAAkBD,CAAlB,CAAP;IAAA,KAAf,CAApB;IACH;AACD,IAAO,SAASE,KAAT,CAAeC,MAAf,EAAuB;IAC1B;IACA;IACA;IACA,WAAO,IAAIA,MAAX;IACH;AACD,IAAO,SAASC,YAAT,CAAsB/C,IAAtB,EAA4B;IAC/BgD,iBAAOhD,IAAP,EAAa,CAAC,CAAd;IACAA,SAAKiD,OAAL,GAAeC,oBAAcC,mBAA7B;IACAnD,SAAKoD,MAAL,GAAcF,oBAAcG,mBAA5B;IACAC,oBAAUtD,IAAV;IACA,WAAOA,IAAP;IACH;AACD,IAAO,SAASuD,KAAT,CAAexD,IAAf,EAAqB;IACxB,WAAOA,KAAKM,KAAL,CAAWW,MAAlB,EAA0B;IACtBjB,aAAKyD,IAAL;IACH;IACJ;AACD,IAAO,SAASC,MAAT,CAAgB1D,IAAhB,EAAsBwB,MAAtB,EAA8B;IACjC,QAAI,CAACA,MAAL,EAAa;IACT;IACH;IACD;IACA,QAAME,UAAUF,OAAOG,OAAP,CAAe,eAAf,EAAgC,EAAhC,EAAoCC,KAApC,CAA0C,GAA1C,CAAhB;IACA,WAAOF,QAAQT,MAAR,GAAiBjB,KAAKM,KAAL,CAAWW,MAAnC,EAA2C;IACvCjB,aAAKL,IAAL,CAAUK,KAAK2D,YAAL,CAAkBjC,QAAQ1B,KAAKM,KAAL,CAAWW,MAAnB,CAAlB,CAAV;IACH;IACJ;AACD,IAAO,SAAS2C,OAAT,CAAiB5D,IAAjB,EAAuB+C,MAAvB,EAA+B;IAClC,QAAK/C,KAAK+C,MAAL,KAAgBA,MAAjB,IAA4B/C,KAAKM,KAAL,CAAWW,MAA3C,EAAmD;IAC/CjB,aAAKyD,IAAL;IACH;IACD,WAAQzD,KAAK+C,MAAL,KAAgBA,MAAjB,IAA4B/C,KAAKM,KAAL,CAAWW,MAA9C,EAAsD;IAClDjB,aAAKyD,IAAL;IACH;IACJ;;QC1FYI,SAAS,CAClB,OADkB,EAElB,MAFkB,EAGlB,OAHkB,EAIlB,UAJkB,EAKlB,SALkB,EAMlB,SANkB,EAOlB,OAPkB,EAQlB,SARkB,EASlB,UATkB,EAUlB,OAVkB,EAWlB,UAXkB,EAYlB,MAZkB,CAAf;IAcP,IAAMC,QAAQ,IAAIC,GAAJ,CAAQ,CAClB,CAACC,qBAAD,EAAkB,aAAlB,CADkB,EAElB,CAACb,mBAAD,EAAgB,WAAhB,CAFkB,EAGlB,CAACc,gBAAD,EAAa,QAAb,CAHkB,EAIlB,CAACC,oBAAD,EAAiB,YAAjB,CAJkB,CAAR,CAAd;IAMA,SAASC,IAAT,CAAcC,IAAd,EAAoB;IAChB,WAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkBF,IAAlB,CAAP;IACH;IACD,SAASG,MAAT,CAAgBC,IAAhB,EAAsB;IAClB,gDAA4CC,IAApC,CAA0C,IAAIC,GAAJ,CAAQF,IAAR,CAAD,CAAgBG,QAAzD,CAAD,CAAqE,CAArE;IAAP;IACH;IACD,SAASC,EAAT,CAAYC,GAAZ,EAAiB;IACb,WAAOA,IAAIlD,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAP;IACH;IACD,IAAMmD,QAAQ,CAAC,MAAD,EAAS,QAAT,CAAd;IACA,SAASC,KAAT,CAAe1D,CAAf,EAAkB2D,CAAlB,EAAqB;IAAA;IAAA;IAAA;;IAAA;IACjB,6BAAgBX,OAAOY,IAAP,CAAY5D,CAAZ,CAAhB,8HAAgC;IAAA,gBAArB6D,CAAqB;;IAC5B,gBAAIrF,MAAMC,OAAN,CAAcuB,EAAE6D,CAAF,CAAd,CAAJ,EAAyB;IACrB7D,kBAAK6D,CAAL,cAAiB7D,EAAE6D,CAAF,CAAjB;IACA7D,kBAAE6D,CAAF,IAAO7D,EAAE6D,CAAF,EAAKxC,IAAL,CAAU,IAAV,CAAP;IACH;IACJ;IANgB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAOjBrB,MAAE8D,SAAF,GAAcC,aAAa/D,CAAb,EAAgB2D,CAAhB,CAAd;IACAF,UAAMO,OAAN,CAAc,UAACC,CAAD,EAAO;IACjB,YAAIjE,EAAEiE,CAAF,CAAJ,EAAU;IACNjE,cAAKiE,CAAL,aAAgBf,OAAOlD,EAAEiE,CAAF,CAAP,CAAhB;IACH;IACJ,KAJD;IAKA,WAAOjE,CAAP;IACH;IACD,SAAS+D,YAAT,CAAsB/D,CAAtB,EAAyB2D,CAAzB,EAA4B;IACxB,QAAMG,YAAY,EAAlB;IADwB;IAAA;IAAA;;IAAA;IAExB,8BAAgBd,OAAOY,IAAP,CAAYD,CAAZ,CAAhB,mIAAgC;IAAA,gBAArBE,CAAqB;;IAC5B,gBAAI7D,EAAE6D,CAAF,CAAJ,EAAU;IACN;IACH;IACD,gBAAIrF,MAAMC,OAAN,CAAckF,EAAEE,CAAF,CAAd,CAAJ,EAAyB;IACrB,oBAAMK,IAAOL,CAAP,UAAN;IACAF,kBAAEO,CAAF,IAAOP,EAAEE,CAAF,CAAP;IACAF,kBAAEE,CAAF,IAAOF,EAAEE,CAAF,EAAKxC,IAAL,CAAU,IAAV,CAAP;IACArB,kBAAEkE,CAAF,IAAOP,EAAEO,CAAF,CAAP;IACH;IACDlE,cAAE6D,CAAF,IAAOF,EAAEE,CAAF,CAAP;IACAC,sBAAUD,CAAV,IAAe,IAAf;IACH;IAduB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAexB,WAAOC,SAAP;IACH;AACD,IAAO,SAASK,KAAT,CAAeC,KAAf,EAAmC;IAAA,QAAbC,GAAa,uEAAP,KAAO;;IACtC,QAAMC,SAAS,EAAf;IADsC;IAAA;IAAA;;IAAA;IAEtC,8BAAkBtB,OAAOY,IAAP,CAAYQ,KAAZ,CAAlB,mIAAsC;IAAA,gBAA3BZ,GAA2B;;IAClC,gBAAMxD,IAAIoE,MAAMZ,GAAN,CAAV;IACA,gBAAI,CAACa,GAAD,IAAQrE,EAAEqE,GAAd,EAAmB;IACf;IACH;IACD,gBAAM9C,IAAIgD,IAAIvE,CAAJ,EAAOoE,KAAP,EAAcZ,GAAd,CAAV;IACAR,mBAAOwB,MAAP,CAAcjD,CAAd;IACA+C,mBAAOlF,IAAP,CAAYmC,CAAZ;IACH;IAVqC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAWtC,WAAO+C,MAAP;IACH;IACD,SAASC,GAAT,CAAavE,CAAb,EAAgBoE,KAAhB,EAAuBZ,GAAvB,EAA4B;IACxB,QAAMiB,aAAazE,EAAE0E,QAArB;IACA,QAAMf,IAAK3D,EAAE0E,QAAF,GAAaN,MAAMpE,EAAE0E,QAAR,CAAb,GAAiC,EAA5C;IACA,QAAMnD,IAAImC,MAAMZ,KAAK9C,CAAL,CAAN,EAAe8C,KAAKa,CAAL,CAAf,CAAV;IACApC,MAAEgC,EAAF,GAAOA,GAAGC,GAAH,CAAP;IACAjC,MAAEkD,UAAF,GAAeA,aAAalB,GAAGkB,UAAH,CAAb,GAA8B9E,SAA7C;IACA,QAAIgF,iBAAJ;IACA3B,WAAO4B,cAAP,CAAsBrD,CAAtB,EAAyB,UAAzB,EAAqC;IACjC;IACAsD,WAFiC,iBAE3B;IACF,gBAAIF,QAAJ,EAAc;IACV,uBAAOA,QAAP;IACH;IACDA,uBAAW,IAAIP,MAAMZ,GAAN,CAAJ,EAAX;IACAxE,wBAAY2F,QAAZ,EAAsBA,SAASG,QAAT,EAAtB;IACA,mBAAO9B,OAAOwB,MAAP,CAAcG,QAAd,CAAP;IACH;IATgC,KAArC;IAWA3B,WAAO4B,cAAP,CAAsBrD,CAAtB,EAAyB,OAAzB,EAAkC;IAC9B;IACAsD,WAF8B,iBAExB;IACF,mBAAOtD,EAAEoD,QAAF,CAAW/F,IAAX,CAAgBC,KAAhB,CAAsBe,MAA7B;IACH;IAJ6B,KAAlC;IAMAoD,WAAO4B,cAAP,CAAsBrD,CAAtB,EAAyB,MAAzB,EAAiC;IAC7B;IACAsD,WAF6B,iBAEvB;IACF,mBAAOpC,MAAMoC,GAAN,CAAUtD,EAAEoD,QAAF,CAAW/F,IAAX,CAAgBmG,WAA1B,CAAP;IACH;IAJ4B,KAAjC;IAMAxD,MAAEmD,QAAF,GAAaf,EAAEqB,KAAF,IAAWhF,EAAEgF,KAA1B;IACAzD,MAAEuC,SAAF,CAAYY,QAAZ,GAAuB,CAACf,EAAEqB,KAA1B;IACAzD,MAAE4B,IAAF,GAAS5B,EAAE0D,IAAF,IAAU1D,EAAE2D,MAArB;IACA3D,MAAE4D,QAAF,GAAa5D,EAAE6D,QAAF,IAAc7D,EAAE8D,UAA7B;IACA9D,MAAE8C,GAAF,GAAQrE,EAAEqE,GAAV;IACA,WAAO9C,CAAP;IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QChHY+D,UAAb;IACI,wBAAY3G,IAAZ,EAA4B;IAAA,YAAV4G,GAAU,uEAAJ,EAAI;IAAA;;IACxB,aAAKC,KAAL,GAAa,KAAb;IACA,aAAKC,SAAL,GAAiB,CAAjB;IACA,aAAKC,eAAL,GAAuB,CAAvB;IACA,aAAKC,WAAL,GAAmB,GAAnB;IACA,aAAKC,OAAL,GAAe,CAAC,CAAhB;IACA,aAAKC,aAAL,GAAqB,CAAC,CAAtB;IACA,aAAKC,OAAL,GAAe,KAAf;IACA,aAAKC,OAAL,GAAe,KAAf;IACA,aAAKC,KAAL,GAAa,IAAb;IACA,aAAKC,aAAL,GAAqB,IAArB;IACA,aAAKtH,IAAL,GAAYA,IAAZ;IACA,aAAKoG,WAAL,GAAmBpG,KAAKoG,WAAxB;IACA/B,eAAOC,MAAP,CAAc,IAAd,EAAoBsC,GAApB;IACA,aAAKW,IAAL,CAAU,SAAV;IACA,aAAKA,IAAL,CAAU,OAAV;IACA,aAAKA,IAAL,CAAU,QAAV;IACH;;IAlBL;IAAA;IAAA,kCAmBc;IACN,iBAAKC,IAAL;IACH;IArBL;IAAA;IAAA,mCA+Be;IACP,mBAAO,KAAKxH,IAAL,CAAUmG,QAAV,EAAP;IACH;IAjCL;IAAA;IAAA,+BAkCW;IACH,iBAAKnG,IAAL,CAAUyD,IAAV;IACH;IApCL;IAAA;IAAA,6BAqCSb,CArCT,EAqCY;IACJ,iBAAK5C,IAAL,CAAUL,IAAV,CAAeiD,CAAf;IACA,gBAAI,CAAC,KAAK5C,IAAL,CAAUyH,MAAX,IAAqB,KAAKzH,IAAL,CAAUM,KAAV,CAAgB,KAAKN,IAAL,CAAUM,KAAV,CAAgBW,MAAhB,GAAyB,CAAzC,CAAzB,EAAsE;IAClE,qBAAKyG,KAAL;IACH,aAFD,MAGK;IACD,qBAAKF,IAAL;IACA,qBAAKP,OAAL,GAAe,CAAC,CAAhB;IACA,qBAAKC,aAAL,GAAqB,CAAC,CAAtB;IACA,qBAAKC,OAAL,GAAe,KAAf;IACH;IACJ;IAhDL;IAAA;IAAA,mCAiDe;IACP,mBAAO,KAAKnH,IAAL,CAAU2H,QAAV,EAAP;IACH;IAnDL;IAAA;IAAA,qCAmEiBhI,IAnEjB,EAmEuB;IACf,mBAAO,KAAKK,IAAL,CAAU6C,YAAV,GAAyB,KAAK7C,IAAL,CAAU6C,YAAV,CAAuBlD,IAAvB,CAAzB,GAAwD,EAA/D;IACH;IArEL;IAAA;IAAA,qCAsEiBA,IAtEjB,EAsEuB;IACf,mBAAO,KAAKK,IAAL,CAAU2D,YAAV,CAAuBhE,IAAvB,CAAP;IACH;IAxEL;IAAA;IAAA,gCAyEY;IAAA;;IACJ,iBAAK6H,IAAL,CAAU,CAAC,CAAC,KAAKX,KAAjB;IACA,iBAAKI,OAAL,GAAe,CAAC,CAAhB;IACA,iBAAKC,aAAL,GAAqB,CAAC,CAAtB;IACA,iBAAKC,OAAL,GAAe,KAAf;IACA,iBAAKG,aAAL,GAAqB,IAArB;IACA,gBAAI,CAAC,KAAKT,KAAV,EAAiB;IACb;IACH;IACD,gBAAII,UAAU,KAAKH,SAAnB;IACA,iBAAKO,KAAL,GAAaO,YAAY,YAAM;IAC3B,sBAAKJ,IAAL,CAAU,IAAV;IACA,sBAAKP,OAAL,GAAeA,OAAf;IACA,sBAAKI,KAAL,GAAaO,YAAY,YAAM;IAC3BX;IACA,wBAAIA,WAAW,MAAKF,eAApB,EAAqC;IACjC,8BAAKG,aAAL,GAAqBD,OAArB;IACH;IACDY,+BAAW,YAAM;IACb,8BAAKZ,OAAL,GAAeA,OAAf;IACA,4BAAI,CAACA,OAAL,EAAc;IACV,kCAAKO,IAAL;IACA,kCAAKL,OAAL,GAAe,IAAf;IACA,kCAAKG,aAAL,GAAqBxE,MAAM,MAAK9C,IAAL,CAAU+C,MAAhB,CAArB;IACH;IACJ,qBAPD,EAOG,MAAKiE,WAPR;IAQH,iBAbY,EAaV,IAbU,CAAb;IAcH,aAjBY,EAiBV,KAAKH,KAAL,GAAaI,UAAU,IAAvB,GAA8B,KAAKD,WAjBzB,CAAb;IAkBH;IArGL;IAAA;IAAA,+BAsG0B;IAAA,gBAAjBI,OAAiB,uEAAP,KAAO;;IAClB,iBAAKA,OAAL,GAAeA,OAAf;IACA,gBAAI,KAAKC,KAAT,EAAgB;IACZS,8BAAc,KAAKT,KAAnB;IACA,qBAAKA,KAAL,GAAa,IAAb;IACH;IACJ;IA5GL;IAAA;IAAA,6BA6GSU,IA7GT,EA6Ge;IACP,gBAAI,KAAK/H,IAAL,CAAU+H,IAAV,CAAJ,EAAqB;IACjB,qBAAKA,IAAL,IAAa,KAAK/H,IAAL,CAAU+H,IAAV,EAAgBR,IAAhB,CAAqB,KAAKvH,IAA1B,CAAb;IACH;IACJ;IAjHL;IAAA;IAAA,+BAsBe;IACP,mBAAO,KAAKA,IAAL,CAAUC,IAAjB;IACH;IAxBL;IAAA;IAAA,+BAyBgB;IACR,mBAAO,KAAKD,IAAL,CAAUgI,KAAjB;IACH;IA3BL;IAAA;IAAA,+BA4BgB;IACR,mBAAO,KAAKhI,IAAL,CAAUM,KAAjB;IACH;IA9BL;IAAA;IAAA,+BAoDiB;IACT,mBAAO,KAAKN,IAAL,CAAU+C,MAAjB;IACH;IAtDL;IAAA;IAAA,+BAuDiB;IACT,mBAAO,KAAKuE,aAAL,IAAsB,KAAKtH,IAAL,CAAUyH,MAAvC;IACH;IAzDL;IAAA;IAAA,+BA0DgB;IACR,mBAAO,KAAKzH,IAAL,CAAUiI,KAAjB;IACH;IA5DL;IAAA;IAAA,+BA6DoB;IACZ,mBAAO,KAAKjI,IAAL,CAAUkI,SAAjB;IACH;IA/DL;IAAA;IAAA,+BAgEe;IACP,mBAAO,KAAKlI,IAAL,CAAUmI,IAAjB;IACH;IAlEL;IAAA;IAAA;;;ICAA,CAAC,UAAUC,KAAV,EAAiB;IACdA,UAAMA,MAAM,UAAN,IAAoB,CAA1B,IAA+B,UAA/B;IACAA,UAAMA,MAAM,aAAN,IAAuB,CAA7B,IAAkC,aAAlC;IACAA,UAAMA,MAAM,QAAN,IAAkB,CAAxB,IAA6B,QAA7B;IACAA,UAAMA,MAAM,KAAN,IAAe,CAArB,IAA0B,KAA1B;IACAA,UAAMA,MAAM,OAAN,IAAiB,CAAvB,IAA4B,OAA5B;IACAA,UAAMA,MAAM,SAAN,IAAmB,CAAzB,IAA8B,SAA9B;IACAA,UAAMA,MAAM,QAAN,IAAkB,CAAxB,IAA6B,QAA7B;IACAA,UAAMA,MAAM,SAAN,IAAmB,CAAzB,IAA8B,SAA9B;IACAA,UAAMA,MAAM,WAAN,IAAqB,CAA3B,IAAgC,WAAhC;IACH,CAVD,EAUGA,kBAAUA,gBAAQ,EAAlB,CAVH;AAWA,IACA,CAAC,UAAUC,MAAV,EAAkB;IACfA,WAAOA,OAAO,YAAP,IAAuB,CAA9B,IAAmC,YAAnC;IACAA,WAAOA,OAAO,YAAP,IAAuB,CAA9B,IAAmC,YAAnC;IACAA,WAAOA,OAAO,WAAP,IAAsB,CAA7B,IAAkC,WAAlC;IACH,CAJD,EAIGA,mBAAWA,iBAAS,EAApB,CAJH;IAKA;AACA,QAAaC,+DACRF,cAAMG,QADE,EACSF,eAAOG,UADhB,gCAERJ,cAAMK,WAFE,EAEYJ,eAAOG,UAFnB,gCAGRJ,cAAMM,MAHE,EAGOL,eAAOG,UAHd,gCAIRJ,cAAMO,GAJE,EAIIN,eAAOO,UAJX,gCAKRR,cAAMS,KALE,EAKMR,eAAOG,UALb,gCAMRJ,cAAMU,OANE,EAMQT,eAAOU,SANf,gCAORX,cAAMY,MAPE,EAOOX,eAAOG,UAPd,gCAQRJ,cAAMa,OARE,EAQQZ,eAAOG,UARf,gCASRJ,cAAMc,SATE,EASUb,eAAOO,UATjB,gBAAN;IAWP;AACA,QAAaO,4DACRd,eAAOG,UADC,EACY,CAAC,OAAD,EAAU,OAAV,CADZ,+BAERH,eAAOO,UAFC,EAEY,CAAC,QAAD,EAAW,MAAX,CAFZ,+BAGRP,eAAOU,SAHC,EAGW,CAAC,KAAD,EAAQ,QAAR,CAHX,eAAN;;IC/BA,SAASK,WAAT,CAAqBzJ,IAArB,EAA2BoD,MAA3B,EAAmCsG,GAAnC,EAAwC;IAC3C,QAAMC,OAAO,EAAb;IAD2C;IAAA;IAAA;;IAAA;IAE3C,6BAAqB3J,KAAKmF,KAA1B,8HAAiC;IAAA;;IAAA;;IAAA,gBAArBS,CAAqB;IAAA,gBAAlB3C,CAAkB;;IAC7B;IACA,gBAAM2G,WAAW,CAAChE,CAAlB;IACA,gBAAI,CAAC+D,KAAKC,QAAL,CAAL,EAAqB;IACjBD,qBAAKC,QAAL,IAAiB,IAAjB;IACA,oBAAIC,IAAI5G,CAAR;IACA,oBAAI6G,IAAI,CAAR;IACA,uBAAOD,KAAMA,EAAEE,IAAF,KAAW3G,MAAxB,EAAiC;IAC7B0G;IACAD,wBAAIA,EAAE1E,KAAF,CAAQoB,GAAR,CAAYX,CAAZ,CAAJ;IACAiE,wBAAKA,MAAM7J,IAAP,GAAe6J,CAAf,GAAmB,KAAvB;IACH;IACDA,oBAAK7J,IAAD,CAAOmF,KAAP,CAAaoB,GAAb,CAAiBqD,QAAjB,CAAJ;IACA,uBAAOC,KAAMA,EAAEE,IAAF,KAAW3G,MAAxB,EAAiC;IAC7B0G;IACAD,wBAAIA,EAAE1E,KAAF,CAAQoB,GAAR,CAAYqD,QAAZ,CAAJ;IACAC,wBAAKA,MAAM7J,IAAP,GAAe6J,CAAf,GAAmB,KAAvB;IACH;IACD,oBAAIC,KAAKJ,GAAT,EAAc;IACV,2BAAO,IAAP;IACH;IACJ;IACJ;IAxB0C;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAyB9C;;ICzBM,SAASM,cAAT,CAAwBzJ,KAAxB,EAA+BmJ,GAA/B,EAAoCtG,MAApC,EAA4C;IAC/C,QAAI6G,IAAI,CAAR;IAD+C;IAAA;IAAA;;IAAA;IAE/C,6BAAgB1J,KAAhB,8HAAuB;IAAA,gBAAZ6B,CAAY;;IACnB,gBAAM8H,IAAI,EAAV;IADmB;IAAA;IAAA;;IAAA;IAEnB,sCAAgB9H,EAAE+C,KAAlB,mIAAyB;IAAA,wBAAdgF,CAAc;;IACrB,wBAAIA,EAAE,CAAF,IAAO,CAAX,EAAc;IACV,4BAAMC,KAAKD,EAAE,CAAF,CAAX;IACA,4BAAME,WAAWjI,EAAE+C,KAAF,CAAQoB,GAAR,CAAYnE,EAAEwH,QAAF,GAAaxH,EAAEwH,QAAF,CAAWO,EAAE,CAAF,CAAX,CAAb,GAAgC,CAACA,EAAE,CAAF,CAA7C,CAAjB;IACA,4BAAI,CAAC,CAACE,QAAD,IAAaA,SAASN,IAAT,KAAkB3G,MAAhC,KAA4CgH,GAAGL,IAAH,KAAY3G,MAA5D,EAAqE;IACjE8G,8BAAEpJ,IAAF,CAAOqJ,EAAE,CAAF,CAAP;IACH;IACJ;IACJ;IAVkB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAWnB,gBAAI,CAACD,EAAE5I,MAAP,EAAe;IACX,oBAAIgJ,KAAK,CAAT;IADW;IAAA;IAAA;;IAAA;IAEX,0CAAgBlI,EAAE+C,KAAF,CAAQoF,MAAR,EAAhB,mIAAkC;IAAA,4BAAvBC,CAAuB;;IAC9B,4BAAI,CAACA,EAAET,IAAP,EAAa;IACTO;IACH;IACJ;IANU;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAOXL,qBAAKK,KAAK,CAAV;IACA;IACH;IApBkB;IAAA;IAAA;;IAAA;IAqBnB,sCAAgBJ,CAAhB,mIAAmB;IAAA,wBAAR3E,CAAQ;;IACf0E,yBAAKjC,WAAS5F,CAAT,EAAYmD,CAAZ,EAAemE,GAAf,EAAoBtG,MAApB,CAAL;IACH;IAvBkB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAwBtB;IA1B8C;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IA2B/C,WAAO6G,CAAP;IACH;IACD,SAASjC,UAAT,CAAkB5F,CAAlB,EAAqBmD,CAArB,EAAwBmE,GAAxB,EAA6BtG,MAA7B,EAAqC;IACjC,QAAMuC,IAAI,EAAV;IACA,QAAIvE,IAAIgB,CAAR;IACA,WAAOhB,CAAP,EAAU;IACNuE,UAAE7E,IAAF,CAAOM,CAAP;IACAA,YAAKA,CAAD,CAAI+D,KAAJ,CAAUoB,GAAV,CAAchB,CAAd,CAAJ;IACA,YAAI,CAACnE,CAAD,IAAQA,CAAD,CAAI2I,IAAJ,KAAa3G,MAAxB,EAAiC;IAC7B;IACH;IACJ;IACD,QAAIqH,IAAI,CAAR;IACArJ,QAAIuE,EAAE,CAAF,EAAKR,KAAL,CAAWoB,GAAX,CAAe,CAAChB,CAAhB,CAAJ;IACA,QAAInE,KAAK,CAACA,EAAE2I,IAAZ,EAAkB;IACdU;IACH;IACDrJ,QAAIuE,EAAEA,EAAErE,MAAF,GAAW,CAAb,EAAgB6D,KAAhB,CAAsBoB,GAAtB,CAA0BhB,CAA1B,CAAJ;IACA,QAAInE,KAAK,CAACA,EAAE2I,IAAZ,EAAkB;IACdU;IACH;IACD,QAAI,CAACA,CAAD,IAAO9E,EAAErE,MAAF,GAAWoI,GAAtB,EAA4B;IACxB,eAAO,CAAP;IACH;IACD,WAAOgB,KAAKC,GAAL,CAASjB,GAAT,EAAc/D,EAAErE,MAAF,GAAW,CAAX,IAAgBqE,EAAErE,MAAF,IAAYoI,GAAZ,GAAkB,CAAlB,GAAsB,CAAtC,CAAd,IAA0DgB,KAAKC,GAAL,CAASjB,GAAT,EAAc/D,EAAErE,MAAhB,KAA2B,IAAImJ,CAA/B,CAAjE;IACH;;ICpDM,SAASG,OAAT,CAAiB5K,IAAjB,EAAuBoD,MAAvB,EAA+BsG,GAA/B,EAAoC;IACvC,QAAMC,OAAO,EAAb;IADuC;IAAA;IAAA;;IAAA;IAEvC,6BAAgB3J,KAAKmF,KAArB,8HAA4B;IAAA,gBAAjBS,CAAiB;;IACxB,gBAAI+D,KAAK,CAAC/D,EAAE,CAAF,CAAN,CAAJ,EAAiB;IACb;IACH;IACD,gBAAMI,SAAS,CAAChG,IAAD,CAAf;IACA2J,iBAAK,CAAC/D,EAAE,CAAF,CAAN,IAAc,IAAd;IACA,gBAAMkE,IAAIe,WAAWjF,CAAX,EAAcxC,MAAd,EAAsB4C,MAAtB,EAA8BhG,IAA9B,CAAV;IACA,gBAAI8J,KAAKJ,GAAT,EAAc;IACV,uBAAO1D,MAAP;IACH;IACJ;IAZsC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAa1C;IACD,SAAS6E,UAAT,CAAoBjF,CAApB,EAAuBxC,MAAvB,EAA+B4C,MAA/B,EAAuChG,IAAvC,EAA6C;IACzC,QAAI6J,IAAIjE,EAAE,CAAF,CAAR;IACA,QAAIkE,IAAI,CAAR;IACA,WAAOD,KAAMA,EAAEE,IAAF,KAAW3G,MAAxB,EAAiC;IAC7B4C,eAAOlF,IAAP,CAAY+I,CAAZ;IACAC;IACAD,YAAIA,EAAE1E,KAAF,CAAQoB,GAAR,CAAYX,EAAE,CAAF,CAAZ,CAAJ;IACAiE,YAAKA,MAAM7J,IAAP,GAAe6J,CAAf,GAAmB,KAAvB;IACH;IACDA,QAAK7J,IAAD,CAAOmF,KAAP,CAAaoB,GAAb,CAAiB,CAACX,EAAE,CAAF,CAAlB,CAAJ;IACA,WAAOiE,KAAMA,EAAEE,IAAF,KAAW3G,MAAxB,EAAiC;IAC7B4C,eAAO8E,OAAP,CAAejB,CAAf;IACAC;IACAD,YAAIA,EAAE1E,KAAF,CAAQoB,GAAR,CAAY,CAACX,EAAE,CAAF,CAAb,CAAJ;IACAiE,YAAKA,MAAM7J,IAAP,GAAe6J,CAAf,GAAmB,KAAvB;IACH;IACD,WAAOC,CAAP;IACH;;IC9BM,SAAS5G,YAAT,CAAsBlD,IAAtB,EAA4B;IAC/B,QAAI,CAACA,IAAL,EAAW;IACP,eAAO,MAAP;IACH;IACD,QAAM+K,IAAI,KAAKzK,IAAL,CAAUiD,OAAV,CAAkBvD,IAAlB,CAAV;IACA,WAAOuC,kBAAkBwI,CAAlB,CAAP;IACH;AACD,IAAO,SAAS/G,YAAT,CAAsBhE,IAAtB,EAA4B;IAC/B,QAAM+K,IAAI5I,cAAcnC,IAAd,CAAV;IACA,QAAI,CAAC+K,CAAL,EAAQ;IACJ,eAAOA,CAAP;IACH;IACD,QAAM3I,IAAI,KAAK9B,IAAL,CAAUE,IAAV,CAAewK,KAAf,CAAqB,KAAK1K,IAA1B,EAAgCyK,CAAhC,CAAV;IACA,WAAO,KAAKE,OAAL,CAAa1E,GAAb,CAAiBnE,EAAE8C,GAAnB,CAAP;IACH;AACD,IAAO,SAASgG,aAAT,CAAuBlL,IAAvB,EAA6B;IAChC,QAAI,CAACA,IAAL,EAAW;IACP,eAAO,MAAP;IACH;IACD,QAAM+K,IAAI,CAAC7K,MAAMC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA9B,EAAsCyB,GAAtC,CAA0C,KAAKnB,IAAL,CAAUiD,OAApD,CAAV;IACA,WAAOV,mBAAmBkI,CAAnB,CAAP;IACH;AACD,IAAO,SAASI,aAAT,CAAuBnL,IAAvB,EAA6B;IAChC,QAAI,CAACA,IAAL,EAAW;IACP,eAAO,MAAP;IACH;IACD,QAAM+K,IAAI,CAAC7K,MAAMC,OAAN,CAAcH,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAA9B,EAAsCoL,MAAtC,CAA6C,UAAClJ,CAAD,EAAIE,CAAJ,EAAU;IAC7D,YAAMV,IAAKxB,MAAMC,OAAN,CAAciC,CAAd,IAAmBA,EAAEiJ,KAAF,EAAnB,GAA+B,CAACjJ,CAAD,CAA1C;IACAV,UAAE4J,OAAF;IACA5J,UAAEgE,OAAF,CAAU,UAAC8E,CAAD;IAAA,mBAAOtI,EAAEpB,IAAF,CAAO0J,CAAP,CAAP;IAAA,SAAV;IACA,eAAOtI,CAAP;IACH,KALS,EAKP,EALO,EAKHT,GALG,CAKC,KAAKnB,IAAL,CAAUiD,OALX,CAAV;IAMA,WAAOV,mBAAmBkI,CAAnB,CAAP;IACH;AACD,IAAO,SAASQ,aAAT,CAAuBvL,IAAvB,EAA6B;IAChC,QAAM+K,IAAIzI,eAAetC,IAAf,CAAV;IACA,QAAI,CAAC+K,CAAL,EAAQ;IACJ,eAAOA,CAAP;IACH;IACD,QAAM9H,IAAI,CAACuI,QAAQC,IAAR,CAAa,IAAb,EAAmBV,EAAEW,KAAF,EAAnB,CAAD,CAAV;IACA,QAAIX,EAAEzJ,MAAF,KAAa,CAAjB,EAAoB;IAChB2B,UAAEnC,IAAF,CAAO0K,QAAQC,IAAR,CAAa,IAAb,EAAmBV,EAAEW,KAAF,EAAnB,CAAP;IACH,KAFD,MAGK;IACD,eAAOX,EAAEzJ,MAAT,EAAiB;IACb,gBAAM+D,IAAImG,QAAQC,IAAR,CAAa,IAAb,EAAmBV,EAAEW,KAAF,EAAnB,CAAV;IACA,gBAAMhK,IAAI8J,QAAQC,IAAR,CAAa,IAAb,EAAmBV,EAAEW,KAAF,EAAnB,CAAV;IACAzI,cAAEnC,IAAF,CAAO,CAACY,CAAD,EAAI2D,CAAJ,CAAP;IACH;IACJ;IACD,WAAOpC,CAAP;IACH;IACD,SAASuI,OAAT,CAAiBpJ,CAAjB,EAAoB;IAChB,WAAO,KAAK6I,OAAL,CAAa1E,GAAb,CAAiB,KAAKjG,IAAL,CAAUE,IAAV,CAAewK,KAAf,CAAqB,KAAK1K,IAA1B,EAAgC8B,CAAhC,EAAmC8C,GAApD,CAAP;IACH;AACD,IAAO,SAASyG,aAAT,CAAuB3L,IAAvB,EAA6B;IAAA;;IAChC,QAAM+K,IAAIzI,eAAetC,IAAf,CAAV;IACA,QAAI,CAAC+K,CAAL,EAAQ;IACJ,eAAOA,CAAP;IACH;IACD,WAAOA,EAAEtJ,GAAF,CAAM,UAACmK,EAAD,EAAQ;IACjB,YAAMxJ,IAAI,MAAK9B,IAAL,CAAUE,IAAV,CAAewK,KAAf,CAAqB,MAAK1K,IAA1B,EAAgCsL,EAAhC,CAAV;IACA,eAAO,MAAKX,OAAL,CAAa1E,GAAb,CAAiBnE,EAAE8C,GAAnB,CAAP;IACH,KAHM,CAAP;IAIH;;IChEM,SAASpB,IAAT,GAAgB;IACnB,QAAM9D,OAAO,KAAKW,KAAL,CAAWQ,GAAX,EAAb;IACAnB,SAAK+J,IAAL,GAAY,IAAZ;IACA,SAAK8B,WAAL,CAAiBC,GAAjB,CAAqB9L,KAAKkF,GAA1B,EAA+BlF,IAA/B;IACA,SAAKoD,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,SAAK2I,QAAL,GAAgB,KAAhB;IACA,SAAKjE,MAAL,GAAc,CAAd;IACA,SAAKkE,WAAL,CAAiB,KAAK5I,MAAtB,EAA8BjC,GAA9B;IACH;;QCHY8K,eAAb;IACI,6BAAY3L,IAAZ,EAAkBoJ,GAAlB,EAAuB;IAAA;;IACnB,aAAK/I,KAAL,GAAa,EAAb;IACA,aAAKyC,MAAL,GAAc,CAAd;IACA,aAAK0E,MAAL,GAAc,CAAd;IACA,aAAKiE,QAAL,GAAgB,KAAhB;IACA,aAAKC,WAAL,GAAmB,EAAnB;IACA,aAAK9I,YAAL,GAAoBA,aAAa0E,IAAb,CAAkB,IAAlB,CAApB;IACA,aAAK5D,YAAL,GAAoBA,aAAa4D,IAAb,CAAkB,IAAlB,CAApB;IACA,aAAK9D,IAAL,GAAYA,KAAK8D,IAAL,CAAU,IAAV,CAAZ;IACA,aAAKtH,IAAL,GAAYA,IAAZ;IACA,aAAKoJ,GAAL,GAAWA,GAAX;IACA,aAAKuB,OAAL,GAAeiB,YAAM,KAAK5L,IAAL,CAAUC,KAAhB,CAAf;IACA,aAAKsL,WAAL,GAAmBK,YAAM,KAAK5L,IAAL,CAAUC,KAAhB,CAAnB;IACAsE,mBAAK,KAAKoG,OAAV;IACH;;IAfL;IAAA;IAAA,6BAgBSpJ,MAhBT,EAgBiB;IACT,gBAAMlB,QAAQiB,YAAYC,MAAZ,CAAd;IADS;IAAA;IAAA;;IAAA;IAET,qCAAmBlB,KAAnB,8HAA0B;IAAA,wBAAfX,IAAe;;IACtB,yBAAKA,IAAL,CAAU,KAAKiL,OAAL,CAAa1E,GAAb,CAAiB,KAAKjG,IAAL,CAAUE,IAAV,CAAeR,KAAK,CAAL,CAAf,EAAwBA,KAAK,CAAL,CAAxB,EAAiCkF,GAAlD,CAAV;IACH;IAJQ;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAKZ;IArBL;IAAA;IAAA,mCAsBe;IACP,gBAAI,KAAK6G,QAAT,EAAmB;IACf,uBAAO,EAAP;IACH;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,mBAAOI,cAAQ,KAAKN,WAAb,CAAP;IACH;IApCL;IAAA;IAAA,6BAqCS5I,CArCT,EAqCY;IACJA,cAAE8G,IAAF,GAAS,KAAK3G,MAAd;IACA,aAAC,KAAK4I,WAAL,CAAiB,KAAK5I,MAAtB,MAAkC,KAAK4I,WAAL,CAAiB,KAAK5I,MAAtB,IAAgC,EAAlE,CAAD,EAAwEtC,IAAxE,CAA6EmC,CAA7E;IACA,iBAAKG,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,iBAAKzC,KAAL,CAAWG,IAAX,CAAgBmC,CAAhB;IACA,iBAAK4I,WAAL,CAAiBO,MAAjB,CAAwBnJ,EAAEiC,GAA1B;IACA,iBAAK4C,MAAL,GAAc,KAAKuE,SAAL,EAAd;IACA,gBAAK,KAAK1L,KAAL,CAAWW,MAAX,KAAsB,KAAKhB,IAAL,CAAUC,KAAV,CAAgBe,MAAvC,IAAkD,KAAKwG,MAA3D,EAAmE;IAC/D,qBAAKiE,QAAL,GAAgB,IAAhB;IACH;IACJ;IA/CL;IAAA;IAAA,mCAgDe;IACP,gBAAMrK,IAAIsI,eAAe,KAAKgC,WAAL,CAAiB,KAAK5I,MAAtB,KAAiC,EAAhD,EAAoD,KAAKsG,GAAzD,EAA8D,KAAKtG,MAAnE,CAAV;IACA,gBAAMiC,IAAI2E,eAAe,KAAKgC,WAAL,CAAiB7I,MAAM,KAAKC,MAAX,CAAjB,KAAwC,EAAvD,EAA2D,KAAKsG,GAAhE,EAAqEvG,MAAM,KAAKC,MAAX,CAArE,CAAV;IACA,mBAAO1B,IAAI2D,IAAI,KAAKqE,GAApB;IACH;IApDL;IAAA;IAAA,oCAqDgB;IACR,gBAAM4C,IAAI7C,YAAY,KAAK9I,KAAL,CAAW,KAAKA,KAAL,CAAWW,MAAX,GAAoB,CAA/B,CAAZ,EAA+C6B,MAAM,KAAKC,MAAX,CAA/C,EAAmE,KAAKsG,GAAxE,CAAV;IACA,gBAAI4C,CAAJ,EAAO;IACH,uBAAOnJ,MAAM,KAAKC,MAAX,CAAP;IACH;IACD,mBAAO,KAAKzC,KAAL,CAAWW,MAAX,KAAsB,KAAKhB,IAAL,CAAUC,KAAV,CAAgBe,MAAtC,GAA+C,CAAC,CAAhD,GAAoD,CAA3D;IACH;IA3DL;IAAA;IAAA,qCA4Dc;IACN,gBAAM2B,IAAI,KAAKtC,KAAL,CAAW,KAAKA,KAAL,CAAWW,MAAX,GAAoB,CAA/B,CAAV;IACA,mBAAOsJ,QAAQ3H,CAAR,EAAWA,EAAE8G,IAAb,EAAmB,KAAKL,GAAxB,CAAP;IACH;IA/DL;IAAA;IAAA;IAiEAuC,gBAAgBM,KAAhB,GAAwB9D,cAAMM,MAA9B;;QCpEayD,aAAb;IAAA;;IACI,6BAAc;IAAA;IAAA,4HACJ,IAAInI,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDC,sBAAhD,CADI,EAC+D,CAD/D;IAEb;;IAHL;IAAA,EAAmCV,eAAnC;IAKAO,cAAc9F,KAAd,GAAsB,aAAtB;IACA8F,cAAcD,KAAd,GAAsB9D,cAAMO,GAA5B;IACAwD,cAAcI,KAAd,GAAsB,SAAtB;IACAJ,cAAcK,OAAd,GAAwB,CAAC,qBAAD,EAAwB,WAAxB,EAAqC,UAArC,CAAxB;IACAL,cAAcM,OAAd,GAAwB,CAAC,IAAzB;IACAN,cAAcO,QAAd,GAAyB,OAAzB;IACAP,cAAc7F,IAAd,GAAqB,2CAArB;IACA6F,cAAcQ,KAAd,GAAsB,CAAC,sBAAD,CAAtB;IACAR,cAAcS,MAAd,GAAuB,4BAAvB;;QCbaC,kBAAb;IAAA;;IACI,kCAAc;IAAA;;IACV,YAAM5M,OAAO,IAAIgE,gBAAJ,CAAe,CAAf,EAAkB,IAAlB,EAAwBmI,YAAMC,IAA9B,EAAoC,CAApC,EAAuC,CAAvC,EAA0CS,iBAA1C,EAAuD,CAAvD,CAAb;IADU,sIAEJ7M,IAFI,EAEE,CAFF;IAGb;;IAJL;IAAA,EAAwC2L,eAAxC;IAMAiB,mBAAmBxG,KAAnB,GAA2B,mBAA3B;IACAwG,mBAAmBX,KAAnB,GAA2B9D,cAAMO,GAAjC;IACAkE,mBAAmBN,KAAnB,GAA2B,SAA3B;IACAM,mBAAmB9G,QAAnB,GAA8B,eAA9B;IACA8G,mBAAmBD,MAAnB,GAA4B,4BAA5B;;QCVaG,gBAAb;IAAA;;IACI,gCAAc;IAAA;;IAAA,uIACJ,IAAI7I,oBAAJ,CAAmB,CAAnB,EAAsB,KAAtB,EAA6BkI,YAAMY,UAAnC,EAA+C,CAA/C,EAAkD,CAAlD,CADI,EACkD,CADlD;;IAEV,cAAK9E,SAAL,GAAiB,IAAjB;IAFU;IAGb;;IAJL;IAAA,EAAsC0D,eAAtC;IAMAmB,iBAAiB1G,KAAjB,GAAyB,iBAAzB;IACA0G,iBAAiBb,KAAjB,GAAyB9D,cAAMO,GAA/B;IACAoE,iBAAiBR,KAAjB,GAAyB,SAAzB;IACAQ,iBAAiBhH,QAAjB,GAA4B,eAA5B;IACAgH,iBAAiBH,MAAjB,GAA0B,oBAA1B;;QCRaK,iBAAb;IACI,+BAAYhN,IAAZ,EAA8C;IAAA,YAA5BoJ,GAA4B,uEAAtB,CAAsB;IAAA,YAAnB6D,UAAmB;IAAA,YAAPC,KAAO;IAAA;;IAC1C,aAAK7M,KAAL,GAAa,EAAb;IACA,aAAKyC,MAAL,GAAc,CAAd;IACA,aAAK0E,MAAL,GAAc,CAAd;IACA,aAAKkE,WAAL,GAAmB,EAAE,GAAG,EAAL,EAAS,GAAG,EAAZ,EAAnB;IACA,aAAK9I,YAAL,GAAoBgI,cAActD,IAAd,CAAmB,IAAnB,CAApB;IACA,aAAK5D,YAAL,GAAoB2H,cAAc/D,IAAd,CAAmB,IAAnB,CAApB;IACA,aAAKmE,QAAL,GAAgB,KAAhB;IACA,aAAKzL,IAAL,GAAYA,IAAZ;IACA,aAAK2K,OAAL,GAAeiB,YAAM5L,KAAKC,KAAX,CAAf;IACAsE,mBAAK,KAAKoG,OAAV;IACA,aAAKvB,GAAL,GAAWA,GAAX;IACA,aAAK+D,IAAL,CAAUD,KAAV;IACA,aAAKD,UAAL,GAAkBA,WAAW9L,GAAX,CAAe;IAAA;IAAA,gBAAE+I,CAAF;;IAAA,mBAASA,CAAT;IAAA,SAAf,CAAlB;IACH;;IAfL;IAAA;IAAA,mCAgBe;IAAA;;IACP;IACA,gBAAI,KAAKuB,QAAT,EAAmB;IACf,uBAAO,EAAP;IACH;IACD,mBAAO,KAAKzL,IAAL,CAAUC,KAAV,CAAgB6K,MAAhB,CAAuB,UAAClJ,CAAD,EAAIE,CAAJ,EAAU;IACpC,oBAAIA,EAAE2H,IAAF,KAAW,MAAK3G,MAApB,EAA4B;IACxB,2BAAOlB,CAAP;IACH;IAHmC;IAAA;IAAA;;IAAA;IAIpC,yCAAyBE,EAAE+C,KAA3B,8HAAkC;IAAA;;IAAA;;IAAA,4BAAtBuI,GAAsB;IAAA,4BAAjBC,GAAiB;;IAC9B,4BAAI,CAACA,IAAI5D,IAAL,IAAc,MAAKwD,UAAL,CAAgBK,OAAhB,CAAwBF,GAAxB,IAA+B,CAAC,CAAlD,EAAsD;IAClDxL,8BAAEpB,IAAF,CAAO,CAACsB,CAAD,EAAIuL,GAAJ,CAAP;IACH;IACJ;IARmC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IASpC,uBAAOzL,CAAP;IACH,aAVM,EAUJ,EAVI,CAAP;IAWH;IAhCL;IAAA;IAAA,6BAiCSe,CAjCT,EAiCY;IACJA,cAAE,CAAF,EAAK8G,IAAL,GAAY9G,EAAE,CAAF,EAAK8G,IAAjB;IACA9G,cAAE,CAAF,EAAK8G,IAAL,GAAY,IAAZ;IACA,iBAAK3G,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,iBAAKzC,KAAL,CAAWG,IAAX,CAAgBmC,CAAhB;IACA,gBAAMqJ,IAAI7C,YAAYxG,EAAE,CAAF,CAAZ,EAAkBA,EAAE,CAAF,EAAK8G,IAAvB,EAA6B,KAAKL,GAAlC,CAAV;IACA,gBAAI4C,CAAJ,EAAO;IACH,qBAAKP,QAAL,GAAgB,IAAhB;IACA,qBAAKjE,MAAL,GAAc7E,EAAE,CAAF,EAAK8G,IAAnB;IACH,aAHD,MAIK,IAAI,KAAKpJ,KAAL,CAAWW,MAAX,KAAuB,KAAKhB,IAAL,CAAUC,KAAV,CAAgBe,MAAhB,GAAyB,CAApD,EAAwD;IACzD,qBAAKyK,QAAL,GAAgB,IAAhB;IACA,qBAAKjE,MAAL,GAAc,CAAC,CAAf;IACH;IACJ;IA/CL;IAAA;IAAA,+BAgDW;IACH,gBAAM9H,OAAO,KAAKW,KAAL,CAAWQ,GAAX,EAAb;IACAnB,iBAAK,CAAL,EAAQ+J,IAAR,GAAe/J,KAAK,CAAL,EAAQ+J,IAAvB;IACA/J,iBAAK,CAAL,EAAQ+J,IAAR,GAAe,IAAf;IACA,iBAAK3G,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,iBAAK2I,QAAL,GAAgB,KAAhB;IACA,iBAAKjE,MAAL,GAAc,CAAd;IACH;IAvDL;IAAA;IAAA,mCAwDe;IACP,kBAAM,IAAI+F,KAAJ,CAAU,yBAAV,CAAN;IACH;IA1DL;IAAA;IAAA,qCA2Dc;IACN,gBAAM5K,IAAI,KAAKtC,KAAL,CAAW,KAAKA,KAAL,CAAWW,MAAX,GAAoB,CAA/B,CAAV;IACA,mBAAOsJ,QAAQ3H,EAAE,CAAF,CAAR,EAAcA,EAAE,CAAF,EAAK8G,IAAnB,EAAyB,KAAKL,GAA9B,CAAP;IACH;IA9DL;IAAA;IAAA,+BA+DuD;IAAA,gBAA9C8D,KAA8C,uEAAtC,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAD,EAAI,KAAKlN,IAAL,CAAUsC,CAAV,GAAc,CAAlB,EAAqB,CAArB,CAAZ,CAAsC;IAAA;IAAA;IAAA;;IAAA;IAC/C,sCAA4B4K,KAA5B,mIAAmC;IAAA;;IAAA;;IAAA,wBAAvBM,EAAuB;IAAA,wBAAnBlL,CAAmB;IAAA,wBAAhBmL,IAAgB;;IAC/B,yBAAK,IAAIpL,IAAImL,EAAb,EAAiBnL,IAAImL,KAAK,CAA1B,EAA6BnL,GAA7B,EAAkC;IAC9B,4BAAMP,IAAI,KAAK6I,OAAL,CAAa1E,GAAb,CAAiB,KAAKjG,IAAL,CAAUE,IAAV,CAAemC,CAAf,EAAkBC,CAAlB,EAAqBsC,GAAtC,CAAV;IACA,4BAAM6F,IAAI,CAACpI,IAAIoL,IAAL,IAAa,CAAb,GAAiB,CAA3B;IACA,4BAAI,CAAC3L,CAAL,EAAQ;IACJ;IACH;IACDA,0BAAE2H,IAAF,GAASgB,CAAT;IACA;IACH;IACJ;IAX8C;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAYlD;IA3EL;IAAA;IAAA;IA6EAuC,kBAAkBf,KAAlB,GAA0B9D,cAAMc,SAAhC;IACA+D,kBAAkBtN,IAAlB,GAAyB,IAAzB;;QCjFagO,aAAb;IAAA;;IACI,6BAAc;IAAA;IAAA,4HACJ,IAAI3J,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD,EAAoDC,sBAApD,CADI,EACmE,CADnE,EACsEsB,sBAAgBV,UADtF;IAEb;;IAHL;IAAA,EAAmCD,iBAAnC;IAKAU,cAActH,KAAd,GAAsB,YAAtB;IACAsH,cAAcpB,KAAd,GAAsB,iBAAtB;IACAoB,cAAcE,OAAd,GAAwB,CAAC,OAAD,CAAxB;IACAF,cAAcpH,MAAd,GAAuB,8BAAvB;IACAoH,cAAclB,OAAd,GAAwB,MAAxB;IACAkB,cAAchB,KAAd,GAAsB,CAAC,8BAAD,CAAtB;IACAgB,cAAcf,MAAd,GAAuB,iDAAvB;;QCXakB,cAAb;IAAA;;IACI,8BAAc;IAAA;IAAA,8HACJ,IAAI9J,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD,EAAoDC,sBAApD,CADI,EACmE,CADnE,EACsEsB,sBAAgBV,UADtF;IAEb;;IAHL;IAAA,EAAoCD,iBAApC;IAKAa,eAAezH,KAAf,GAAuB,gBAAvB;IACAyH,eAAevB,KAAf,GAAuB,iBAAvB;IACAuB,eAAetB,OAAf,GAAyB,YAAzB;IACAsB,eAAe/H,QAAf,GAA0B,eAA1B;IACA+H,eAAelB,MAAf,GAAwB,sEAAxB;;QCTamB,gBAAb;IAAA;;IACI,gCAAc;IAAA;IAAA,kIACJ,IAAI5K,mBAAJ,CAAkB,CAAlB,EAAqB,IAArB,EAA2BiJ,YAAMC,IAAjC,EAAuC,CAAvC,EAA0C,CAA1C,CADI,EAC0C,CAD1C,EAC6C2B,oBAAcd,UAD3D;IAEb;;IAHL;IAAA,EAAsCD,iBAAtC;IAKAc,iBAAiB1H,KAAjB,GAAyB,gBAAzB;IACA0H,iBAAiBxB,KAAjB,GAAyB,iBAAzB;IACAwB,iBAAiBhI,QAAjB,GAA4B,eAA5B;IACAgI,iBAAiBnB,MAAjB,GAA0B,iDAA1B;;QCRaqB,iBAAb;IAAA;;IACI,iCAAc;IAAA;;IACV,YAAMhO,OAAO,IAAIkD,mBAAJ,CAAkB,CAAlB,EAAqB,IAArB,EAA2BiJ,YAAM8B,SAAjC,EAA4C,CAA5C,CAAb;IACA3K,wBAAUtD,IAAV;IAFU,oIAGJA,IAHI,EAGE,CAHF,EAGK+N,oBAAcd,UAHnB,EAG+B,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ,CAH/B;IAIb;;IALL;IAAA,EAAuCD,iBAAvC;IAOAgB,kBAAkB5H,KAAlB,GAA0B,iBAA1B;IACA4H,kBAAkB1B,KAAlB,GAA0B,iBAA1B;IACA0B,kBAAkBlI,QAAlB,GAA6B,eAA7B;IACA;IACAkI,kBAAkBrB,MAAlB,GAA2B,8HAA3B;;QCXauB,kBAAb;IAAA;;IACI,kCAAc;IAAA;IAAA,sIACJ,IAAIlK,gBAAJ,CAAe,CAAf,EAAkB,KAAlB,EAAyBmI,YAAMC,IAA/B,EAAqC,CAArC,EAAwC,CAAxC,EAA2CS,iBAA3C,EAAwD,CAAxD,CADI,EACwD,CADxD,EAC2DsB,iBAAWlB,UADtE,EACkF,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ,CADlF;IAEb;;IAHL;IAAA,EAAwCD,iBAAxC;IAKAkB,mBAAmB9H,KAAnB,GAA2B,kBAA3B;IACA8H,mBAAmB5B,KAAnB,GAA2B,iBAA3B;IACA4B,mBAAmBpI,QAAnB,GAA8B,eAA9B;IACAoI,mBAAmBvB,MAAnB,GAA4B,wDAA5B;;QCRayB,gBAAb;IAAA;;IACI,gCAAc;IAAA;IAAA,kIACJ,IAAInK,oBAAJ,CAAmB,CAAnB,EAAsB,IAAtB,EAA4BkI,YAAMkC,OAAlC,EAA2C,CAA3C,EAA8C,CAA9C,CADI,EAC8C,CAD9C,EACiDC,qBAAeC,WADhE,EAC6E,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ,CAD7E;IAEb;;IAHL;IAAA,EAAsCvB,iBAAtC;IAKAoB,iBAAiBhI,KAAjB,GAAyB,gBAAzB;IACAgI,iBAAiB9B,KAAjB,GAAyB,iBAAzB;IACA8B,iBAAiBtI,QAAjB,GAA4B,eAA5B;IACA;IACAsI,iBAAiBzB,MAAjB,GAA0B,yGAA1B;;QCRa6B,eAAb;IAAA;;IACI,+BAAc;IAAA;;IAAA,qIACJ,IAAIzK,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDC,sBAAhD,CADI,EAC+D,CAD/D;;IAEV,cAAKpE,SAAL,GAAiB,IAAjB;IAFU;IAGb;;IAJL;IAAA;IAAA,mCAKe;IACP,gBAAI,KAAKwD,QAAT,EAAmB;IACf,uBAAO,EAAP;IACH;IACD,gBAAMpL,QAAQ,EAAd;IACA,iBAAK,IAAIgC,IAAI,CAAb,EAAgBA,IAAI,KAAKrC,IAAL,CAAUqC,CAA9B,EAAiCA,GAAjC,EAAsC;IAClC,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKtC,IAAL,CAAUsC,CAA9B,EAAiCA,GAAjC,EAAsC;IAClC,wBAAMK,IAAI,KAAKgI,OAAL,CAAa1E,GAAb,CAAiB,CAAC5D,CAAD,EAAIC,CAAJ,EAAOmM,QAAP,EAAjB,CAAV;IACA,wBAAI,CAAC9L,EAAE8G,IAAP,EAAa;IACTpJ,8BAAMG,IAAN,CAAWmC,CAAX;IACA;IACH;IACJ;IACJ;IACD,mBAAOtC,KAAP;IACH;IApBL;IAAA;IAAA,EAAqCsL,eAArC;IAsBA6C,gBAAgBpI,KAAhB,GAAwB,cAAxB;IACAoI,gBAAgBvC,KAAhB,GAAwB9D,cAAMU,OAA9B;IACA2F,gBAAgBlC,KAAhB,GAAwB,SAAxB;IACAkC,gBAAgBZ,OAAhB,GAA0B,CAAC,eAAD,EAAkB,cAAlB,CAA1B;IACAY,gBAAgBhC,OAAhB,GAA0B,IAA1B;IACAgC,gBAAgBnI,IAAhB,GAAuB,4CAAvB;IACAmI,gBAAgBE,KAAhB,GAAwB,CAAC,qBAAD,EACpB,SADoB,EACT,WADS,EACI,WADJ,EACiB,eADjB,EACkC,gBADlC,EACoD,YADpD,CAAxB;IAEAF,gBAAgB9B,KAAhB,GAAwB,CAAC,qBAAD,CAAxB;IACA8B,gBAAgB7B,MAAhB,GAAyB,oDAAzB;;ICjCO,SAASgC,gBAAT,CAA0BvN,CAA1B,EAA6B2D,CAA7B,EAAgC;IACnC,WAAO6J,WAAWxN,CAAX,EAAc2D,CAAd,MAAqB8J,SAASzN,CAAT,KAAeyN,SAAS9J,CAAT,CAApC,CAAP;IACH;IACD,SAAS6J,UAAT,CAAoBxN,CAApB,EAAuB2D,CAAvB,EAA0B;IACtB,WAAQ3D,EAAEiB,CAAF,KAAQ0C,EAAE1C,CAAV,IAAejB,EAAEkB,CAAF,KAAQyC,EAAEzC,CAAjC;IACH;IACD,SAASuM,QAAT,CAAkBzN,CAAlB,EAAqB;IACjB,WAASA,EAAEiB,CAAF,GAAM,CAAP,IAAa,EAAEjB,EAAEkB,CAAF,GAAM,CAAR,CAArB;IACH;AACD,IAAO,SAASwM,YAAT,CAAsB7O,KAAtB,EAA6B;IAChC,QAAIa,IAAI,CAAR;IACA,QAAMiO,MAAM,CAAC9O,MAAMe,MAAN,GAAe,CAAhB,IAAqB,CAAjC;IAFgC;IAAA;IAAA;;IAAA;IAGhC,6BAAgBf,KAAhB,8HAAuB;IAAA,gBAAZ6B,CAAY;;IACnB,gBAAIhB,IAAIiO,GAAR,EAAa;IACTjN,kBAAE2H,IAAF,GAAS,CAAT;IACH,aAFD,MAGK,IAAI3I,IAAIiO,GAAR,EAAa;IACdjN,kBAAE2H,IAAF,GAAS,CAAT;IACH;IACD3I;IACH;IAX+B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAYnC;AACD,IAAO,SAASkO,aAAT,GAAyB;IAAA;;IAC5B,QAAMzF,IAAI1G,MAAM,KAAKC,MAAX,CAAV;IACA,WAAO,KAAK9C,IAAL,CAAUC,KAAV,CAAgB6K,MAAhB,CAAuB,UAAClJ,CAAD,EAAIE,CAAJ,EAAU;IACpC,YAAKA,CAAD,CAAI2H,IAAJ,KAAa,MAAK3G,MAAtB,EAA8B;IAC1B,mBAAOlB,CAAP;IACH;IACD,YAAMqN,SAAS,MAAKC,UAAL,CAAgB,EAAEhP,MAAM4B,CAAR,EAAhB,EAA6ByH,CAA7B,CAAf;IACA,eAAO3H,EAAEuN,MAAF,CAASF,MAAT,CAAP;IACH,KANM,EAMJ,EANI,CAAP;IAOH;AACD,IAAO,SAASC,UAAT,CAAoBE,MAApB,EAA4B7F,CAA5B,EAAqE;IAAA,QAAtC0F,MAAsC,uEAA7B,EAA6B;IAAA,QAAzBI,KAAyB,uEAAjB,CAAiB;IAAA,QAAdC,OAAc,uEAAJ,EAAI;;IACxE,QAAMxN,IAAIsN,OAAOlP,IAAjB;IACAkP,WAAOG,KAAP,GAAe,EAAf;IACA,QAAI,CAACD,QAAQtO,MAAb,EAAqB;IACjBsO,gBAAQ9O,IAAR,CAAasB,CAAb;IACH;IALuE;IAAA;IAAA;;IAAA;IAMxE,8BAAqBA,EAAE+C,KAAvB,mIAA8B;IAAA;;IAAA;;IAAA,gBAAlBS,CAAkB;IAAA,gBAAf3C,CAAe;;IAC1B,gBAAMA,CAAD,CAAI8G,IAAJ,KAAaF,CAAd,IAAqB+F,QAAQhC,OAAR,CAAgB3K,CAAhB,MAAuB,CAAC,CAAjD,EAAqD;IACjD,oBAAMuH,IAAKvH,CAAD,CAAIkC,KAAJ,CAAUoB,GAAV,CAAcX,CAAd,CAAV;IACA,oBAAI4E,MAAM,CAACA,EAAET,IAAH,IAAY6F,QAAQhC,OAAR,CAAgBpD,CAAhB,IAAqB,CAAC,CAAxC,CAAJ,EAAiD;IAC7C,wBAAMtI,IAAI,EAAE1B,MAAMgK,CAAR,EAAWoF,SAAS3M,CAApB,EAAuB0M,YAAvB,EAA8BD,cAA9B,EAAV;IACAA,2BAAOG,KAAP,CAAa/O,IAAb,CAAkBoB,CAAlB;IACA,yBAAKsN,UAAL,CAAgBtN,CAAhB,EAAmB2H,CAAnB,EAAsB0F,MAAtB,EAA8BI,QAAQ,CAAtC,EAAyCC,QAAQH,MAAR,CAAe,CAACxM,CAAD,CAAf,CAAzC;IACH;IACJ;IACJ;IAfuE;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAgBxE,QAAI,CAACyM,OAAOG,KAAP,CAAavO,MAAd,IAAwBqO,KAA5B,EAAmC;IAC/BJ,eAAOzO,IAAP,CAAY4O,MAAZ;IACH;IACD,WAAOH,MAAP;IACH;AACD,IAAO,SAASO,aAAT,CAAuB5N,CAAvB,EAA0B;IAC7B,WAAOA,EAAET,GAAF,CAAM,KAAKsO,WAAX,CAAP;IACH;AACD,IAAO,SAASA,WAAT,CAAqBC,SAArB,EAAgC;IACnC,QAAMhK,SAAS,EAAf;IACA,QAAIiK,OAAOD,SAAX;IACA,WAAOC,IAAP,EAAa;IACT,YAAIA,KAAKP,MAAT,EAAiB;IACb1J,mBAAO8E,OAAP,CAAe,CAACmF,KAAKzP,IAAN,EAAYyP,KAAKL,OAAjB,CAAf;IACH,SAFD,MAGK;IACD5J,mBAAO8E,OAAP,CAAemF,KAAKzP,IAApB;IACH;IACDyP,eAAOA,KAAKP,MAAZ;IACH;IACD,WAAO1J,MAAP;IACH;AACD,IAAO,SAASkK,WAAT,CAAqBX,MAArB,EAA6B;IAChC,WAAOA,OAAOnE,MAAP,CAAc,UAAClJ,CAAD,EAAIE,CAAJ,EAAU;IAC3B,YAAI6N,OAAO7N,CAAX;IACA,eAAO6N,KAAKP,MAAZ,EAAoB;IAChBxN,cAAEpB,IAAF,CAAOmP,IAAP;IACAA,mBAAOA,KAAKP,MAAZ;IACH;IACD,eAAOxN,CAAP;IACH,KAPM,EAOJ,EAPI,CAAP;IAQH;;QC7EYiO,YAAb;IACI,0BAAY7P,IAAZ,EAAkB;IAAA;;IACd,aAAKK,KAAL,GAAa,EAAb;IACA,aAAKyC,MAAL,GAAc,CAAd;IACA,aAAKiF,KAAL,GAAa,CAAb;IACA,aAAKP,MAAL,GAAc,CAAd;IACA,aAAKxH,IAAL,GAAYA,IAAZ;IACA,aAAK2K,OAAL,GAAeiB,YAAM,KAAK5L,IAAL,CAAUC,KAAhB,CAAf;IACAsE,mBAAK,KAAKoG,OAAV;IAPc;IAAA;IAAA;;IAAA;IAQd,iCAAgB,KAAK3K,IAAL,CAAUC,KAA1B,8HAAiC;IAAA,oBAAtB6B,CAAsB;IAAA;IAAA;IAAA;;IAAA;IAC7B,0CAAsBA,CAAD,CAAI+C,KAAzB,mIAAgC;IAAA;;IAAA;;IAAA,4BAApBS,CAAoB;IAAA,4BAAjB3C,CAAiB;;IAC5B,4BAAIgM,iBAAiBhM,CAAjB,EAAoBb,CAApB,CAAJ,EAA4B;IACxBA,8BAAE+C,KAAF,CAAQiH,MAAR,CAAexG,CAAf;IACA3C,8BAAEkC,KAAF,CAAQiH,MAAR,CAAe,CAACxG,CAAhB;IACH;IACJ;IAN4B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAOhC;IAfa;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAgBjB;;IAjBL;IAAA;IAAA,iCAkBa;IACL,gBAAM3C,IAAI,IAAImB,GAAJ,EAAV;IADK;IAAA;IAAA;;IAAA;IAEL,sCAAgB,KAAK9D,IAAL,CAAUC,KAA1B,mIAAiC;IAAA,wBAAtB6B,CAAsB;IAAA;IAAA;IAAA;;IAAA;IAC7B,8CAAiBA,CAAD,CAAI+C,KAApB,mIAA2B;IAAA,gCAAhBQ,CAAgB;;IACvB,gCAAML,OAAO,CAAClD,EAAE8C,GAAH,EAAQS,EAAE,CAAF,EAAKT,GAAb,CAAb;IACAI,iCAAK8K,IAAL;IACAnN,8BAAE6I,GAAF,CAAMxG,KAAKyJ,QAAL,EAAN,EAAuB,CAAC3M,CAAD,EAAIuD,EAAE,CAAF,CAAJ,CAAvB;IACH;IAL4B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAMhC;IARI;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IASL,mBAAOzF,MAAMmQ,IAAN,CAAWpN,EAAEsH,MAAF,EAAX,CAAP;IACH;IA5BL;IAAA;IAAA;IA8BA4F,aAAa5D,KAAb,GAAqB9D,cAAMY,MAA3B;IACA8G,aAAanQ,IAAb,GAAoB,IAApB;;QC9BasQ,cAAb;IAAA;;IACI,4BAAYhQ,IAAZ,EAAkBiQ,QAAlB,EAA4B;IAAA;;IAAA,mIAClBjQ,IADkB;;IAExB,cAAK4C,YAAL,GAAoBiI,cAAcvD,IAAd,OAApB;IACA,cAAK5D,YAAL,GAAoBuH,cAAc3D,IAAd,OAApB;IACA,cAAKmE,QAAL,GAAgB,KAAhB;IACA,cAAKwE,QAAL,GAAgBA,QAAhB;IACAnB,qBAAa9O,KAAKC,KAAlB;IACA,YAAMiQ,SAAS,CAAClQ,KAAKC,KAAL,CAAWe,MAAX,GAAoB,CAArB,IAA0B,CAAzC;IACA,cAAKgH,KAAL,GAAa,EAAE,GAAGkI,MAAL,EAAa,GAAGA,MAAhB,EAAb;IARwB;IAS3B;;IAVL;IAAA;IAAA,6BAWSvN,CAXT,EAWY;IACJ,gBAAMwN,QAAQxN,EAAE,CAAF,CAAd;IACA,gBAAIyN,UAAOzN,EAAEA,EAAE3B,MAAF,GAAW,CAAb,CAAX;IACAoP,sBAAOxQ,MAAMC,OAAN,CAAcuQ,OAAd,IAAsBA,QAAK,CAAL,CAAtB,GAAgCA,OAAvC;IACA,iBAAK,IAAItP,IAAI,CAAb,EAAgBA,IAAI6B,EAAE3B,MAAtB,EAA8BF,GAA9B,EAAmC;IAC/B,oBAAIlB,MAAMC,OAAN,CAAc8C,EAAE7B,CAAF,CAAd,CAAJ,EAAyB;IACrB,yBAAKkH,KAAL,CAAWrF,EAAE7B,CAAF,EAAK,CAAL,EAAQ2I,IAAnB;IACA9G,sBAAE7B,CAAF,EAAK,CAAL,EAAQ2I,IAAR,GAAe,IAAf;IACH;IACJ;IACD2G,oBAAK3G,IAAL,GAAY0G,MAAM1G,IAAlB;IACA,gBAAI2G,YAASD,KAAb,EAAoB;IAChBA,sBAAM1G,IAAN,GAAa,IAAb;IACH;IACD,iBAAK3G,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,iBAAKzC,KAAL,CAAWG,IAAX,CAAgBmC,CAAhB;IACA,iBAAK6E,MAAL,GAAc,KAAKuE,SAAL,EAAd;IACA,gBAAI,KAAKvE,MAAT,EAAiB;IACb,qBAAKiE,QAAL,GAAgB,IAAhB;IACH;IACJ;IA/BL;IAAA;IAAA,+BAgCW;IACH,gBAAM9I,IAAI,KAAKtC,KAAL,CAAWQ,GAAX,EAAV;IACA,gBAAMsP,QAAQxN,EAAE,CAAF,CAAd;IACA,gBAAIyN,UAAOzN,EAAEA,EAAE3B,MAAF,GAAW,CAAb,CAAX;IACAoP,sBAAOxQ,MAAMC,OAAN,CAAcuQ,OAAd,IAAsBA,QAAK,CAAL,CAAtB,GAAgCA,OAAvC;IACA,gBAAM7G,IAAI1G,MAAMuN,QAAK3G,IAAX,CAAV;IACA,iBAAK,IAAI3I,IAAI6B,EAAE3B,MAAF,GAAW,CAAxB,EAA2BF,IAAI,CAA/B,EAAkCA,GAAlC,EAAuC;IACnC,oBAAMwE,IAAI3C,EAAE7B,CAAF,CAAV;IACA,oBAAIlB,MAAMC,OAAN,CAAcyF,CAAd,CAAJ,EAAsB;IAClB,yBAAK0C,KAAL,CAAWuB,CAAX;IACAjE,sBAAE,CAAF,EAAKmE,IAAL,GAAYF,CAAZ;IACH;IACJ;IACD4G,kBAAM1G,IAAN,GAAa2G,QAAK3G,IAAlB;IACA,gBAAI2G,YAASD,KAAb,EAAoB;IAChBC,wBAAK3G,IAAL,GAAY,IAAZ;IACH;IACD,iBAAKjC,MAAL,GAAc,CAAd;IACA,iBAAKiE,QAAL,GAAgB,KAAhB;IACA,iBAAK3I,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACH;IApDL;IAAA;IAAA,oCAqDgB;IACR,gBAAI,CAAC,KAAKkF,KAAL,CAAW,CAAX,CAAL,EAAoB;IAChB,uBAAO,CAAP;IACH,aAFD,MAGK,IAAI,CAAC,KAAKA,KAAL,CAAW,CAAX,CAAL,EAAoB;IACrB,uBAAO,CAAP;IACH,aAFI,MAGA,IAAI,KAAK3H,KAAL,CAAWW,MAAX,KAAsB,KAAKiP,QAA/B,EAAyC;IAC1C,uBAAO,CAAC,CAAR;IACH,aAFI,MAGA;IACD,uBAAO,CAAP;IACH;IACJ;IAlEL;IAAA;IAAA,mCAmEe;IACP,gBAAI,KAAKxE,QAAT,EAAmB;IACf,uBAAO,EAAP;IACH;IACD,gBAAI/F,SAAS,KAAKsJ,aAAL,EAAb;IACAtJ,qBAAS,KAAK2K,QAAL,CAAc3K,MAAd,CAAT;IACAA,qBAAS,KAAK8J,aAAL,CAAmB9J,MAAnB,CAAT;IACA,gBAAI,CAACA,OAAO1E,MAAZ,EAAoB;IAChB0E,yBAAS,KAAK4K,cAAL,EAAT;IACH;IACD,mBAAO5K,MAAP;IACH;IA9EL;IAAA;IAAA,yCA+EkB9D,CA/ElB,EA+EqB;IACb,mBAAOA,EAAET,GAAF,CAAM,KAAKsO,WAAX,CAAP;IACH;IAjFL;IAAA;IAAA,uCAkFgBC,SAlFhB,EAkF2B;IACnB,gBAAMhK,SAAS,EAAf;IACA,gBAAIiK,OAAOD,SAAX;IACA,mBAAOC,IAAP,EAAa;IACT,oBAAIA,KAAKP,MAAT,EAAiB;IACb1J,2BAAO8E,OAAP,CAAe,CAACmF,KAAKzP,IAAN,EAAYyP,KAAKL,OAAjB,CAAf;IACH,iBAFD,MAGK;IACD5J,2BAAO8E,OAAP,CAAemF,KAAKzP,IAApB;IACH;IACDyP,uBAAOA,KAAKP,MAAZ;IACH;IACD,mBAAO1J,MAAP;IACH;IA/FL;IAAA;IAAA,iCAgGa9D,CAhGb,EAgGgB;IACR,gBAAI,CAACA,EAAEZ,MAAP,EAAe;IACX,uBAAOY,CAAP;IACH;IACDA,cAAEkO,IAAF,CAAO,UAAC1O,CAAD,EAAI2D,CAAJ;IAAA,uBAAUA,EAAEsK,KAAF,GAAUjO,EAAEiO,KAAtB;IAAA,aAAP;IACA,gBAAMnF,IAAItI,EAAE,CAAF,EAAKyN,KAAf;IACA,mBAAOzN,EAAE2O,MAAF,CAAS,UAACzO,CAAD;IAAA,uBAAOA,EAAEuN,KAAF,KAAYnF,CAAnB;IAAA,aAAT,CAAP;IACH;IAvGL;IAAA;IAAA,2CAwGoB;IAAA;;IACZ,gBAAMX,IAAI1G,MAAM,KAAKC,MAAX,CAAV;IACA,mBAAO,KAAK9C,IAAL,CAAUC,KAAV,CAAgB6K,MAAhB,CAAuB,UAAClJ,CAAD,EAAIE,CAAJ,EAAU;IACpC,oBAAKA,CAAD,CAAI2H,IAAJ,KAAa,OAAK3G,MAAtB,EAA8B;IAC1B,2BAAOlB,CAAP;IACH;IACD,oBAAMqN,SAAS,OAAKC,UAAL,CAAgB,EAAEhP,MAAM4B,CAAR,EAAhB,EAA6ByH,CAA7B,CAAf;IACA,uBAAO3H,EAAEuN,MAAF,CAASF,MAAT,CAAP;IACH,aANM,EAMJ,EANI,CAAP;IAOH;IAjHL;IAAA;IAAA,sCAkHeG,MAlHf,EAkHuB7F,CAlHvB,EAkHgE;IAAA,gBAAtC0F,MAAsC,uEAA7B,EAA6B;IAAA,gBAAzBI,KAAyB,uEAAjB,CAAiB;IAAA,gBAAdC,OAAc,uEAAJ,EAAI;;IACxD,gBAAMxN,IAAIsN,OAAOlP,IAAjB;IACAkP,mBAAOG,KAAP,GAAe,EAAf;IAFwD;IAAA;IAAA;;IAAA;IAGxD,qCAAqBzN,EAAE+C,KAAvB,8HAA8B;IAAA;;IAAA;;IAAA,wBAAlBS,CAAkB;IAAA,wBAAf3C,CAAe;;IAC1B,wBAAMA,CAAD,CAAI8G,IAAJ,KAAaF,CAAd,IAAqB+F,QAAQhC,OAAR,CAAgB3K,CAAhB,MAAuB,CAAC,CAAjD,EAAqD;IACjD,4BAAMuH,IAAKvH,CAAD,CAAIkC,KAAJ,CAAUoB,GAAV,CAAcX,CAAd,CAAV;IACA,4BAAI4E,KAAK,CAACA,EAAET,IAAZ,EAAkB;IACd,gCAAM7H,IAAI,EAAE1B,MAAMgK,CAAR,EAAWoF,SAAS3M,CAApB,EAAuB0M,YAAvB,EAA8BD,cAA9B,EAAV;IACAA,mCAAOG,KAAP,CAAa/O,IAAb,CAAkBoB,CAAlB;IACA,iCAAKsN,UAAL,CAAgBtN,CAAhB,EAAmB2H,CAAnB,EAAsB0F,MAAtB,EAA8BI,QAAQ,CAAtC,EAAyCC,QAAQH,MAAR,CAAe,CAACxM,CAAD,CAAf,CAAzC;IACH;IACJ;IACJ;IAZuD;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAaxD,gBAAI,CAACyM,OAAOG,KAAP,CAAavO,MAAd,IAAwBqO,KAA5B,EAAmC;IAC/BJ,uBAAOzO,IAAP,CAAY4O,MAAZ;IACH;IACD,mBAAOH,MAAP;IACH;IAnIL;IAAA;IAAA,qCAoIiBnN,CApIjB,EAoIoB2I,CApIpB,EAoIuBlB,CApIvB,EAoI0B;IAClB,gBAAM7D,SAAS,EAAf;IADkB;IAAA;IAAA;;IAAA;IAElB,sCAAqB5D,EAAE+C,KAAvB,mIAA8B;IAAA;;IAAA;;IAAA,wBAAlBS,CAAkB;IAAA,wBAAf3C,CAAe;;IAC1B,wBAAKA,CAAD,CAAI8G,IAAJ,KAAaF,CAAjB,EAAoB;IAChB,4BAAMW,IAAKvH,CAAD,CAAIkC,KAAJ,CAAUoB,GAAV,CAAcX,CAAd,CAAV;IACA,4BAAI4E,KAAK,CAACA,EAAET,IAAZ,EAAkB;IACd/D,mCAAOlF,IAAP,CAAY,CAACsB,CAAD,EAAI,CAACoI,CAAD,EAAIvH,CAAJ,CAAJ,CAAZ;IACH;IACJ;IACJ;IATiB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAUlB,mBAAO+C,MAAP;IACH;IA/IL;IAAA;IAAA,yCAgJqB;IAAA;;IACb,mBAAO,KAAK1F,IAAL,CAAUC,KAAV,CAAgB6K,MAAhB,CAAuB,UAAClJ,CAAD,EAAIE,CAAJ,EAAU;IACpC,oBAAKA,CAAD,CAAI2H,IAAJ,KAAa,OAAK3G,MAAtB,EAA8B;IAC1B,2BAAOlB,CAAP;IACH;IAHmC;IAAA;IAAA;;IAAA;IAIpC,0CAAqBE,EAAE+C,KAAvB,mIAA8B;IAAA;;IAAA;;IAAA,4BAAlBS,CAAkB;IAAA,4BAAf3C,CAAe;;IAC1B,4BAAI,CAAEA,CAAD,CAAI8G,IAAT,EAAe;IACX7H,8BAAEpB,IAAF,CAAO,CAACsB,CAAD,EAAIa,CAAJ,CAAP;IACH;IACJ;IARmC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IASpC,uBAAOf,CAAP;IACH,aAVM,EAUJ,EAVI,CAAP;IAWH;IA5JL;IAAA;IAAA,EAAoCiO,YAApC;;ICFA,IAAMW,OAAO,CAAb;AACA,QAAaC,UAAb;IAAA;;IACI,0BAAc;IAAA;IAAA,sHACJ,IAAI1M,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0CoE,IAA1C,EAAgDA,IAAhD,EAAsDnE,sBAAtD,CADI,EACqEmE,OAAOA,IAAP,GAAc,CADnF;IAEb;;IAHL;IAAA,EAAgCR,cAAhC;IAKAS,WAAWrK,KAAX,GAAmB,QAAnB;IACAqK,WAAWnE,KAAX,GAAmB,QAAnB;IACAmE,WAAWjE,OAAX,GAAqB,GAArB;IACAiE,WAAWlE,OAAX,GAAqB,CAAC,WAAD,CAArB;IACAkE,WAAWhE,QAAX,GAAsB,aAAtB;IACAgE,WAAWpK,IAAX,GAAkB,yCAAlB;IACAoK,WAAW/D,KAAX,GAAmB,CAAC,oBAAD,CAAnB;IACA;IACA+D,WAAW9D,MAAX,GAAoB,qlBAApB;;ICdA,IAAM6D,SAAO,CAAb;AACA,QAAaE,WAAb;IAAA;;IACI,2BAAc;IAAA;IAAA,wHACJ,IAAI3M,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0CoE,MAA1C,EAAgDA,MAAhD,EAAsDnE,sBAAtD,CADI,EACqEmE,SAAOA,MAAP,GAAc,CADnF;IAEb;;IAHL;IAAA,EAAiCR,cAAjC;IAKAU,YAAYtK,KAAZ,GAAoB,YAApB;IACAsK,YAAYpE,KAAZ,GAAoB,QAApB;IACAoE,YAAY5K,QAAZ,GAAuB,YAAvB;IACA;IACA4K,YAAY/D,MAAZ,GAAqB,kNAArB;;ICVA,IAAM6D,SAAO,CAAb;AACA,QAAaG,WAAb;IAAA;;IACI,2BAAc;IAAA;IAAA,wHACJ,IAAI5M,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0CoE,MAA1C,EAAgDA,MAAhD,EAAsDnE,sBAAtD,CADI,EACqEmE,SAAOA,MAAP,GAAc,CADnF;IAEb;;IAHL;IAAA,EAAiCR,cAAjC;IAKAW,YAAYvK,KAAZ,GAAoB,YAApB;IACAuK,YAAYrE,KAAZ,GAAoB,QAApB;IACAqE,YAAY7K,QAAZ,GAAuB,YAAvB;IACA;IACA6K,YAAYhE,MAAZ,GAAqB,ipCAArB;;ICVA,IAAM6D,SAAO,CAAb;AACA,QAAaI,aAAb;IAAA;;IACI,6BAAc;IAAA;;IACV,YAAM5Q,OAAO,IAAIkD,mBAAJ,CAAkB,CAAlB,EAAqB,IAArB,EAA2BiJ,YAAMkC,OAAjC,EAA0CmC,MAA1C,EAAgDA,MAAhD,CAAb;IACAlN,wBAAUtD,IAAV;;IAFU,iIAGJA,IAHI,EAGEwQ,SAAOA,MAAP,GAAcA,MAAd,GAAqB,CAHvB;;IAIV,cAAKtI,IAAL,GAAY,IAAZ;IAJU;IAKb;;IANL;IAAA,EAAmC8H,cAAnC;IAQAY,cAAcxK,KAAd,GAAsB,YAAtB;IACAwK,cAActE,KAAd,GAAsB,QAAtB;IACAsE,cAAc9K,QAAd,GAAyB,YAAzB;IACA;IACA8K,cAAcjE,MAAd,GAAuB,2lBAAvB;;ICbA,IAAM6D,SAAO,CAAb;AACA,QAAaK,cAAb;IAAA;;IACI,8BAAc;IAAA;;IACV,YAAM7Q,OAAO,IAAIkD,mBAAJ,CAAkB,CAAlB,EAAqB,IAArB,EAA2BiJ,YAAMkC,OAAjC,EAA0CmC,MAA1C,EAAgDA,MAAhD,CAAb;IACAlN,wBAAUtD,IAAV;;IAFU,mIAGJA,IAHI,EAGEwQ,SAAOA,MAAP,GAAc,CAHhB;;IAIV,cAAKtI,IAAL,GAAY,IAAZ;IAJU;IAKb;;IANL;IAAA,EAAoC8H,cAApC;IAQAa,eAAezK,KAAf,GAAuB,gBAAvB;IACAyK,eAAevE,KAAf,GAAuB,QAAvB;IACAuE,eAAe/K,QAAf,GAA0B,YAA1B;IACA;IACA+K,eAAelE,MAAf,GAAwB,srCAAxB;;ICbA,IAAM6D,SAAO,CAAb;AACA,QAAaM,cAAb;IAAA;;IACI,8BAAc;IAAA;;IACV,YAAM9Q,OAAO,IAAIkD,mBAAJ,CAAkB,CAAlB,EAAqB,IAArB,EAA2BiJ,YAAM8B,SAAjC,EAA4CuC,MAA5C,EAAkDA,MAAlD,CAAb;IACAlN,wBAAUtD,IAAV;;IAFU,mIAGJA,IAHI,EAGEwQ,SAAOA,MAAP,GAAcA,MAAd,GAAqB,CAHvB;;IAIV,cAAKtI,IAAL,GAAY,IAAZ;IAJU;IAKb;;IANL;IAAA,EAAoC8H,cAApC;IAQAc,eAAe1K,KAAf,GAAuB,aAAvB;IACA0K,eAAexE,KAAf,GAAuB,QAAvB;IACAwE,eAAehL,QAAf,GAA0B,YAA1B;IACA;IACAgL,eAAenE,MAAf,GAAwB,u8CAAxB;;QCXaoE,oBAAb;IAAA;;IACI,kCAAY/Q,IAAZ,EAAkBiQ,QAAlB,EAA4B;IAAA;;IAAA,+IAClBjQ,IADkB;;IAExB,cAAK4C,YAAL,GAAoBiI,cAAcvD,IAAd,OAApB;IACA,cAAK5D,YAAL,GAAoBuH,cAAc3D,IAAd,OAApB;IACA,cAAK0H,aAAL,GAAqBA,cAAc1H,IAAd,OAArB;IACA,cAAK4H,UAAL,GAAkBA,WAAW5H,IAAX,OAAlB;IACA,cAAKkI,aAAL,GAAqBA,cAAclI,IAAd,OAArB;IACA,cAAKmI,WAAL,GAAmBA,YAAYnI,IAAZ,OAAnB;IACA,cAAKsI,WAAL,GAAmBA,YAAYtI,IAAZ,OAAnB;IACA,cAAKU,KAAL,GAAa,EAAb;IACA,cAAKyD,QAAL,GAAgB,KAAhB;IACA,cAAKwE,QAAL,GAAgBA,QAAhB;IAXwB;IAY3B;;IAbL;IAAA;IAAA,6BAcStN,CAdT,EAcY;IACJ,gBAAMwN,QAAQxN,EAAE,CAAF,CAAd;IACA,gBAAIyN,UAAOzN,EAAEA,EAAE3B,MAAF,GAAW,CAAb,CAAX;IACAoP,sBAAOxQ,MAAMC,OAAN,CAAcuQ,OAAd,IAAsBA,QAAK,CAAL,CAAtB,GAAgCA,OAAvC;IACA,iBAAK,IAAItP,IAAI,CAAb,EAAgBA,IAAI6B,EAAE3B,MAAtB,EAA8BF,GAA9B,EAAmC;IAC/B,oBAAIlB,MAAMC,OAAN,CAAc8C,EAAE7B,CAAF,CAAd,CAAJ,EAAyB;IACrB,yBAAKkH,KAAL,CAAWrF,EAAE7B,CAAF,EAAK,CAAL,EAAQ2I,IAAnB;IACA9G,sBAAE7B,CAAF,EAAK,CAAL,EAAQ2I,IAAR,GAAe,IAAf;IACH;IACJ;IACD2G,oBAAK3G,IAAL,GAAY0G,MAAM1G,IAAlB;IACA,gBAAI2G,YAASD,KAAb,EAAoB;IAChBA,sBAAM1G,IAAN,GAAa,IAAb;IACH;IACD,iBAAK3G,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,iBAAKzC,KAAL,CAAWG,IAAX,CAAgBmC,CAAhB;IACA,iBAAK6E,MAAL,GAAc,KAAKuE,SAAL,EAAd;IACA,gBAAI,KAAKvE,MAAT,EAAiB;IACb,qBAAKiE,QAAL,GAAgB,IAAhB;IACH;IACJ;IAlCL;IAAA;IAAA,mCAmCe;IACP,gBAAI,KAAKA,QAAT,EAAmB;IACf,uBAAO,EAAP;IACH;IACD,gBAAI,KAAK3I,MAAL,KAAgB,CAApB,EAAuB;IACnB,uBAAO,KAAKkO,eAAL,CAAqB,CAArB,CAAP;IACH,aAFD,MAGK;IACD,uBAAO,KAAKA,eAAL,CAAqB,CAArB,EAAwB7B,MAAxB,CAA+B,KAAK8B,YAAL,EAA/B,CAAP;IACH;IACJ;IA7CL;IAAA;IAAA,+BA8CW;IACH,gBAAMtO,IAAI,KAAKtC,KAAL,CAAWQ,GAAX,EAAV;IACA,gBAAMsP,QAAQxN,EAAE,CAAF,CAAd;IACA,gBAAIyN,UAAOzN,EAAEA,EAAE3B,MAAF,GAAW,CAAb,CAAX;IACAoP,sBAAOxQ,MAAMC,OAAN,CAAcuQ,OAAd,IAAsBA,QAAK,CAAL,CAAtB,GAAgCA,OAAvC;IACA,gBAAM7G,IAAI1G,MAAMuN,QAAK3G,IAAX,CAAV;IACA,iBAAK,IAAI3I,IAAI6B,EAAE3B,MAAF,GAAW,CAAxB,EAA2BF,IAAI,CAA/B,EAAkCA,GAAlC,EAAuC;IACnC,oBAAMwE,IAAI3C,EAAE7B,CAAF,CAAV;IACA,oBAAIlB,MAAMC,OAAN,CAAcyF,CAAd,CAAJ,EAAsB;IAClB,yBAAK0C,KAAL,CAAWuB,CAAX;IACAjE,sBAAE,CAAF,EAAKmE,IAAL,GAAYF,CAAZ;IACH;IACJ;IACD4G,kBAAM1G,IAAN,GAAa2G,QAAK3G,IAAlB;IACA,gBAAI2G,YAASD,KAAb,EAAoB;IAChBC,wBAAK3G,IAAL,GAAY,IAAZ;IACH;IACD,iBAAKjC,MAAL,GAAc,CAAd;IACA,iBAAKiE,QAAL,GAAgB,KAAhB;IACA,iBAAK3I,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACH;IAlEL;IAAA;IAAA,mCAmEe;IACP,kBAAM,IAAIyK,KAAJ,CAAU,yBAAV,CAAN;IACH;IArEL;IAAA;IAAA,wCAsEoB2D,KAtEpB,EAsE2B;IACnB,mBAAO,KAAKlR,IAAL,CAAUC,KAAV,CACFsQ,MADE,CACK,UAACzO,CAAD;IAAA,uBAAOA,EAAE2H,IAAF,KAAWyH,KAAlB;IAAA,aADL,EAEFpG,MAFE,CAEK,UAAClJ,CAAD,EAAIE,CAAJ,EAAU;IAAA;IAAA;IAAA;;IAAA;IAClB,yCAAqBA,EAAE+C,KAAvB,8HAA8B;IAAA;;IAAA;;IAAA,4BAAlBS,CAAkB;IAAA,4BAAf3C,CAAe;;IAC1B,4BAAI,CAACA,EAAE8G,IAAP,EAAa;IACT7H,8BAAEpB,IAAF,CAAO,CAACsB,CAAD,EAAIa,CAAJ,CAAP;IACH;IACJ;IALiB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAMlB,uBAAOf,CAAP;IACH,aATM,EASJ,EATI,CAAP;IAUH;IAjFL;IAAA;IAAA,uCAkFmB;IACX,gBAAI8D,SAAS,KAAKsJ,aAAL,EAAb;IACAtJ,qBAAS,KAAKkK,WAAL,CAAiBlK,MAAjB,CAAT;IACAA,qBAAS,KAAK8J,aAAL,CAAmB9J,MAAnB,CAAT;IACA,mBAAOA,MAAP;IACH;IAvFL;IAAA;IAAA,oCAwFgB;IACR,gBAAI,KAAKQ,QAAL,GAAgBlF,MAAhB,KAA2B,CAA/B,EAAkC;IAC9B,uBAAO6B,MAAM,KAAKC,MAAX,CAAP;IACH;IACD,gBAAI,KAAKkF,KAAL,CAAW,CAAX,KAAiB,CAArB,EAAwB;IACpB,uBAAO,CAAP;IACH;IACD,gBAAI,KAAK3H,KAAL,CAAWW,MAAX,KAAsB,KAAKiP,QAA/B,EAAyC;IACrC,uBAAO,CAAC,CAAR;IACH;IACD,mBAAO,CAAP;IACH;IAnGL;IAAA;IAAA,EAA0CJ,YAA1C;IAqGAkB,qBAAqB3K,KAArB,GAA6B,gBAA7B;IACA2K,qBAAqBzE,KAArB,GAA6B,QAA7B;IACAyE,qBAAqB1K,IAArB,GAA4B,8CAA5B;IACA0K,qBAAqBtE,QAArB,GAAgC,QAAhC;IACAsE,qBAAqBvE,OAArB,GAA+B,IAA/B;;QC3Ga2E,gBAAb;IAAA;;IACI,gCAAc;IAAA;;IAAA,uIACJ,IAAIpN,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDC,sBAAhD,CADI,EAC+D,IAAI,CAAJ,GAAQ,CADvE;;IAEV,aAAK,IAAIvL,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;IACzB,kBAAKd,IAAL,CAAUC,KAAV,CAAgBa,CAAhB,EAAmB2I,IAAnB,GAA0B,CAA1B;IACH;IACD,cAAKzJ,IAAL,CAAUC,KAAV,CAAgB,EAAhB,EAAoBwJ,IAApB,GAA2B,CAA3B;IACA,cAAKzJ,IAAL,CAAUC,KAAV,CAAgB,EAAhB,EAAoBwJ,IAApB,GAA2B,CAA3B;IACA,cAAKzJ,IAAL,CAAUC,KAAV,CAAgB,EAAhB,EAAoBwJ,IAApB,GAA2B,CAA3B;IACA,cAAKzB,KAAL,GAAa,EAAE,GAAG,EAAL,EAAS,GAAG,CAAZ,EAAb;IARU;IASb;;IAVL;IAAA,EAAsC+I,oBAAtC;IAYAI,iBAAiB/K,KAAjB,GAAyB,gBAAzB;IACA+K,iBAAiB7E,KAAjB,GAAyB,QAAzB;IACA6E,iBAAiB9K,IAAjB,GAAwB,8CAAxB;IACA8K,iBAAiB1E,QAAjB,GAA4B,QAA5B;IACA0E,iBAAiB3E,OAAjB,GAA2B,IAA3B;IACA2E,iBAAiBzE,KAAjB,GAAyB,CAAC,+BAAD,EAAkC,6BAAlC,CAAzB;IACA;IACAyE,iBAAiBxE,MAAjB,GAA0B,kZAA1B;;QCnBayE,kBAAb;IAAA;;IACI,kCAAc;IAAA;;IAAA,2IACJ,IAAIrN,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDC,sBAAhD,CADI,EAC+D,IAAI,CAAJ,GAAQ,CADvE;;IAEV,aAAK,IAAIvL,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;IACzB,kBAAKd,IAAL,CAAUC,KAAV,CAAgBa,CAAhB,EAAmB2I,IAAnB,GAA0B,CAA1B;IACH;IACD,cAAKzJ,IAAL,CAAUC,KAAV,CAAgB,EAAhB,EAAoBwJ,IAApB,GAA2B,CAA3B;IACA,cAAKzB,KAAL,GAAa,EAAE,GAAG,EAAL,EAAS,GAAG,CAAZ,EAAb;IANU;IAOb;;IARL;IAAA,EAAwC+I,oBAAxC;IAUAK,mBAAmBhL,KAAnB,GAA2B,mBAA3B;IACAgL,mBAAmB9E,KAAnB,GAA2B,QAA3B;IACA8E,mBAAmBtL,QAAnB,GAA8B,kBAA9B;IACA;IACAsL,mBAAmBzE,MAAnB,GAA4B,8HAA5B;;IChBA;AACA,QAAa0E,aAAb;IACI,6BAAuB;IAAA,YAAXhC,KAAW,uEAAH,CAAG;IAAA;;IACnB,aAAKiC,KAAL,GAAa,CAAb;IACA,aAAKjC,KAAL,GAAa,CAAb;IACA,aAAKA,KAAL,GAAaA,KAAb;IACH;;IALL;IAAA;IAAA,+BAMWtP,IANX,EAMiB;IACT,mBAAO,EAAEL,MAAM,KAAKA,IAAL,CAAUK,IAAV,EAAgB,KAAKsP,KAArB,CAAR,EAAqCiC,OAAO,KAAKA,KAAjD,EAAP;IACH;IARL;IAAA;IAAA,6BASSvR,IATT,EASesP,KATf,EASiD;IAAA,gBAA3BkC,kBAA2B,uEAAN,IAAM;;IACzC,iBAAKD,KAAL,GAAa,CAAb;IACA,gBAAME,eAAezR,KAAKmG,QAAL,EAArB;IACA,gBAAIuL,WAAW,CAACC,QAAhB;IACA,gBAAIC,sBAAJ;IAJyC;IAAA;IAAA;;IAAA;IAKzC,qCAA0BH,YAA1B,8HAAwC;IAAA,wBAA7BI,WAA6B;;IACpC7R,yBAAKL,IAAL,CAAUkS,WAAV;IACA,wBAAMV,QAAQ,KAAKW,OAAL,CAAaxC,QAAQ,CAArB,EAAwBtP,IAAxB,EAA8B,CAACwR,kBAA/B,CAAd;IACAxR,yBAAKyD,IAAL;IACA,wBAAI0N,QAAQO,QAAZ,EAAsB;IAClBA,mCAAWP,KAAX;IACAS,wCAAgBC,WAAhB;IACH;IACJ;IAbwC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAczC,mBAAOD,aAAP;IACH;IAxBL;IAAA;IAAA,gCAyBYtC,KAzBZ,EAyBmBtP,IAzBnB,EAyByBwR,kBAzBzB,EAyB6C;IACrC,iBAAKD,KAAL;IACA,gBAAIjC,UAAU,CAAd,EAAiB;IACb,uBAAOtP,KAAK2H,QAAL,EAAP;IACH;IACD,gBAAM8J,eAAezR,KAAKmG,QAAL,EAArB;IACA,gBAAIqL,kBAAJ,EAAwB;IACpB,oBAAIE,WAAW,CAACC,QAAhB;IADoB;IAAA;IAAA;;IAAA;IAEpB,0CAA0BF,YAA1B,mIAAwC;IAAA,4BAA7BI,WAA6B;;IACpC7R,6BAAKL,IAAL,CAAUkS,WAAV;IACAH,mCAAWrH,KAAK0H,GAAL,CAASL,QAAT,EAAmB,KAAKI,OAAL,CAAaxC,QAAQ,CAArB,EAAwBtP,IAAxB,EAA8B,CAACwR,kBAA/B,CAAnB,CAAX;IACAxR,6BAAKyD,IAAL;IACH;IANmB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAOpB,uBAAOiO,QAAP;IACH,aARD,MASK;IACD,oBAAIA,YAAWC,QAAf;IADC;IAAA;IAAA;;IAAA;IAED,0CAA0BF,YAA1B,mIAAwC;IAAA,4BAA7BI,YAA6B;;IACpC7R,6BAAKL,IAAL,CAAUkS,YAAV;IACAH,oCAAWrH,KAAKhB,GAAL,CAASqI,SAAT,EAAmB,KAAKI,OAAL,CAAaxC,QAAQ,CAArB,EAAwBtP,IAAxB,EAA8B,CAACwR,kBAA/B,CAAnB,CAAX;IACAxR,6BAAKyD,IAAL;IACH;IANA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAOD,uBAAOiO,SAAP;IACH;IACJ;IAjDL;IAAA;IAAA;;QCEaM,gBAAb;IAAA;;IACI,gCAAc;IAAA;IAAA,kIACJ,IAAIhO,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,EAA9C,EAAkD,EAAlD,EAAsDC,sBAAtD,CADI,EACqE,CADrE;IAEb;;IAHL;IAAA,EAAsCV,eAAtC;IAKAoG,iBAAiB3L,KAAjB,GAAyB,eAAzB;IACA2L,iBAAiBzF,KAAjB,GAAyB,SAAzB;IACAyF,iBAAiBrF,KAAjB,GAAyB,CAAC,qBAAD,CAAzB;IACAqF,iBAAiB1L,IAAjB,GAAwB,0CAAxB;IACA0L,iBAAiBpF,MAAjB,GAA0B,4CAA1B;IACAoF,iBAAiBjP,MAAjB,GAA0B;IAAA,WAAM,IAAIuO,aAAJ,CAAkB,CAAlB,CAAN;IAAA,CAA1B;;QCXaW,mBAAb;IAAA;;IACI,mCAAc;IAAA;;IACV,YAAMhS,OAAO,IAAIgE,gBAAJ,CAAe,CAAf,EAAkB,KAAlB,EAAyBmI,YAAMC,IAA/B,EAAqC,EAArC,EAAyC,CAAzC,EAA4CS,iBAA5C,EAAyD,CAAzD,CAAb;IADU,wIAEJ7M,IAFI,EAEE,CAFF;IAGb;;IAJL;IAAA,EAAyC2L,eAAzC;IAMAqG,oBAAoB5L,KAApB,GAA4B,qBAA5B;IACA4L,oBAAoB1F,KAApB,GAA4B,SAA5B;IACA0F,oBAAoBtF,KAApB,GAA4B,CAAC,qBAAD,CAA5B;IACAsF,oBAAoBlM,QAApB,GAA+B,kBAA/B;IACAkM,oBAAoBrF,MAApB,GAA6B,4CAA7B;;QCTasF,UAAb;IAAA;;IACI,0BAAc;IAAA;IAAA,sHACJ,IAAIlO,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0C,EAA1C,EAA8C,EAA9C,EAAkDC,sBAAlD,CADI,EACiE,CADjE;IAEb;;IAHL;IAAA,EAAgCV,eAAhC;IAKAsG,WAAW7L,KAAX,GAAmB,QAAnB;IACA6L,WAAW3F,KAAX,GAAmB,SAAnB;IACA2F,WAAW5L,IAAX,GAAkB,sCAAlB;IACA4L,WAAWxF,QAAX,GAAsB,OAAtB;IACAwF,WAAWzF,OAAX,GAAqB,GAArB;IACAyF,WAAWvF,KAAX,GAAmB,CAAC,qBAAD,CAAnB;IACA;IACAuF,WAAWtF,MAAX,GAAoB,qIAApB;IACAsF,WAAWnP,MAAX,GAAoB;IAAA,WAAM,IAAIuO,aAAJ,CAAkB,CAAlB,CAAN;IAAA,CAApB;;QCbaa,WAAb;IAAA;;IACI,2BAAc;IAAA;IAAA,wHACJ,IAAInO,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgDC,sBAAhD,CADI,EAC+D,CAD/D;IAEb;;IAHL;IAAA,EAAiCV,eAAjC;IAKAuG,YAAY9L,KAAZ,GAAoB,YAApB;IACA8L,YAAY5F,KAAZ,GAAoB,SAApB;IACA4F,YAAYpM,QAAZ,GAAuB,YAAvB;IACA;IACAoM,YAAYvF,MAAZ,GAAqB,oHAArB;IACAuF,YAAYpP,MAAZ,GAAqB;IAAA,WAAM,IAAIuO,aAAJ,CAAkB,CAAlB,CAAN;IAAA,CAArB;;QCVac,YAAb;IAAA;;IACI,4BAAc;IAAA;IAAA,0HACJ,IAAIpO,qBAAJ,CAAoB,CAApB,EAAuB,KAAvB,EAA8BoI,YAAMC,IAApC,EAA0C,EAA1C,EAA8C,EAA9C,EAAkDC,sBAAlD,CADI,EACiE,CADjE;IAEb;;IAHL;IAAA,EAAkCV,eAAlC;IAKAwG,aAAa/L,KAAb,GAAqB,cAArB;IACA+L,aAAa7F,KAAb,GAAqB,SAArB;IACA6F,aAAarM,QAAb,GAAwB,YAAxB;IACA;IACAqM,aAAaxF,MAAb,GAAsB,yIAAtB;IACAwF,aAAarP,MAAb,GAAsB;IAAA,WAAM,IAAIuO,aAAJ,CAAkB,CAAlB,CAAN;IAAA,CAAtB;;QCVae,aAAb;IAAA;;IACI,6BAAc;IAAA;IAAA,4HACJ,IAAIlP,mBAAJ,CAAkB,CAAlB,EAAqB,IAArB,EAA2BiJ,YAAMC,IAAjC,EAAuC,EAAvC,CADI,EACwC,CADxC;IAEb;;IAHL;IAAA,EAAmCT,eAAnC;IAKAyG,cAAchM,KAAd,GAAsB,YAAtB;IACAgM,cAAc9F,KAAd,GAAsB,SAAtB;IACA8F,cAActM,QAAd,GAAyB,YAAzB;IACAsM,cAAczF,MAAd,GAAuB,kEAAvB;IACAyF,cAActP,MAAd,GAAuB;IAAA,WAAM,IAAIuO,aAAJ,CAAkB,CAAlB,CAAN;IAAA,CAAvB;;QCRagB,eAAb;IACI,6BAAYrS,IAAZ,EAAgD;IAAA;;IAAA,YAA9BsS,MAA8B,uEAArB,KAAqB;IAAA,YAAdC,IAAc,uEAAP,KAAO;IAAA;;IAC5C,aAAKzP,MAAL,GAAc,CAAd;IACA,aAAKzC,KAAL,GAAa,EAAb;IACA,aAAK2H,KAAL,GAAa,EAAE,GAAG,CAAL,EAAQ,GAAG,CAAX,EAAb;IACA,aAAKR,MAAL,GAAc,CAAd;IACA,aAAK5E,YAAL,GAAoBA,aAAa0E,IAAb,CAAkB,IAAlB,CAApB;IACA,aAAK5D,YAAL,GAAoBA,aAAa4D,IAAb,CAAkB,IAAlB,CAApB;IACA,aAAKmE,QAAL,GAAgB,KAAhB;IACA,aAAK+G,OAAL,GAAe,EAAf;IACA,aAAKD,IAAL,GAAYA,IAAZ;IACA,aAAKvS,IAAL,GAAYA,IAAZ;IACA,aAAK2K,OAAL,GAAeiB,YAAM5L,KAAKC,KAAX,CAAf;IACA,YAAMwS,KAAKrI,KAAKsI,KAAL,CAAW1S,KAAKqC,CAAL,GAAS,CAAT,GAAa,GAAxB,CAAX;IACA,YAAMsQ,KAAKvI,KAAKwI,IAAL,CAAU5S,KAAKqC,CAAL,GAAS,CAAT,GAAa,GAAvB,CAAX;IACA,YAAMwQ,KAAKzI,KAAKsI,KAAL,CAAW1S,KAAKsC,CAAL,GAAS,CAAT,GAAa,GAAxB,CAAX;IACA,YAAMwQ,KAAK1I,KAAKwI,IAAL,CAAU5S,KAAKsC,CAAL,GAAS,CAAT,GAAa,GAAvB,CAAX;IACA,aAAKgQ,MAAL,GAAc,CACV,KAAK3H,OAAL,CAAa1E,GAAb,CAAiBjG,KAAKE,IAAL,CAAUuS,EAAV,EAAcI,EAAd,EAAkBjO,GAAnC,CADU,EAEV,KAAK+F,OAAL,CAAa1E,GAAb,CAAiBjG,KAAKE,IAAL,CAAUuS,EAAV,EAAcK,EAAd,EAAkBlO,GAAnC,CAFU,EAGV,KAAK+F,OAAL,CAAa1E,GAAb,CAAiBjG,KAAKE,IAAL,CAAUyS,EAAV,EAAcG,EAAd,EAAkBlO,GAAnC,CAHU,EAIV,KAAK+F,OAAL,CAAa1E,GAAb,CAAiBjG,KAAKE,IAAL,CAAUyS,EAAV,EAAcE,EAAd,EAAkBjO,GAAnC,CAJU,CAAd;IAMA,aAAKmO,KAAL,GAAanH,YAAM,KAAK5L,IAAL,CAAUC,KAAhB,CAAb;IACAsE,mBAAK,KAAKoG,OAAV;IACA,YAAI2H,MAAJ,EAAY;IACR,iBAAKA,MAAL,CAAYlN,OAAZ,CAAoB,UAACtD,CAAD,EAAO;IACvB,sBAAKpC,IAAL,CAAUoC,CAAV,EAAa,IAAb;IACH,aAFD;IAGH;IACD,aAAKkR,cAAL;IACH;;IA/BL;IAAA;IAAA,mCAgCe;IACP,mBAAO,KAAKC,aAAZ;IACH;IAlCL;IAAA;IAAA,yCAmCqB;IACb,iBAAKA,aAAL,GAAqB,KAAKC,WAAL,CAAiB,KAAKpQ,MAAtB,CAArB;IACA,gBAAI,CAAC,KAAKmQ,aAAL,CAAmBjS,MAAxB,EAAgC;IAC5B,oBAAI,KAAKkS,WAAL,CAAiBrQ,MAAM,KAAKC,MAAX,CAAjB,EAAqC9B,MAAzC,EAAiD;IAC7C,yBAAKtB,IAAL,CAAU,IAAV;IACH,iBAFD,MAGK;IACD,yBAAK+L,QAAL,GAAgB,IAAhB;IACH;IACJ;IACJ;IA7CL;IAAA;IAAA,oCA8CgB0H,EA9ChB,EA8CoB;IACZ,gBAAMvR,IAAI,EAAV;IACA,gBAAK,KAAK5B,IAAL,CAAUC,KAAV,CAAgBe,MAAhB,GAAyB,KAAK+R,KAAL,CAAWK,IAArC,GAA6C,CAAjD,EAAoD;IAChD,uBAAO,KAAKd,MAAL,CAAY/B,MAAZ,CAAmB,UAACzO,CAAD;IAAA,2BAAO,CAACA,EAAE2H,IAAV;IAAA,iBAAnB,CAAP;IACH;IAJW;IAAA;IAAA;;IAAA;IAKZ,qCAAgB,KAAKsJ,KAAL,CAAW9I,MAAX,EAAhB,8HAAqC;IAAA,wBAA1BtH,CAA0B;IAAA;IAAA;IAAA;;IAAA;IACjC,8CAAiBA,CAAD,CAAIkC,KAAJ,CAAUG,IAAV,EAAhB,mIAAkC;IAAA,gCAAvBkF,CAAuB;;IAC9B,gCAAIyF,OAAQhN,CAAD,CAAIkC,KAAJ,CAAUoB,GAAV,CAAciE,CAAd,CAAX;IACA,gCAAImJ,QAAQ,CAAZ;IACA,mCAAO1D,QAAQA,KAAKlG,IAAb,IAAsBkG,KAAKlG,IAAL,KAAc0J,EAA3C,EAAgD;IAC5CE;IACA1D,uCAAOA,KAAK9K,KAAL,CAAWoB,GAAX,CAAeiE,CAAf,CAAP;IACH;IACD,gCAAImJ,SAAS1D,IAAT,IAAkBA,KAAKlG,IAAL,KAAc0J,EAApC,EAAyC;IACrCvR,kCAAEpB,IAAF,CAAOmC,CAAP;IACA;IACH;IACJ;IAZgC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAapC;IAlBW;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAmBZ,mBAAOf,CAAP;IACH;IAlEL;IAAA;IAAA,+BAmEW;IACH,gBAAMe,IAAI,KAAKtC,KAAL,CAAWQ,GAAX,EAAV;IACA,iBAAK4K,QAAL,GAAgB,KAAhB;IACA,iBAAKjE,MAAL,GAAc,CAAd;IACA,gBAAI,CAAC7E,CAAL,EAAQ;IACJ,qBAAKG,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,qBAAK0P,OAAL,CAAa3R,GAAb;IACA,qBAAK2C,IAAL;IACA;IACH;IACD,iBAAKwE,KAAL,CAAWrF,EAAE8G,IAAb;IACA9G,cAAE8G,IAAF,GAAS,IAAT;IACA,iBAAKsJ,KAAL,CAAWvH,GAAX,CAAe7I,EAAEiC,GAAjB,EAAsBjC,CAAtB;IACA,gBAAM/B,IAAI,KAAK4R,OAAL,CAAa3R,GAAb,EAAV;IACA,iBAAKiC,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IAdG;IAAA;IAAA;;IAAA;IAeH,sCAAgBsB,OAAOY,IAAP,CAAYpE,CAAZ,CAAhB,mIAAgC;IAAA,wBAArBqE,CAAqB;;IAC5B,wBAAMiF,IAAK,KAAKS,OAAL,CAAa1E,GAAb,CAAiBhB,CAAjB,CAAX;IACA,yBAAK+C,KAAL,CAAWkC,EAAET,IAAb;IACAS,sBAAET,IAAF,GAAS7I,EAAEqE,CAAF,CAAT;IACA,yBAAK+C,KAAL,CAAWkC,EAAET,IAAb;IACH;IApBE;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAqBH,iBAAKuJ,cAAL;IACH;IAzFL;IAAA;IAAA,6BA0FSrQ,CA1FT,EA0F0B;IAAA,gBAAd2Q,IAAc,uEAAP,KAAO;;IAClB,gBAAI,CAAC3Q,CAAL,EAAQ;IACJ,qBAAK4Q,QAAL,CAAc5Q,CAAd;IACA;IACH;IACDA,cAAE8G,IAAF,GAAS,KAAK3G,MAAd;IACA,iBAAKkF,KAAL,CAAW,KAAKlF,MAAhB,IAA0B,KAAKkF,KAAL,CAAW,KAAKlF,MAAhB,KAA2B,CAArD;IACA,iBAAKkF,KAAL,CAAW,KAAKlF,MAAhB;IACA,iBAAKA,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,iBAAKiQ,KAAL,CAAWjH,MAAX,CAAkBnJ,EAAEiC,GAApB;IACA,gBAAI0O,IAAJ,EAAU;IACN;IACH;IACD,iBAAKjT,KAAL,CAAWG,IAAX,CAAgBmC,CAAhB;IACA,gBAAM6Q,QAAQ,KAAKC,QAAL,CAAc9Q,CAAd,CAAd;IACA,iBAAK6P,OAAL,CAAahS,IAAb,CAAkBgT,KAAlB;IACA,iBAAKR,cAAL;IACA,iBAAKxL,MAAL,GAAc,KAAKuE,SAAL,EAAd;IACH;IA5GL;IAAA;IAAA,mCA6Ge;IACP,mBAAO,CAAC,KAAK/D,KAAL,CAAW,KAAKlF,MAAhB,CAAD,GAA2B,KAAKkF,KAAL,CAAWnF,MAAM,KAAKC,MAAX,CAAX,CAAlC;IACH;IA/GL;IAAA;IAAA,oCAgHgB;IACR,mBAAO,CAAC,KAAK2I,QAAN,GACD,CADC,GAED,KAAKzD,KAAL,CAAW,CAAX,MAAkB,KAAKA,KAAL,CAAW,CAAX,CAAlB,GACI,CAAC,CADL,GAEI,KAAKA,KAAL,CAAW,CAAX,IAAgB,KAAKA,KAAL,CAAW,CAAX,CAAhB,GACI,KAAKuK,IAAL,GAAY,CAAZ,GAAgB,CADpB,GAEI,KAAKA,IAAL,GAAY,CAAZ,GAAgB,CAN9B;IAOH;IAxHL;IAAA;IAAA,iCAyHa5P,CAzHb,EAyHgB;IACR,iBAAKG,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,iBAAKzC,KAAL,CAAWG,IAAX,CAAgBmC,CAAhB;IACA,iBAAK6P,OAAL,CAAahS,IAAb,CAAkB,EAAlB;IACA,iBAAKwS,cAAL;IACA,iBAAKxL,MAAL,GAAc,KAAKuE,SAAL,EAAd;IACH;IA/HL;IAAA;IAAA,iCAgIapJ,CAhIb,EAgIgB;IACR,gBAAM6Q,QAAQ,EAAd;IADQ;IAAA;IAAA;;IAAA;IAER,sCAAgB7Q,EAAEkC,KAAF,CAAQG,IAAR,EAAhB,mIAAgC;IAAA,wBAArBkF,CAAqB;;IAC5B,wBAAIyF,OAAOhN,EAAEkC,KAAF,CAAQoB,GAAR,CAAYiE,CAAZ,CAAX;IACA,wBAAMmJ,QAAQ,EAAd;IACA,2BAAO1D,QAAQA,KAAKlG,IAAb,IAAqBkG,KAAKlG,IAAL,KAAc9G,EAAE8G,IAA5C,EAAkD;IAC9C4J,8BAAM7S,IAAN,CAAWmP,IAAX;IACAA,+BAAOA,KAAK9K,KAAL,CAAWoB,GAAX,CAAeiE,CAAf,CAAP;IACH;IACD,wBAAIyF,QAASA,KAAKlG,IAAL,KAAc9G,EAAE8G,IAA7B,EAAoC;IAAA;IAAA;IAAA;;IAAA;IAChC,kDAAgB4J,KAAhB,mIAAuB;IAAA,oCAAZ/N,CAAY;;IACnBkO,sCAAMlO,EAAEV,GAAR,IAAeU,EAAEmE,IAAjB;IACA,qCAAKzB,KAAL,CAAW1C,EAAEmE,IAAb;IACA,qCAAKzB,KAAL,CAAWrF,EAAE8G,IAAb;IACAnE,kCAAEmE,IAAF,GAAS9G,EAAE8G,IAAX;IACH;IAN+B;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAOnC;IACJ;IAjBO;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAkBR,mBAAO+J,KAAP;IACH;IAnJL;IAAA;IAAA;IAqJAnB,gBAAgBpG,KAAhB,GAAwB9D,cAAMa,OAA9B;;QCvJa0K,WAAb;IAAA;;IACI,2BAAc;IAAA;IAAA,wHACJ,IAAI3P,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD,EAAoDC,sBAApD,CADI,EACmE,IADnE;IAEb;;IAHL;IAAA,EAAiCgG,eAAjC;IAKAqB,YAAYtN,KAAZ,GAAoB,SAApB;IACAsN,YAAYpH,KAAZ,GAAoB,SAApB;IACAoH,YAAYlH,OAAZ,GAAsB,IAAtB;IACAkH,YAAY9F,OAAZ,GAAsB,CAAC,gBAAD,CAAtB;IACA8F,YAAYrN,IAAZ,GAAmB,uCAAnB;IACAqN,YAAYjH,QAAZ,GAAuB,OAAvB;IACA;IACA;IACAiH,YAAY/G,MAAZ,GAAqB,gPAArB;;QCbagH,YAAb;IAAA;;IACI,4BAAc;IAAA;IAAA,0HACJ,IAAI5P,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD,EAAoDC,sBAApD,CADI,EACmE,IADnE;IAEb;;IAHL;IAAA,EAAkCgG,eAAlC;IAKAsB,aAAavN,KAAb,GAAqB,aAArB;IACAuN,aAAarH,KAAb,GAAqB,SAArB;IACAqH,aAAa7N,QAAb,GAAwB,aAAxB;IACA6N,aAAahH,MAAb,GAAsB,8CAAtB;;QCRaiH,WAAb;IAAA;;IACI,2BAAc;IAAA;IAAA,wHACJ,IAAI7P,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD,EAAoDC,sBAApD,CADI;IAEb;;IAHL;IAAA,EAAiCgG,eAAjC;IAKAuB,YAAYxN,KAAZ,GAAoB,SAApB;IACAwN,YAAYtH,KAAZ,GAAoB,SAApB;IACAsH,YAAYpH,OAAZ,GAAsB,IAAtB;IACAoH,YAAYhG,OAAZ,GAAsB,CAAC,gBAAD,EAAmB,iBAAnB,CAAtB;IACAgG,YAAYvN,IAAZ,GAAmB,uCAAnB;IACAuN,YAAYlH,KAAZ,GAAoB,CAAC,qBAAD,CAApB;IACAkH,YAAYnH,QAAZ,GAAuB,SAAvB;IACA;IACAmH,YAAYjH,MAAZ,GAAqB,gQAArB;;QCbakH,YAAb;IAAA;;IACI,4BAAc;IAAA;IAAA,0HACJ,IAAI9P,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD,EAAoDC,sBAApD,CADI;IAEb;;IAHL;IAAA,EAAkCgG,eAAlC;IAKAwB,aAAazN,KAAb,GAAqB,aAArB;IACAyN,aAAavH,KAAb,GAAqB,SAArB;IACAuH,aAAa/N,QAAb,GAAwB,aAAxB;IACA+N,aAAalH,MAAb,GAAsB,4EAAtB;;QCRamH,YAAb;IAAA;;IACI,4BAAc;IAAA;IAAA,0HACJ,IAAI/P,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD,EAAoDC,sBAApD,CADI;IAEb;;IAHL;IAAA,EAAkCgG,eAAlC;IAKAyB,aAAa1N,KAAb,GAAqB,aAArB;IACA0N,aAAaxH,KAAb,GAAqB,SAArB;IACAwH,aAAahO,QAAb,GAAwB,aAAxB;IACA;IACAgO,aAAanH,MAAb,GAAsB,gJAAtB;;QCTaoH,aAAb;IAAA;;IACI,6BAAc;IAAA;IAAA,4HACJ,IAAIhQ,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,EAA9C,EAAkD,EAAlD,EAAsDC,sBAAtD,CADI;IAEb;;IAHL;IAAA,EAAmCgG,eAAnC;IAKA0B,cAAc3N,KAAd,GAAsB,eAAtB;IACA2N,cAAczH,KAAd,GAAsB,SAAtB;IACAyH,cAAcjO,QAAd,GAAyB,aAAzB;IACA;IACAiO,cAAcpH,MAAd,GAAuB,0ZAAvB;;QCRaqH,cAAb;IAAA;;IACI,8BAAc;IAAA;IAAA,8HACJjR,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqB,KAArB,EAA4BiJ,YAAMkC,OAAlC,EAA2C,CAA3C,CAAb,CADI;IAEb;;IAHL;IAAA,EAAoCgE,eAApC;IAKA2B,eAAe5N,KAAf,GAAuB,aAAvB;IACA4N,eAAe1H,KAAf,GAAuB,SAAvB;IACA0H,eAAelO,QAAf,GAA0B,aAA1B;IACA;IACAkO,eAAerH,MAAf,GAAwB,gQAAxB;;QCTasH,eAAb;IAAA;;IACI,+BAAc;IAAA;IAAA,gIACJlR,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqBnC,SAArB,EAAgCoL,YAAMkC,OAAtC,EAA+C,CAA/C,CAAb,CADI;IAEb;;IAHL;IAAA,EAAqCgE,eAArC;IAKA4B,gBAAgB7N,KAAhB,GAAwB,iBAAxB;IACA6N,gBAAgB3H,KAAhB,GAAwB,SAAxB;IACA2H,gBAAgBnO,QAAhB,GAA2B,aAA3B;IACAmO,gBAAgBtH,MAAhB,GAAyB,wDAAzB;;QCRauH,eAAb;IAAA;;IACI,+BAAc;IAAA;IAAA,gIACJnR,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqBnC,SAArB,EAAgCoL,YAAMkC,OAAtC,EAA+C,CAA/C,CAAb,CADI;IAEb;;IAHL;IAAA,EAAqCgE,eAArC;IAKA6B,gBAAgB9N,KAAhB,GAAwB,iBAAxB;IACA8N,gBAAgB5H,KAAhB,GAAwB,SAAxB;IACA4H,gBAAgBpO,QAAhB,GAA2B,aAA3B;IACA;IACAoO,gBAAgBvH,MAAhB,GAAyB,sJAAzB;;QCTawH,gBAAb;IAAA;;IACI,gCAAc;IAAA;IAAA,kIACJpR,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqBnC,SAArB,EAAgCoL,YAAMkC,OAAtC,EAA+C,EAA/C,CAAb,CADI;IAEb;;IAHL;IAAA,EAAsCgE,eAAtC;IAKA8B,iBAAiB/N,KAAjB,GAAyB,mBAAzB;IACA+N,iBAAiB7H,KAAjB,GAAyB,SAAzB;IACA6H,iBAAiBrO,QAAjB,GAA4B,aAA5B;IACA;IACAqO,iBAAiBxH,MAAjB,GAA0B,4aAA1B;;QCVayH,eAAb;IAAA;;IACI,+BAAc;IAAA;IAAA,gIACJ,IAAIrQ,qBAAJ,CAAoB,CAApB,EAAuBhD,SAAvB,EAAkCoL,YAAMC,IAAxC,EAA8C,CAA9C,EAAiD,CAAjD,EAAoDC,sBAApD,CADI,EACmE,KADnE,EAC0E,IAD1E;IAEb;;IAHL;IAAA,EAAqCgG,eAArC;IAKA+B,gBAAgBhO,KAAhB,GAAwB,cAAxB;IACAgO,gBAAgB9H,KAAhB,GAAwB,SAAxB;IACA8H,gBAAgBtO,QAAhB,GAA2B,aAA3B;IACAsO,gBAAgB1H,KAAhB,GAAwB,CAAC,qBAAD,CAAxB;IACA;IACA0H,gBAAgBzH,MAAhB,GAAyB,gQAAzB;;QCTa0H,kBAAb;IAAA;;IACI,kCAAc;IAAA;IAAA,sIACJtR,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqB,KAArB,EAA4BiJ,YAAMkC,OAAlC,EAA2C,CAA3C,CAAb,CADI,EACyD,KADzD,EACgE,IADhE;IAEb;;IAHL;IAAA,EAAwCgE,eAAxC;IAKAgC,mBAAmBjO,KAAnB,GAA2B,kBAA3B;IACAiO,mBAAmB/H,KAAnB,GAA2B,SAA3B;IACA+H,mBAAmBvO,QAAnB,GAA8B,aAA9B;IACAuO,mBAAmB3H,KAAnB,GAA2B,CAAC,qBAAD,CAA3B;IACA;IACA2H,mBAAmB1H,MAAnB,GAA4B,4PAA5B;;QCRa2H,WAAb;IACI,yBAAYtU,IAAZ,EAAuC;AAAA,IAAA;;IACnC,aAAKK,KAAL,GAAa,EAAb;IACA,aAAKyC,MAAL,GAAc,CAAd;IACA,aAAK0E,MAAL,GAAc,CAAd;IACA,aAAKkE,WAAL,GAAmB,EAAE,GAAG,EAAL,EAAS,GAAG,EAAZ,EAAnB;IACA,aAAK9I,YAAL,GAAoBA,aAAa0E,IAAb,CAAkB,IAAlB,CAApB;IACA,aAAK5D,YAAL,GAAoBA,aAAa4D,IAAb,CAAkB,IAAlB,CAApB;IACA,aAAK9D,IAAL,GAAYA,KAAK8D,IAAL,CAAU,IAAV,CAAZ;IACA,aAAKmE,QAAL,GAAgB,KAAhB;IACA,aAAKzL,IAAL,GAAYA,IAAZ;IACA,aAAK2K,OAAL,GAAeiB,YAAM5L,KAAKC,KAAX,CAAf;IACA,aAAKsL,WAAL,GAAmBK,YAAM5L,KAAKC,KAAX,CAAnB;IACAsE,mBAAK,KAAKoG,OAAV;IACA,aAAK4J,QAAL,CAAc,KAAKvU,IAAL,CAAUE,IAAV,CAAe,CAAf,EAAkB,CAAlB,CAAd,EAAoC,KAAKF,IAAL,CAAUE,IAAV,CAAe,CAAf,EAAkB,KAAKF,IAAL,CAAUsC,CAAV,GAAc,CAAhC,CAApC,EAAwE,CAAxE,EAA2E,OAA3E;IACA,aAAKiS,QAAL,CAAc,KAAKvU,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUqC,CAAV,GAAc,CAA7B,EAAgC,CAAhC,CAAd,EAAkD,KAAKrC,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUqC,CAAV,GAAc,CAA7B,EAAgC,KAAKrC,IAAL,CAAUsC,CAAV,GAAc,CAA9C,CAAlD,EAAoG,CAApG,EAAuG,KAAvG;IACA,aAAKiS,QAAL,CAAc,KAAKvU,IAAL,CAAUE,IAAV,CAAe,CAAf,EAAkB,CAAlB,CAAd,EAAoC,KAAKF,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUqC,CAAV,GAAc,CAA7B,EAAgC,CAAhC,CAApC,EAAwE,CAAxE,EAA2E,OAA3E;IACA,aAAKkS,QAAL,CAAc,KAAKvU,IAAL,CAAUE,IAAV,CAAe,CAAf,EAAkB,KAAKF,IAAL,CAAUsC,CAAV,GAAc,CAAhC,CAAd,EAAkD,KAAKtC,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUqC,CAAV,GAAc,CAA7B,EAAgC,KAAKrC,IAAL,CAAUsC,CAAV,GAAc,CAA9C,CAAlD,EAAoG,CAApG,EAAuG,KAAvG;IACH;;IAlBL;IAAA;IAAA,mCAmBe;IACP;IACA,gBAAI,KAAKmJ,QAAT,EAAmB;IACf,uBAAO,EAAP;IACH;IACD,mBAAOI,cAAQ,KAAKN,WAAb,CAAP;IACH;IAzBL;IAAA;IAAA,gCA0BY;IACJ,mBAAO,CACH,CAAC,KAAKvL,IAAL,CAAUE,IAAV,CAAe,CAAC,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,KAAKF,IAAL,CAAUE,IAAV,CAAe,CAAC,CAAhB,EAAmB,KAAKF,IAAL,CAAUsC,CAAV,GAAc,CAAjC,CAAxB,EAA6D,CAA7D,CADG,EAEH,CAAC,KAAKtC,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUqC,CAAzB,EAA4B,CAA5B,CAAD,EAAiC,KAAKrC,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUqC,CAAzB,EAA4B,KAAKrC,IAAL,CAAUsC,CAAV,GAAc,CAA1C,CAAjC,EAA+E,CAA/E,CAFG,EAGH,CAAC,KAAKtC,IAAL,CAAUE,IAAV,CAAe,CAAf,EAAkB,CAAC,CAAnB,CAAD,EAAwB,KAAKF,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUqC,CAAV,GAAc,CAA7B,EAAgC,CAAC,CAAjC,CAAxB,EAA6D,CAA7D,CAHG,EAIH,CAAC,KAAKrC,IAAL,CAAUE,IAAV,CAAe,CAAf,EAAkB,KAAKF,IAAL,CAAUsC,CAA5B,CAAD,EAAiC,KAAKtC,IAAL,CAAUE,IAAV,CAAe,KAAKF,IAAL,CAAUqC,CAAV,GAAc,CAA7B,EAAgC,KAAKrC,IAAL,CAAUsC,CAA1C,CAAjC,EAA+E,CAA/E,CAJG,CAAP;IAMH;IAjCL;IAAA;IAAA,6BAkCSK,CAlCT,EAkCY;IACJA,cAAE8G,IAAF,GAAS,KAAK3G,MAAd;IACA,iBAAK4I,WAAL,CAAiB,KAAK5I,MAAtB,EAA8BtC,IAA9B,CAAmCmC,CAAnC;IACA,iBAAKG,MAAL,GAAcD,MAAM,KAAKC,MAAX,CAAd;IACA,iBAAKzC,KAAL,CAAWG,IAAX,CAAgBmC,CAAhB;IACA,iBAAK4I,WAAL,CAAiBO,MAAjB,CAAwBnJ,EAAEiC,GAA1B;IACA,iBAAK4C,MAAL,GAAc,KAAKuE,SAAL,EAAd;IACA,gBAAK,KAAK1L,KAAL,CAAWW,MAAX,KAAsB,KAAKhB,IAAL,CAAUC,KAAV,CAAgBe,MAAvC,IAAkD,KAAKwG,MAA3D,EAAmE;IAC/D,qBAAKiE,QAAL,GAAgB,IAAhB;IACH;IACJ;IA5CL;IAAA;IAAA,mCA6Ce;IACP,kBAAM,IAAI8B,KAAJ,CAAU,yBAAV,CAAN;IACH;IA/CL;IAAA;IAAA,kCAgDc;IACN,gBAAMrN,OAAO,KAAKG,KAAL,CAAW,KAAKA,KAAL,CAAWW,MAAX,GAAoB,CAA/B,CAAb;IACA,gBAAM2B,IAAI,IAAImB,GAAJ,CAAQ,CAAC,CAAC5D,KAAK0E,GAAN,EAAW,IAAX,CAAD,CAAR,CAAV;IACA,gBAAMxD,IAAI,CAAC,EAAElB,UAAF,EAAQsU,UAAU,IAAlB,EAAD,CAAV;IACA,gBAAMhL,IAAItJ,KAAKuJ,IAAf;IACA,gBAAI3I,IAAI,CAAR;IACA,gBAAI2T,cAAJ;IACA,gBAAIC,YAAJ;IACA,mBAAO5T,IAAIM,EAAEJ,MAAb,EAAqB;IACjB,oBAAMc,IAAIV,EAAEN,CAAF,EAAKZ,IAAf;IACA,oBAAI4B,YAAU0H,CAAV,CAAJ,EAAoB;IAChBiL,4BAAQA,SAASrT,EAAEN,CAAF,CAAjB;IACA;IACA;IACA;IACH,iBALD,MAMK,IAAIgB,UAAQ0H,CAAR,CAAJ,EAAkB;IACnBkL,0BAAMA,OAAOtT,EAAEN,CAAF,CAAb;IACA;IACA;IACA;IACH;IACD,oBAAI2T,SAASC,GAAb,EAAkB;IACd,wBAAMhP,SAAS,EAAf;IACA,wBAAIiP,OAAOF,KAAX;IACA,2BAAOE,IAAP,EAAa;IACTjP,+BAAOlF,IAAP,CAAYmU,KAAKzU,IAAjB;IACAyU,+BAAOA,KAAKH,QAAZ;IACH;IACDG,2BAAOD,GAAP;IACA,wBAAME,OAAO,EAAb;IACA,2BAAOD,IAAP,EAAa;IACTC,6BAAKpK,OAAL,CAAamK,KAAKzU,IAAlB;IACAyU,+BAAOA,KAAKH,QAAZ;IACH;IACDI,yBAAKxJ,KAAL;IACA,2BAAO1F,OAAOyJ,MAAP,CAAcyF,IAAd,CAAP;IACH;IA7BgB;IAAA;IAAA;;IAAA;IA8BjB,yCAAoB9S,EAAE+C,KAAtB,8HAA6B;IAAA;;IAAA;;IAAA,4BAAfS,CAAe;;IACzB,4BAAIA,EAAEmE,IAAF,KAAWD,CAAf,EAAkB;IACd,gCAAI,CAAC7G,EAAEkS,GAAF,CAAMvP,EAAEV,GAAR,CAAL,EAAmB;IACfxD,kCAAEZ,IAAF,CAAO,EAAEN,MAAMoF,CAAR,EAAWkP,UAAUpT,EAAEN,CAAF,CAArB,EAAP;IACA6B,kCAAE6I,GAAF,CAAMlG,EAAEV,GAAR,EAAa,IAAb;IACH;IACJ;IACJ;IArCgB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAsCjB9D;IACH;IACJ;IAhGL;IAAA;IAAA,oCAiGgB;IACR,gBAAI,CAAC,KAAKT,KAAL,CAAWW,MAAhB,EAAwB;IACpB,uBAAO,CAAP;IACH;IACD,gBAAMoP,UAAO,KAAK/P,KAAL,CAAW,KAAKA,KAAL,CAAWW,MAAX,GAAoB,CAA/B,CAAb;IACA,gBAAMgL,IAAI,KAAK8I,KAAL,CAAW1E,OAAX,CAAV;IACA,gBAAIpE,CAAJ,EAAO;IACH,uBAAOoE,QAAK3G,IAAZ;IACH;IACD,gBAAI,KAAKpJ,KAAL,CAAWW,MAAX,KAAsB,KAAKhB,IAAL,CAAUC,KAAV,CAAgBe,MAA1C,EAAkD;IAC9C,uBAAO,CAAC,CAAR;IACH;IACD,mBAAO,CAAP;IACH;IA9GL;IAAA;IAAA,iCA+Ga+I,QA/Gb,EA+GuBD,EA/GvB,EA+G2BoH,KA/G3B,EA+GkCtM,GA/GlC,EA+GuC;IAAA;;IAC/BmQ,yBAAOC,IAAP,CAAYjL,QAAZ,EAAsBD,EAAtB,EAA0B1E,OAA1B,CAAkC,UAACtD,CAAD,EAAO;IACrC,sBAAK6I,OAAL,CAAa1E,GAAb,CAAiBnE,EAAE2M,QAAF,EAAjB,OAAkC7J,GAAlC,GAAwCsM,KAAxC,IAAmD,IAAnD;IACH,aAFD;IAGH;IAnHL;IAAA;IAAA,8BAoHUhR,IApHV,EAoHgB;IACR,gBAAMyC,IAAI,IAAImB,GAAJ,CAAQ,CAAC,CAAC5D,KAAK0E,GAAN,EAAW,IAAX,CAAD,CAAR,CAAV;IACA,gBAAMxD,IAAI,CAAClB,IAAD,CAAV;IACA,gBAAMsJ,IAAItJ,KAAKuJ,IAAf;IACA,gBAAI3I,IAAI,CAAR;IACA,gBAAI2T,QAAQ,KAAZ;IACA,gBAAIC,MAAM,KAAV;IACA,mBAAO5T,IAAIM,EAAEJ,MAAb,EAAqB;IACjB,oBAAMc,IAAIV,EAAEN,CAAF,CAAV;IACA,oBAAIgB,YAAU0H,CAAV,CAAJ,EAAoB;IAChBiL,4BAAQ,IAAR;IACA;IACA;IACA;IACH,iBALD,MAMK,IAAI3S,UAAQ0H,CAAR,CAAJ,EAAkB;IACnBkL,0BAAM,IAAN;IACA;IACA;IACA;IACH;IACD,oBAAID,SAASC,GAAb,EAAkB;IACd,2BAAO,IAAP;IACH;IAhBgB;IAAA;IAAA;;IAAA;IAiBjB,0CAAoB5S,EAAE+C,KAAtB,mIAA6B;IAAA;;IAAA;;IAAA,4BAAfS,CAAe;;IACzB,4BAAIA,EAAEmE,IAAF,KAAWD,CAAf,EAAkB;IACd,gCAAI,CAAC7G,EAAEkS,GAAF,CAAMvP,EAAEV,GAAR,CAAL,EAAmB;IACfxD,kCAAEZ,IAAF,CAAO8E,CAAP;IACA3C,kCAAE6I,GAAF,CAAMlG,EAAEV,GAAR,EAAa,IAAb;IACH;IACJ;IACJ;IAxBgB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAyBjB9D;IACH;IACD,mBAAO,KAAP;IACH;IAvJL;IAAA;IAAA;IAyJAwT,YAAYrI,KAAZ,GAAoB9D,cAAMO,GAA1B;;QC3JauM,OAAb;IAAA;;IACI,uBAAc;IAAA;IAAA,gHACJlS,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqBnC,SAArB,EAAgCoL,YAAMkC,OAAtC,EAA+C,EAA/C,CAAb,CADI;IAEb;;IAHL;IAAA,EAA6BiG,WAA7B;IAKAW,QAAQ7O,KAAR,GAAgB,KAAhB;IACA6O,QAAQ3I,KAAR,GAAgB,KAAhB;IACA2I,QAAQzI,OAAR,GAAkB,IAAlB;IACAyI,QAAQxI,QAAR,GAAmB,SAAnB;IACAwI,QAAQrH,OAAR,GAAkB,CAAC,WAAD,EAAc,WAAd,CAAlB;IACAqH,QAAQ1I,OAAR,GAAkB,CAAC,aAAD,CAAlB;IACA0I,QAAQ5O,IAAR,GAAe,gDAAf;IACA4O,QAAQvI,KAAR,GAAgB,CAAC,eAAD,CAAhB;IACA;IACAuI,QAAQtI,MAAR,GAAiB,0HAAjB;;QCdauI,QAAb;IAAA;;IACI,wBAAc;IAAA;IAAA,kHACJnS,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqBnC,SAArB,EAAgCoL,YAAMkC,OAAtC,EAA+C,CAA/C,CAAb,CADI;IAEb;;IAHL;IAAA,EAA8BiG,WAA9B;IAKAY,SAAS9O,KAAT,GAAiB,SAAjB;IACA8O,SAAS5I,KAAT,GAAiB,KAAjB;IACA4I,SAASpP,QAAT,GAAoB,SAApB;IACAoP,SAASvI,MAAT,GAAkB,4CAAlB;;QCRawI,QAAb;IAAA;;IACI,wBAAc;IAAA;IAAA,kHACJpS,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqBnC,SAArB,EAAgCoL,YAAMkC,OAAtC,EAA+C,CAA/C,CAAb,CADI;IAEb;;IAHL;IAAA,EAA8BiG,WAA9B;IAKAa,SAAS/O,KAAT,GAAiB,SAAjB;IACA+O,SAAS7I,KAAT,GAAiB,KAAjB;IACA6I,SAASrP,QAAT,GAAoB,SAApB;IACAqP,SAASxI,MAAT,GAAkB,4EAAlB;;QCRayI,QAAb;IAAA;;IACI,wBAAc;IAAA;IAAA,kHACJrS,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqBnC,SAArB,EAAgCoL,YAAMkC,OAAtC,EAA+C,CAA/C,CAAb,CADI;IAEb;;IAHL;IAAA,EAA8BiG,WAA9B;IAKAc,SAAShP,KAAT,GAAiB,SAAjB;IACAgP,SAAS9I,KAAT,GAAiB,KAAjB;IACA8I,SAAStP,QAAT,GAAoB,SAApB;IACA;IACAsP,SAASzI,MAAT,GAAkB,gHAAlB;;QCTa0I,SAAb;IAAA;;IACI,yBAAc;IAAA;IAAA,oHACJtS,aAAa,IAAIG,mBAAJ,CAAkB,CAAlB,EAAqBnC,SAArB,EAAgCoL,YAAMkC,OAAtC,EAA+C,EAA/C,CAAb,CADI;IAEb;;IAHL;IAAA,EAA+BiG,WAA/B;IAKAe,UAAUjP,KAAV,GAAkB,WAAlB;IACAiP,UAAU/I,KAAV,GAAkB,KAAlB;IACA+I,UAAUvP,QAAV,GAAqB,SAArB;IACA;IACAuP,UAAU1I,MAAV,GAAmB,8dAAnB;;IC8BA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IClDA;AACA,QAAa2I,eAAb;IACI,+BAAuB;IAAA,YAAXjG,KAAW,uEAAH,CAAG;IAAA;;IACnB,aAAKiC,KAAL,GAAa,CAAb;IACA,aAAKiE,GAAL,GAAW,CAAX;IACA,aAAKlG,KAAL,GAAa,CAAb;IACA,aAAKA,KAAL,GAAaA,KAAb;IACH;;IANL;IAAA;IAAA,+BAOWtP,IAPX,EAOiB;IACT,mBAAO,EAAEL,MAAM,KAAKA,IAAL,CAAUK,IAAV,EAAgB,KAAKsP,KAArB,CAAR,EAAqCiC,OAAO,KAAKA,KAAjD,EAAwDiE,KAAK,KAAKA,GAAlE,EAAP;IACH;IATL;IAAA;IAAA,6BAUSxV,IAVT,EAUesP,KAVf,EAUiD;IAAA,gBAA3BkC,kBAA2B,uEAAN,IAAM;;IACzC,iBAAKD,KAAL,GAAa,CAAb;IACA,gBAAME,eAAezR,KAAKmG,QAAL,EAArB;IACA,gBAAIuL,WAAW,CAACC,QAAhB;IACA,gBAAIC,sBAAJ;IAJyC;IAAA;IAAA;;IAAA;IAKzC,qCAA0BH,YAA1B,8HAAwC;IAAA,wBAA7BI,WAA6B;;IACpC7R,yBAAKL,IAAL,CAAUkS,WAAV;IACA,wBAAMV,QAAQ,KAAKW,OAAL,CAAaxC,QAAQ,CAArB,EAAwBtP,IAAxB,EAA8B,CAAC2R,QAA/B,EAAyCA,QAAzC,EAAmD,CAACH,kBAApD,CAAd;IACAxR,yBAAKyD,IAAL;IACA,wBAAI0N,QAAQO,QAAZ,EAAsB;IAClBA,mCAAWP,KAAX;IACAS,wCAAgBC,WAAhB;IACH;IACJ;IAbwC;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAczC,mBAAOD,aAAP;IACH;IAzBL;IAAA;IAAA,gCA0BYtC,KA1BZ,EA0BmBtP,IA1BnB,EA0ByByV,UA1BzB,EA0BqCC,SA1BrC,EA0BgDlE,kBA1BhD,EA0BoE;IAC5D,iBAAKD,KAAL;IACA,gBAAIjC,UAAU,CAAd,EAAiB;IACb,uBAAOtP,KAAK2H,QAAL,EAAP;IACH;IACD,gBAAM8J,eAAezR,KAAKmG,QAAL,EAArB;IACA,gBAAIwP,QAAQF,UAAZ;IACA,gBAAIG,OAAOF,SAAX;IACA,gBAAIlE,kBAAJ,EAAwB;IACpB,oBAAIE,WAAW,CAACC,QAAhB;IADoB;IAAA;IAAA;;IAAA;IAEpB,0CAA0BF,YAA1B,mIAAwC;IAAA,4BAA7BI,WAA6B;;IACpC7R,6BAAKL,IAAL,CAAUkS,WAAV;IACAH,mCAAWrH,KAAK0H,GAAL,CAASL,QAAT,EAAmB,KAAKI,OAAL,CAAaxC,QAAQ,CAArB,EAAwBtP,IAAxB,EAA8B2V,KAA9B,EAAqCC,IAArC,EAA2C,CAACpE,kBAA5C,CAAnB,CAAX;IACAxR,6BAAKyD,IAAL;IACAkS,gCAAQtL,KAAK0H,GAAL,CAAS4D,KAAT,EAAgBjE,QAAhB,CAAR;IACA,4BAAIkE,QAAQD,KAAZ,EAAmB;IACf,iCAAKH,GAAL;IACA,mCAAO9D,QAAP;IACH;IACJ;IAXmB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAYpB,uBAAOA,QAAP;IACH,aAbD,MAcK;IACD,oBAAIA,YAAWC,QAAf;IADC;IAAA;IAAA;;IAAA;IAED,0CAA0BF,YAA1B,mIAAwC;IAAA,4BAA7BI,YAA6B;;IACpC7R,6BAAKL,IAAL,CAAUkS,YAAV;IACAH,oCAAWrH,KAAKhB,GAAL,CAASqI,SAAT,EAAmB,KAAKI,OAAL,CAAaxC,QAAQ,CAArB,EAAwBtP,IAAxB,EAA8B2V,KAA9B,EAAqCC,IAArC,EAA2C,CAACpE,kBAA5C,CAAnB,CAAX;IACAxR,6BAAKyD,IAAL;IACAmS,+BAAOvL,KAAKhB,GAAL,CAASuM,IAAT,EAAelE,SAAf,CAAP;IACA,4BAAIkE,QAAQD,KAAZ,EAAmB;IACf,iCAAKH,GAAL;IACA,mCAAO9D,SAAP;IACH;IACJ;IAXA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAYD,uBAAOA,SAAP;IACH;IACJ;IA9DL;IAAA;IAAA;;QCDamE,YAAb;IAAA;IAAA;IAAA;;IAAA;IAAA;IAAA,+BACW7V,IADX,EACiB;IACT,gBAAMmG,WAAWnG,KAAKmG,QAAL,EAAjB;IACA,mBAAO,EAAExG,MAAMwG,SAASkE,KAAKsI,KAAL,CAAWtI,KAAKyL,MAAL,KAAgB3P,SAASlF,MAApC,CAAT,CAAR,EAAP;IACH;IAJL;IAAA;IAAA;;ICAA;AACA,QACa8U,OAAb;IACI,qBAAY/V,IAAZ,EAAkBgW,UAAlB,EAA8B9U,MAA9B,EAAsC;IAAA;;IAClC,aAAKoO,KAAL,GAAatP,KAAKM,KAAL,CAAWW,MAAxB;IACA,aAAKC,MAAL,GAAcA,MAAd;IACA,aAAK8U,UAAL,GAAkBA,UAAlB;IACA,aAAKC,QAAL,GAAgB,EAAhB;IACA,aAAKC,IAAL,GAAY,CAAZ;IACA,aAAKC,MAAL,GAAc,CAAd;IACA,aAAKC,UAAL,GAAkBpW,KAAKmG,QAAL,EAAlB;IACA,aAAKkQ,YAAL,GAAoBvT,MAAM9C,KAAK+C,MAAX,CAApB;IACH;;IAVL;IAAA;IAAA,iCAWa/C,IAXb,EAWmBsW,KAXnB,EAW0B;IAClB,gBAAM1G,OAAO,IAAImG,OAAJ,CAAY/V,IAAZ,EAAkB,IAAlB,EAAwB,KAAKoW,UAAL,CAAgBE,KAAhB,CAAxB,CAAb;IACA,iBAAKF,UAAL,CAAgBG,MAAhB,CAAuBD,KAAvB,EAA8B,CAA9B;IACA,iBAAKL,QAAL,CAAcxV,IAAd,CAAmBmP,IAAnB;IACA,mBAAOA,IAAP;IACH;IAhBL;IAAA;IAAA,sCAiBkB;IACV,gBAAI4G,WAAW,IAAf;IACA,gBAAIC,YAAYC,OAAOC,iBAAvB;IAFU;IAAA;IAAA;;IAAA;IAGV,qCAAoB,KAAKV,QAAzB,8HAAmC;IAAA,wBAAxBW,KAAwB;;IAC/B,wBAAMC,WAAWD,MAAMV,IAAN,GAAaU,MAAMT,MAAnB,GAA4B9L,KAAKyM,IAAL,CAAUzM,KAAK0M,GAAL,CAAS,KAAKZ,MAAd,IAAwB,CAAxB,GAA4BS,MAAMT,MAA5C,CAA7C;IACA,wBAAIU,WAAWJ,SAAf,EAA0B;IACtBD,mCAAWI,KAAX;IACAH,oCAAYI,QAAZ;IACH;IACJ;IATS;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;;IAUV,mBAAOL,QAAP;IACH;IA5BL;IAAA;IAAA,kCA6BW7Q,MA7BX,EA6BmB;IACX,iBAAKwQ,MAAL;IACA,iBAAKD,IAAL,IAAa,KAAKG,YAAL,KAAsB1Q,MAAtB,GAA+B,CAA/B,GAAmCA,WAAW,CAAC,CAAZ,GAAgB,CAAhB,GAAoB,CAAC,CAArE;IACH;IAhCL;IAAA;IAAA,2CAiCuB;IACf,iBAAKsQ,QAAL,CAAclG,IAAd,CAAmB,UAAC1O,CAAD,EAAI2D,CAAJ;IAAA,uBAAUA,EAAEmR,MAAF,GAAW9U,EAAE8U,MAAvB;IAAA,aAAnB;IACA,mBAAO,KAAKF,QAAL,CAAc,CAAd,CAAP;IACH;IApCL;IAAA;IAAA;IAsCA;AACA,QAAae,SAAb;IACI,yBAAgE;IAAA,YAApDC,OAAoD,uEAA1C,GAA0C;IAAA,YAArCC,aAAqC,uEAArB,IAAqB;IAAA,YAAfC,SAAe,uEAAH,CAAG;IAAA;;IAC5D,aAAKA,SAAL,GAAiBA,SAAjB;IACA,aAAKF,OAAL,GAAeA,OAAf;IACA,aAAKC,aAAL,GAAqBA,aAArB;IACH;;IALL;IAAA;IAAA,+BAMWlX,IANX,EAMiB;IACT,gBAAMoX,OAAO,IAAIrB,OAAJ,CAAY/V,IAAZ,CAAb;IACA,gBAAMqX,YAAYC,KAAKC,GAAL,EAAlB;IACA,gBAAMC,YAAYH,YAAY,KAAKJ,OAAnC;IACA,gBAAIQ,eAAe,CAAnB;IACA,gBAAIL,KAAKhB,UAAL,CAAgBnV,MAAhB,KAA2B,CAA/B,EAAkC;IAC9B,uBAAO;IACHyW,8BAAUJ,KAAKC,GAAL,KAAaF,SADpB;IAEH1X,0BAAMyX,KAAKhB,UAAL,CAAgB,CAAhB,CAFH;IAGHqB;IAHG,iBAAP;IAKH;IACDA,2BAAe,KAAKE,OAAL,CAAa3X,IAAb,EAAmBoX,IAAnB,EAAyBI,SAAzB,CAAf;IACA,mBAAO;IACHE,0BAAUJ,KAAKC,GAAL,KAAaF,SADpB;IAEH1X,sBAAMyX,KAAKQ,gBAAL,GAAwB1W,MAF3B;IAGHuW;IAHG,aAAP;IAKH;IAxBL;IAAA;IAAA,gCAyBYzX,IAzBZ,EAyBkBoX,IAzBlB,EAyBwBI,SAzBxB,EAyBmC;IAC3B,gBAAIC,eAAe,CAAnB;IACA,iBAAK,IAAII,aAAa,CAAtB,EAAyBA,aAAa,KAAKX,aAAlB,IAAmCI,KAAKC,GAAL,KAAaC,SAAzE,EAAoFK,cAAc,KAAKV,SAAvG,EAAkH;IAC9G,qBAAK,IAAIpW,IAAI,CAAb,EAAgBA,IAAI,KAAKoW,SAAzB,EAAoC,EAAEpW,CAAtC,EAAyC;IACrC,wBAAI6O,OAAOwH,IAAX;IACA,wBAAMrR,WAAW/F,KAAKM,KAAL,CAAWW,MAA5B;IACA;IACA,2BAAO2O,KAAKwG,UAAL,CAAgBnV,MAAhB,KAA2B,CAA3B,IAAgC2O,KAAKqG,QAAL,CAAchV,MAAd,GAAuB,CAA9D,EAAiE;IAC7D2O,+BAAOA,KAAKkI,WAAL,EAAP;IACA9X,6BAAKL,IAAL,CAAUiQ,KAAK1O,MAAf;IACH;IACD;IACA,wBAAI0O,KAAKwG,UAAL,CAAgBnV,MAAhB,GAAyB,CAA7B,EAAgC;IAC5B,4BAAM8W,IAAI1N,KAAKsI,KAAL,CAAWtI,KAAKyL,MAAL,KAAgBlG,KAAKwG,UAAL,CAAgBnV,MAA3C,CAAV;IACAjB,6BAAKL,IAAL,CAAUiQ,KAAKwG,UAAL,CAAgB2B,CAAhB,CAAV;IACAnI,+BAAOA,KAAKoI,QAAL,CAAchY,IAAd,EAAoB+X,CAApB,CAAP;IACH;IACD;IACA,wBAAIvX,UAAUR,KAAKmG,QAAL,EAAd;IACA,2BAAO3F,QAAQS,MAAR,GAAiB,CAAxB,EAA2B;IACvBjB,6BAAKL,IAAL,CAAUa,QAAQ6J,KAAKsI,KAAL,CAAWtI,KAAKyL,MAAL,KAAgBtV,QAAQS,MAAnC,CAAR,CAAV;IACA,0BAAEwW,YAAF;IACAjX,kCAAUR,KAAKmG,QAAL,EAAV;IACH;IACD;IACA,wBAAMR,SAAS3F,KAAKyH,MAApB;IACA,2BAAOmI,IAAP,EAAa;IACTA,6BAAKlM,MAAL,CAAYiC,MAAZ;IACAiK,+BAAOA,KAAKoG,UAAZ;IACH;IACD,2BAAOhW,KAAKM,KAAL,CAAWW,MAAX,GAAoB8E,QAA3B,EAAqC;IACjC/F,6BAAKyD,IAAL;IACH;IACJ;IACJ;IACD,mBAAOgU,YAAP;IACH;IA7DL;IAAA;IAAA;;ICzCA;AACA,IACA;AACA,QAAaQ,eAAb;IAAA;;IACI,+BAAgE;IAAA,YAApDhB,OAAoD,uEAA1C,GAA0C;IAAA,YAArCC,aAAqC,uEAArB,IAAqB;IAAA,YAAfC,SAAe,uEAAH,CAAG;IAAA;IAAA,gIACtDF,OADsD,EAC7CC,aAD6C,EAC9BC,SAD8B;IAE/D;;IAHL;IAAA;IAAA,+BAIWnX,IAJX,EAIiB;IACT,gBAAMoX,OAAO,KAAKc,OAAL,CAAalY,IAAb,KAAsB,IAAI+V,OAAJ,CAAY/V,IAAZ,CAAnC;IACA,gBAAMqX,YAAYC,KAAKC,GAAL,EAAlB;IACA,gBAAMC,YAAYH,YAAY,KAAKJ,OAAnC;IACA,gBAAMQ,eAAe,KAAKE,OAAL,CAAa3X,IAAb,EAAmBoX,IAAnB,EAAyBI,SAAzB,CAArB;IACA,iBAAKW,UAAL,GAAkBf,KAAKQ,gBAAL,EAAlB;IACA,mBAAO;IACHF,0BAAUJ,KAAKC,GAAL,KAAaF,SADpB;IAEH1X,sBAAM,KAAKwY,UAAL,CAAgBjX,MAFnB;IAGHuW;IAHG,aAAP;IAKH;IAfL;IAAA;IAAA,gCAgBYzX,IAhBZ,EAgBkB;IAAA;;IACV,gBAAI,CAAC,KAAKmY,UAAN,IAAoB,KAAKA,UAAL,CAAgB7I,KAAhB,IAAyBtP,KAAKM,KAAL,CAAWW,MAA5D,EAAoE;IAChE;IACH;;IAHS,uCAIDF,CAJC;IAKN,uBAAKoX,UAAL,GAAkB,OAAKA,UAAL,CAAgBlC,QAAhB,CAAyBmC,IAAzB,CAA8B,UAACxO,CAAD;IAAA,2BAAOA,EAAE1I,MAAF,KAAalB,KAAKM,KAAL,CAAWS,CAAX,CAApB;IAAA,iBAA9B,CAAlB;IACA,oBAAI,CAAC,OAAKoX,UAAV,EAAsB;IAClB;IAAA;IAAA;IACH;IARK;;IAIV,iBAAK,IAAIpX,IAAI,KAAKoX,UAAL,CAAgB7I,KAA7B,EAAoCvO,IAAIf,KAAKM,KAAL,CAAWW,MAAnD,EAA2DF,GAA3D,EAAgE;IAAA,iCAAvDA,CAAuD;;IAAA;IAK/D;IACD,mBAAO,KAAKoX,UAAZ;IACH;IA3BL;IAAA;IAAA,EAAqCnB,SAArC;;;;;;;;;;;;ICDA;AACA,QAAaqB,IAAb;IAAA;IAAA;IAAA;;IAAA;IAAA;IAAA,6BAagBzT,EAbhB,EAaoB;IACZ,mBAAOyT,KAAK5S,KAAL,CAAW2S,IAAX,CAAgB,UAACE,CAAD;IAAA,uBAAOA,EAAE1T,EAAF,KAASA,EAAhB;IAAA,aAAhB,CAAP;IACH;IAfL;IAAA;IAAA,gCAgBmBA,EAhBnB,EAgBuB2T,OAhBvB,EAgBgC;IACxB,mBAAOF,KAAK5S,KAAL,CAAW+K,MAAX,CAAkB,UAAC8H,CAAD;IAAA,uBAAOA,EAAExS,UAAF,KAAiBlB,EAAjB,IAAuB0T,EAAE1T,EAAF,KAAS2T,OAAvC;IAAA,aAAlB,CAAP;IACH;IAlBL;IAAA;IAAA,6BACmBpH,KADnB,EAC0B;IAClB,gBAAIA,UAAU,KAAKqH,QAAnB,EAA6B;IACzB,qBAAKA,QAAL,GAAgBrH,KAAhB;IACAkH,qBAAKI,UAAL,GAAkBzX,SAAlB;IACH;IACJ;IANL;IAAA;IAAA,+BAOuB;IACf,gBAAI,CAACqX,KAAKI,UAAV,EAAsB;IAClBJ,qBAAKI,UAAL,GAAkBpU,OAAOwB,MAAP,CAAcL,MAAMC,KAAN,EAAa,KAAK+S,QAAlB,CAAd,CAAlB;IACH;IACD,mBAAOH,KAAKI,UAAZ;IACH;IAZL;IAAA;IAAA;IAoBAJ,KAAKG,QAAL,GAAgB,KAAhB;;ICnBA;AACA,QAAaE,QAAQjT,KAAd;AACP,IACA;AACA,QAAakT,UAAUC,OAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}