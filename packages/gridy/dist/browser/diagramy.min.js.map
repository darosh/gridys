{"version":3,"sources":["diagramy.min.js","/source/diagramy.min.js"],"names":["f","exports","module","define","g","window","global","Diagramy","self","this","e","s","require","u","n","a","o","t","i","code","Error","call","l","r","length",1,"Gridy","Integer2","x","y","prototype","v","distance","b","Math","floor","abs","toString","equals","p","add","scale","d","cubeLength","Float2","round","h","rx","ry","lerp","line","N","results","push","max","k","join","__extends","__","constructor","hasOwnProperty","Position","_super","apply","arguments","Rectangle","minX","maxX","minY","maxY","Search","start","maxMovement","maxMagnitude","blocked","available","_this","cost","previous","fringes","forEach","tile","neighbors","dir","neighbor","undefined","path","end","node","d3","Diagram","svg","grid","animation","fontSize","duration","data","_polygons","_centers","_circles","_coordinates","_tileCoordinates","root","append","paths","init","nodes","initRoot","tilesEnter","initTiles","polygons","centers","circles","coordinates","tileCoordinates","show","tiles","selectAll","remove","tileTypes","shapePath","attr","getTileType","transition","orientation","angle","radius","each","toPoint","selection","select","text","labels","vertices","highlight","classed","tileSet","set","has","center","search","from","to","style","color","interpolate","key","point","xy","pointElement","position","translate","mousePoint","on","mouse","bounds","parseFloat","map","tileKey","exit","enter","empty","tileType","toFixed","delta"],"mappings":"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","file":"diagramy.min.js","sourcesContent":["!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{var i;i=\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this,i.Diagramy=t()}}(function(){return function t(i,e,s){function n(o,a){if(!e[o]){if(!i[o]){var l=\"function\"==typeof require&&require;if(!a&&l)return l(o,!0);if(r)return r(o,!0);var h=new Error(\"Cannot find module '\"+o+\"'\");throw h.code=\"MODULE_NOT_FOUND\",h}var c=e[o]={exports:{}};i[o][0].call(c.exports,function(t){var e=i[o][1][t];return n(e?e:t)},c,c.exports,t,i,e,s)}return e[o].exports}for(var r=\"function\"==typeof require&&require,o=0;o<s.length;o++)n(s[o]);return n}({1:[function(t,i,e){(function(e){var s;!function(t){\"use strict\"}(s||(s={}));var s;!function(t){\"use strict\"}(s||(s={}));var s;!function(t){\"use strict\"}(s||(s={}));var s;!function(t){\"use strict\";var i=function(){function t(t,i){void 0===t&&(t=0),void 0===i&&(i=0),this.x=t,this.y=i}return t.prototype.v=function(){return[this.x,this.y]},t.prototype.distance=function(t){return Math.floor((Math.abs(this.x-t.x)+Math.abs(this.y-t.y))/2)},t.prototype.toString=function(){return this.x+\",\"+this.y},t.prototype.equals=function(t){return this.x===t.x&&this.y===t.y},t.prototype.add=function(i){return new t(this.x+i.x,this.y+i.y)},t.prototype.scale=function(i){return new t(this.x*i,this.y*i)},t.prototype.cubeLength=function(){return Math.floor((Math.abs(this.x)+Math.abs(this.y))/2)},t}();t.Integer2=i}(s||(s={}));var s;!function(t){\"use strict\"}(s||(s={}));var s;!function(t){\"use strict\";var i=function(){function i(t,i){void 0===t&&(t=0),void 0===i&&(i=0),this.x=t,this.y=i}return i.round=function(i){var e=Math.round(i.x),s=Math.round(i.y);return new t.Integer2(e,s)},i.lerp=function(t,e,s){return new i(t.x+(e.x-t.x)*s,t.y+(e.y-t.y)*s)},i.line=function(t,e){for(var s=t.distance(e),n=[],r=0;s+1>r;r++)n.push(i.round(i.lerp(t,e,1/Math.max(1,s)*r)));return n},i.prototype.equals=function(t){return this.x===t.x&&this.y===t.y},i.prototype.v=function(){return[this.x,this.y]},i.prototype.scale=function(t){return new i(this.x*t,this.y*t)},i.prototype.toString=function(){return this.v().join(\",\")},i}();t.Float2=i}(s||(s={}));var s,n=this.__extends||function(t,i){function e(){this.constructor=t}for(var s in i)i.hasOwnProperty(s)&&(t[s]=i[s]);e.prototype=i.prototype,t.prototype=new e};!function(t){\"use strict\";var i=function(t){function i(){t.apply(this,arguments)}return n(i,t),i}(t.Integer2);t.Position=i}(s||(s={}));var s;!function(t){\"use strict\";var i=function(){function t(t,i,e,s){void 0===t&&(t=0),void 0===i&&(i=0),void 0===e&&(e=0),void 0===s&&(s=0),this.minX=0,this.maxX=0,this.minY=0,this.maxY=0,this.minX=t,this.maxX=i,this.minY=e,this.maxY=s}return t.add=function(i,e){return new t(i.minX+e.minX,i.maxX+e.maxX,i.minY+e.minY,i.maxY+e.maxY)},t}();t.Rectangle=i}(s||(s={}));var s;!function(t){\"use strict\"}(s||(s={}));var s;!function(t){\"use strict\";var i=function(){function t(t,i,e,s,n){var r=this;void 0===n&&(n=null),this.cost={},this.previous={},this.max=0,this.start=t,this.cost[t.toString()]=0,this.previous[t.toString()]=null;for(var o=[[t]],a=0;i>a&&o[a].length>0;a++)o[a+1]=[],o[a].forEach(function(t){for(var i=t.neighbors(),l=0;l<i.length;l++){var h=i[l];(!n||n[h.toString()])&&void 0===r.cost[h.toString()]&&!s[h.toString()]&&h.cubeLength()<=e&&(r.cost[h.toString()]=a+1,r.max=Math.max(r.max,a+1),r.previous[h.toString()]=t,o[a+1].push(h))}})}return t.prototype.path=function(t){for(var i=[],e=t;e;)i.push(e),e=e.equals(this.start)?null:this.previous[e.toString()];return i},t}();t.Search=i}(s||(s={}));var r;!function(i){\"use strict\";var n=e.d3||t(\"d3\"),r=function(){function t(t,i,e){void 0===e&&(e=!0),this.fontSize=14,this.duration=0,this.data={},this._polygons=!0,this._centers=!1,this._circles=!1,this._coordinates=!1,this._tileCoordinates=!1,this.svg=t,this.grid=i,this.animation=e,this.root=t.append(\"g\"),this.paths=t.append(\"g\"),this.init()}return t.prototype.init=function(){this.nodes&&(this.duration=800),this.initRoot();var t=this.initTiles();return this._polygons&&this.polygons(t),this._centers&&this.centers(t),this._circles&&this.circles(t),this._coordinates&&this.coordinates(t),this._tileCoordinates&&this.tileCoordinates(t),this},t.prototype.polygons=function(t){var i=this;void 0===t&&(t=!0);var e;if(t===!1)return this.tiles.selectAll(\"g.polygon\").selectAll(\"polygon\").remove(),this._polygons=!1,this;t!==!0||this._polygons?t!==!0&&(e=t.selectAll(\"g.polygon\"),e.append(\"polygon\")):(e=this.tiles.selectAll(\"g.polygon\"),e.append(\"polygon\"),this._polygons=!0);for(var s=this.tiles.selectAll(\"g.polygon\").selectAll(\"polygon\"),n=[],r=0;r<this.grid.tileTypes;r++)n.push(this.shapePath(r));return 1===this.grid.tileTypes?s.attr(\"points\",n[0]):s.attr(\"points\",function(t){return n[i.grid.getTileType(i.data[t].tile)]}),this.transition(s).attr(\"transform\",\"rotate(\"+this.grid.orientation*this.grid.angle+\")\"),this},t.prototype.centers=function(t){void 0===t&&(t=!0);var i;return t===!1?(this.tiles.selectAll(\"g.center\").selectAll(\"circle\").remove(),this._centers=!1,this):(t!==!0||this._centers?t!==!0&&(i=t.selectAll(\"g.center\"),i.append(\"circle\").attr(\"class\",\"center\").attr(\"r\",5)):(i=this.tiles.selectAll(\"g.center\"),i.append(\"circle\").attr(\"class\",\"center\").attr(\"r\",5),this._centers=!0),this)},t.prototype.circles=function(t){void 0===t&&(t=!0);var i;return t===!1?(this.tiles.selectAll(\"g.circle\").selectAll(\"circle\").remove(),this._circles=!1,this):(t!==!0||this._circles?t!==!0&&(i=t.selectAll(\"g.circle\"),i.append(\"circle\").attr(\"class\",\"circle\")):(i=this.tiles.selectAll(\"g.circle\"),i.append(\"circle\").attr(\"class\",\"circle\"),this._circles=!0),this.transition(this.tiles.selectAll(\"g.circle\").selectAll(\"circle\")).attr(\"r\",this.grid.radius),this)},t.prototype.coordinates=function(t){void 0===t&&(t=!0);var i;if(t===!1)return this.tiles.selectAll(\"g.coordinates\").selectAll(\"text\").remove(),this._coordinates=!1,this;if(t!==!0||this._coordinates?t!==!0&&(i=t.selectAll(\"g.coordinates\")):(i=this.tiles.selectAll(\"g.coordinates\"),this._coordinates=!0),i){var e=this;i.append(\"text\").attr(\"y\",\"0.4em\").each(function(t){var i=e.grid.toPoint(e.data[t].tile),s=n.select(this);s.append(\"tspan\").attr(\"class\",\"x\").text(i.x),s.append(\"tspan\").text(\", \"),s.append(\"tspan\").attr(\"class\",\"y\").text(i.y)})}return this},t.prototype.tileCoordinates=function(t){void 0===t&&(t=!0);var i;if(t===!1)return this.tiles.selectAll(\"g.tile-coordinates\").selectAll(\"text\").remove(),this._tileCoordinates=!1,this;if(t!==!0||this._tileCoordinates?t!==!0&&(this.tiles.selectAll(\"g.tile-coordinates\").selectAll(\"text\").remove(),i=this.tiles.selectAll(\"g.tile-coordinates\")):(i=this.tiles.selectAll(\"g.tile-coordinates\"),this._tileCoordinates=!0),i){var e=this;i.append(\"text\").attr(\"y\",\"0.4em\").each(function(t){var i=n.select(this),s=e.data[t].tile.v();0===s[0]&&0===s[1]&&0===s[2]&&(s=[\"x\",\"y\",\"z\"]),s[2]===!0?s[2]=\"T\":s[2]===!1&&(s[2]=\"F\"),i.append(\"tspan\").attr(\"class\",\"q\").text(s[0]),i.append(\"tspan\").attr(\"class\",\"s\").text(s[1]),i.append(\"tspan\").attr(\"class\",\"r\").text(s[2])});var s=this.grid.vertices(this.grid.orientation,this.grid.scale-1.5*this.fontSize);this.tiles.select(\".q\").attr(\"x\",s[0].x).attr(\"y\",s[0].y+.4*this.fontSize),this.tiles.select(\".s\").attr(\"x\",s[2].x).attr(\"y\",s[2].y+.4*this.fontSize),s.length>4?this.tiles.select(\".r\").attr(\"x\",s[4].x).attr(\"y\",s[4].y+.4*this.fontSize):s.length>=3&&this.tiles.select(\".r\").attr(\"x\",s[1].x).attr(\"y\",s[1].y+.4*this.fontSize)}return this},t.prototype.highlight=function(t,i){var e=this;void 0===i&&(i=\"highlight\");var s=n.set(t);return this.tiles.classed(i,function(t){return s.has(e.data[t].tile)}),this},t.prototype.path=function(t){if(this.paths.selectAll(\"*\").remove(),!t||!t.length)return this;for(var i=this.paths.append(\"path\").attr(\"d\",\"M 0 0\").attr(\"class\",\"path\"),e=[],s=0;s<t.length;s++)e.push(0===s?\"M\":\"L\"),e.push(this.grid.center(t[s]).toString());return i.attr(\"d\",e.join(\" \")),this},t.prototype.search=function(t,i,e){var s=this;if(void 0===i&&(i=\"hsl(90, 80%, 80%)\"),void 0===e&&(e=\"hsl(200, 80%, 80%)\"),!t)return this.tiles.selectAll(\"g.polygon\").selectAll(\"polygon\").style(\"fill\",null),this;var r=n.interpolate(i,e);return this.tiles.selectAll(\"g.polygon\").selectAll(\"polygon\").style(\"fill\",function(i){var e=t.cost[s.data[i].key];return e>=0?r(e/(t.max||1)):null}),this},t.prototype.point=function(t){var i=this;this.pointElement||(this.pointElement=this.svg.append(\"circle\"),this.pointElement.attr(\"class\",\"marker\").attr(\"r\",5));var e=this.grid.position(new s.Float2(t[0],t[1]));return this.pointElement.attr(\"transform\",\"translate(\"+(t[0]+this.translate.x)+\",\"+(t[1]+this.translate.y)+\")\"),this.tiles.classed(\"highlight\",function(t){return i.data[t].tile.equals(e)}),this},t.prototype.mousePoint=function(){var t=this;return this.svg.on(\"mousemove\",function(){var i=n.mouse(t.root.node());t.point(i)}),this},t.prototype.initRoot=function(){var t=this.grid.bounds();this.translate=new s.Float2((parseFloat(this.svg.attr(\"width\"))-t.minX-t.maxX)/2,(parseFloat(this.svg.attr(\"height\"))-t.minY-t.maxY)/2),this.transition(this.root).attr(\"transform\",\"translate(\"+this.translate+\")\"),this.transition(this.paths).attr(\"transform\",\"translate(\"+this.translate+\")\")},t.prototype.initTiles=function(){var t=this;this.nodes=this.grid.tiles.map(function(i){var e={tile:i,key:i.toString(),tileKey:t.grid.toPoint(i).toString()};return t.data[e.tileKey]=e,e.tileKey}),this.tiles=this.root.selectAll(\"g.tile\").data(this.nodes,function(t){return t}),this.transition(this.tiles.exit(),.5).style(\"opacity\",0).remove();var i=this.tiles.enter().append(\"g\").attr(\"class\",\"tile\").style(\"opacity\",this.animation?0:1).attr(\"transform\",function(i){var e=t.grid.center(t.data[i].tile);return\"translate(\"+e.x+\",\"+e.y+\")\"});return i.append(\"g\").attr(\"class\",\"polygon\").empty(),i.append(\"g\").attr(\"class\",\"center\").empty(),i.append(\"g\").attr(\"class\",\"circle\").empty(),i.append(\"g\").attr(\"class\",\"coordinates\").empty(),i.append(\"g\").attr(\"class\",\"tile-coordinates\").empty(),this.transition(this.tiles).attr(\"transform\",function(i){var e=t.grid.center(t.data[i].tile);return\"translate(\"+e.x+\",\"+e.y+\")\"}).style(\"opacity\",1),i},t.prototype.shapePath=function(t){return this.grid.vertices(null,null,t).map(function(t){return t.x.toFixed(3)+\",\"+t.y.toFixed(3)}).join(\" \")},t.prototype.transition=function(t,i){return void 0===i&&(i=1),this.animation&&this.duration*i?t.transition().duration(this.duration*i):t},t}();i.Diagram=r}(r||(r={})),i.exports=r}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{d3:void 0}]},{},[1])(1)});\n//# sourceMappingURL=diagramy.min.js.map","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Diagramy = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n})(Gridy || (Gridy = {}));\n/// <reference path=\"Integer.ts\" />\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n})(Gridy || (Gridy = {}));\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n})(Gridy || (Gridy = {}));\n/// <reference path=\"IVector.ts\" />\n/// <reference path=\"Integer.ts\" />\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n    var Integer2 = (function () {\n        function Integer2(x, y) {\n            if (x === void 0) { x = 0; }\n            if (y === void 0) { y = 0; }\n            this.x = x;\n            this.y = y;\n        }\n        Integer2.prototype.v = function () {\n            return [this.x, this.y];\n        };\n        Integer2.prototype.distance = function (b) {\n            return Math.floor((Math.abs(this.x - b.x) + Math.abs(this.y - b.y)) / 2);\n        };\n        Integer2.prototype.toString = function () {\n            return this.x + ',' + this.y;\n        };\n        Integer2.prototype.equals = function (p) {\n            return (this.x === p.x) && (this.y === p.y);\n        };\n        Integer2.prototype.add = function (p) {\n            return new Integer2(this.x + p.x, this.y + p.y);\n        };\n        Integer2.prototype.scale = function (d) {\n            return new Integer2(this.x * d, this.y * d);\n        };\n        Integer2.prototype.cubeLength = function () {\n            return Math.floor((Math.abs(this.x) + Math.abs(this.y)) / 2);\n        };\n        return Integer2;\n    })();\n    Gridy.Integer2 = Integer2;\n})(Gridy || (Gridy = {}));\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n})(Gridy || (Gridy = {}));\n/// <reference path=\"IVector.ts\" />\n/// <reference path=\"Integer.ts\" />\n/// <reference path=\"Integer2.ts\" />\n/// <reference path=\"Float.ts\" />\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n    var Float2 = (function () {\n        function Float2(x, y) {\n            if (x === void 0) { x = 0; }\n            if (y === void 0) { y = 0; }\n            this.x = x;\n            this.y = y;\n        }\n        Float2.round = function (h) {\n            var rx = Math.round(h.x);\n            var ry = Math.round(h.y);\n            return new Gridy.Integer2(rx, ry);\n        };\n        Float2.lerp = function (a, b, t) {\n            return new Float2(a.x + (b.x - a.x) * t, a.y + (b.y - a.y) * t);\n        };\n        Float2.line = function (a, b) {\n            var N = a.distance(b);\n            var results = [];\n            for (var i = 0; i < (N + 1); i++) {\n                results.push(Float2.round(Float2.lerp(a, b, 1.0 / Math.max(1, N) * i)));\n            }\n            return results;\n        };\n        Float2.prototype.equals = function (p) {\n            return (this.x === p.x) && (this.y === p.y);\n        };\n        Float2.prototype.v = function () {\n            return [this.x, this.y];\n        };\n        Float2.prototype.scale = function (k) {\n            return new Float2(this.x * k, this.y * k);\n        };\n        Float2.prototype.toString = function () {\n            return this.v().join(',');\n        };\n        return Float2;\n    })();\n    Gridy.Float2 = Float2;\n})(Gridy || (Gridy = {}));\n/// <reference path=\"Integer2.ts\" />\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n    var Position = (function (_super) {\n        __extends(Position, _super);\n        function Position() {\n            _super.apply(this, arguments);\n        }\n        return Position;\n    })(Gridy.Integer2);\n    Gridy.Position = Position;\n})(Gridy || (Gridy = {}));\n/// <reference path=\"Float.ts\" />\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n    var Rectangle = (function () {\n        function Rectangle(minX, maxX, minY, maxY) {\n            if (minX === void 0) { minX = 0; }\n            if (maxX === void 0) { maxX = 0; }\n            if (minY === void 0) { minY = 0; }\n            if (maxY === void 0) { maxY = 0; }\n            this.minX = 0;\n            this.maxX = 0;\n            this.minY = 0;\n            this.maxY = 0;\n            this.minX = minX;\n            this.maxX = maxX;\n            this.minY = minY;\n            this.maxY = maxY;\n        }\n        Rectangle.add = function (a, b) {\n            return new Rectangle(a.minX + b.minX, a.maxX + b.maxX, a.minY + b.minY, a.maxY + b.maxY);\n        };\n        return Rectangle;\n    })();\n    Gridy.Rectangle = Rectangle;\n})(Gridy || (Gridy = {}));\n/// <reference path=\"Integer.ts\" />\n/// <reference path=\"Float.ts\" />\n/// <reference path=\"Float2.ts\" />\n/// <reference path=\"Position.ts\" />\n/// <reference path=\"Rectangle.ts\" />\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n})(Gridy || (Gridy = {}));\n// From http://www.redblobgames.com/grids/hexagons/\n// Copyright 2013 Red Blob Games <redblobgames@gmail.com>\n// License: Apache v2.0 <http://www.apache.org/licenses/LICENSE-2.0.html>\n// Original source: http://www.redblobgames.com/grids/hexagons/ui.js\n/// <reference path=\"ITile.ts\" />\nvar Gridy;\n(function (Gridy) {\n    'use strict';\n    var Search = (function () {\n        function Search(start, maxMovement, maxMagnitude, blocked, available) {\n            var _this = this;\n            if (available === void 0) { available = null; }\n            this.cost = {};\n            this.previous = {};\n            this.max = 0;\n            this.start = start;\n            this.cost[start.toString()] = 0;\n            this.previous[start.toString()] = null;\n            var fringes = [[start]];\n            for (var k = 0; k < maxMovement && fringes[k].length > 0; k++) {\n                fringes[k + 1] = [];\n                fringes[k].forEach(function (tile) {\n                    var neighbors = tile.neighbors();\n                    for (var dir = 0; dir < neighbors.length; dir++) {\n                        var neighbor = neighbors[dir];\n                        if (available && !available[neighbor.toString()]) {\n                            continue;\n                        }\n                        if ((_this.cost[neighbor.toString()] === undefined) && !blocked[neighbor.toString()] && neighbor.cubeLength() <= maxMagnitude) {\n                            _this.cost[neighbor.toString()] = k + 1;\n                            _this.max = Math.max(_this.max, k + 1);\n                            _this.previous[neighbor.toString()] = tile;\n                            fringes[k + 1].push(neighbor);\n                        }\n                    }\n                });\n            }\n        }\n        Search.prototype.path = function (end) {\n            var path = [];\n            var node = end;\n            while (node) {\n                path.push(node);\n                node = node.equals(this.start) ? null : this.previous[node.toString()];\n            }\n            return path;\n        };\n        return Search;\n    })();\n    Gridy.Search = Search;\n})(Gridy || (Gridy = {}));\n// From http://www.redblobgames.com/grids/hexagons/\n// Copyright 2013 Red Blob Games <redblobgames@gmail.com>\n// License: Apache v2.0 <http://www.apache.org/licenses/LICENSE-2.0.html>\n// Original source: http://www.redblobgames.com/grids/hexagons/ui.js\n/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/d3/d3.d.ts\" />\n/// <reference path=\"../gridy/ITile.ts\" />\n/// <reference path=\"../gridy/Float2.ts\" />\n/// <reference path=\"../gridy/IGrid.ts\" />\n/// <reference path=\"../gridy/Search.ts\" />\nvar Diagramy;\n(function (Diagramy) {\n    'use strict';\n    /* tslint:disable:no-var-requires */\n    var d3 = global.d3 || require('d3');\n    var Diagram = (function () {\n        function Diagram(svg, grid, animation) {\n            if (animation === void 0) { animation = true; }\n            this.fontSize = 14;\n            this.duration = 0;\n            this.data = {};\n            this._polygons = true;\n            this._centers = false;\n            this._circles = false;\n            this._coordinates = false;\n            this._tileCoordinates = false;\n            this.svg = svg;\n            this.grid = grid;\n            this.animation = animation;\n            this.root = svg.append('g');\n            this.paths = svg.append('g');\n            this.init();\n        }\n        Diagram.prototype.init = function () {\n            if (this.nodes) {\n                this.duration = 800;\n            }\n            this.initRoot();\n            var tilesEnter = this.initTiles();\n            if (this._polygons) {\n                this.polygons(tilesEnter);\n            }\n            if (this._centers) {\n                this.centers(tilesEnter);\n            }\n            if (this._circles) {\n                this.circles(tilesEnter);\n            }\n            if (this._coordinates) {\n                this.coordinates(tilesEnter);\n            }\n            if (this._tileCoordinates) {\n                this.tileCoordinates(tilesEnter);\n            }\n            return this;\n        };\n        Diagram.prototype.polygons = function (show) {\n            var _this = this;\n            if (show === void 0) { show = true; }\n            var tiles;\n            if (show === false) {\n                this.tiles.selectAll('g.polygon').selectAll('polygon').remove();\n                this._polygons = false;\n                return this;\n            }\n            else if (show === true && !this._polygons) {\n                tiles = this.tiles.selectAll('g.polygon');\n                tiles.append('polygon');\n                this._polygons = true;\n            }\n            else if (show !== true) {\n                tiles = show.selectAll('g.polygon');\n                tiles.append('polygon');\n            }\n            var polygons = this.tiles.selectAll('g.polygon').selectAll('polygon');\n            var paths = [];\n            for (var i = 0; i < this.grid.tileTypes; i++) {\n                paths.push(this.shapePath(i));\n            }\n            if (this.grid.tileTypes === 1) {\n                polygons.attr('points', paths[0]);\n            }\n            else {\n                polygons.attr('points', function (node) {\n                    return paths[_this.grid.getTileType(_this.data[node].tile)];\n                });\n            }\n            this.transition(polygons).attr('transform', 'rotate(' + (this.grid.orientation * this.grid.angle) + ')');\n            return this;\n        };\n        /**\n         * Show/hide tile center points\n         * @param show\n         * @returns {Diagramy.Diagram}\n         */\n        Diagram.prototype.centers = function (show) {\n            if (show === void 0) { show = true; }\n            var tiles;\n            if (show === false) {\n                this.tiles.selectAll('g.center').selectAll('circle').remove();\n                this._centers = false;\n                return this;\n            }\n            else if (show === true && !this._centers) {\n                tiles = this.tiles.selectAll('g.center');\n                tiles.append('circle').attr('class', 'center').attr('r', 5);\n                this._centers = true;\n            }\n            else if (show !== true) {\n                tiles = show.selectAll('g.center');\n                tiles.append('circle').attr('class', 'center').attr('r', 5);\n            }\n            return this;\n        };\n        Diagram.prototype.circles = function (show) {\n            if (show === void 0) { show = true; }\n            var tiles;\n            if (show === false) {\n                this.tiles.selectAll('g.circle').selectAll('circle').remove();\n                this._circles = false;\n                return this;\n            }\n            else if (show === true && !this._circles) {\n                tiles = this.tiles.selectAll('g.circle');\n                tiles.append('circle').attr('class', 'circle');\n                this._circles = true;\n            }\n            else if (show !== true) {\n                tiles = show.selectAll('g.circle');\n                tiles.append('circle').attr('class', 'circle');\n            }\n            this.transition(this.tiles.selectAll('g.circle').selectAll('circle')).attr('r', this.grid.radius);\n            return this;\n        };\n        Diagram.prototype.coordinates = function (show) {\n            if (show === void 0) { show = true; }\n            var tiles;\n            if (show === false) {\n                this.tiles.selectAll('g.coordinates').selectAll('text').remove();\n                this._coordinates = false;\n                return this;\n            }\n            else if (show === true && !this._coordinates) {\n                tiles = this.tiles.selectAll('g.coordinates');\n                this._coordinates = true;\n            }\n            else if (show !== true) {\n                tiles = show.selectAll('g.coordinates');\n            }\n            if (tiles) {\n                var _this = this;\n                tiles.append('text').attr('y', '0.4em').each(function (node) {\n                    var p = _this.grid.toPoint(_this.data[node].tile);\n                    var selection = d3.select(this);\n                    selection.append('tspan').attr('class', 'x').text(p.x);\n                    selection.append('tspan').text(', ');\n                    selection.append('tspan').attr('class', 'y').text(p.y);\n                });\n            }\n            return this;\n        };\n        Diagram.prototype.tileCoordinates = function (show) {\n            if (show === void 0) { show = true; }\n            var tiles;\n            if (show === false) {\n                this.tiles.selectAll('g.tile-coordinates').selectAll('text').remove();\n                this._tileCoordinates = false;\n                return this;\n            }\n            else if (show === true && !this._tileCoordinates) {\n                tiles = this.tiles.selectAll('g.tile-coordinates');\n                this._tileCoordinates = true;\n            }\n            else if (show !== true) {\n                this.tiles.selectAll('g.tile-coordinates').selectAll('text').remove();\n                // tiles = show.selectAll('g.tile-coordinates');\n                tiles = this.tiles.selectAll('g.tile-coordinates');\n            }\n            if (tiles) {\n                var _this = this;\n                tiles.append('text').attr('y', '0.4em').each(function (node) {\n                    var selection = d3.select(this);\n                    var labels = _this.data[node].tile.v();\n                    if (labels[0] === 0 && labels[1] === 0 && labels[2] === 0) {\n                        labels = ['x', 'y', 'z'];\n                    }\n                    if (labels[2] === true) {\n                        labels[2] = 'T';\n                    }\n                    else if (labels[2] === false) {\n                        labels[2] = 'F';\n                    }\n                    selection.append('tspan').attr('class', 'q').text(labels[0]);\n                    selection.append('tspan').attr('class', 's').text(labels[1]);\n                    selection.append('tspan').attr('class', 'r').text(labels[2]);\n                });\n                var o = this.grid.vertices(this.grid.orientation, this.grid.scale - this.fontSize * 1.5);\n                this.tiles.select('.q').attr('x', o[0].x).attr('y', o[0].y + this.fontSize * 0.4);\n                this.tiles.select('.s').attr('x', o[2].x).attr('y', o[2].y + this.fontSize * 0.4);\n                if (o.length > 4) {\n                    this.tiles.select('.r').attr('x', o[4].x).attr('y', o[4].y + this.fontSize * 0.4);\n                }\n                else if (o.length >= 3) {\n                    this.tiles.select('.r').attr('x', o[1].x).attr('y', o[1].y + this.fontSize * 0.4);\n                }\n            }\n            return this;\n        };\n        /**\n         * Highlight selected tiles\n         * @param tiles Array of selected tiles\n         * @param classed Optional highlight class\n         * @returns {Diagramy.Diagram} For chain call\n         */\n        Diagram.prototype.highlight = function (tiles, classed) {\n            var _this = this;\n            if (classed === void 0) { classed = 'highlight'; }\n            var tileSet = d3.set(tiles);\n            this.tiles.classed(classed, function (node) {\n                return tileSet.has(_this.data[node].tile);\n            });\n            return this;\n        };\n        Diagram.prototype.path = function (tiles) {\n            this.paths.selectAll('*').remove();\n            if (!tiles || !tiles.length) {\n                return this;\n            }\n            var path = this.paths.append('path').attr('d', 'M 0 0').attr('class', 'path');\n            var d = [];\n            for (var i = 0; i < tiles.length; i++) {\n                d.push(i === 0 ? 'M' : 'L');\n                d.push(this.grid.center(tiles[i]).toString());\n            }\n            path.attr('d', d.join(' '));\n            return this;\n        };\n        Diagram.prototype.search = function (search, from, to) {\n            var _this = this;\n            if (from === void 0) { from = 'hsl(90, 80%, 80%)'; }\n            if (to === void 0) { to = 'hsl(200, 80%, 80%)'; }\n            if (!search) {\n                this.tiles.selectAll('g.polygon').selectAll('polygon').style('fill', null);\n                return this;\n            }\n            var color = d3.interpolate(from, to);\n            this.tiles.selectAll('g.polygon').selectAll('polygon').style('fill', function (node) {\n                var v = search.cost[_this.data[node].key];\n                return (v >= 0) ? color(v / (search.max || 1)) : null;\n            });\n            return this;\n        };\n        Diagram.prototype.point = function (xy) {\n            var _this = this;\n            if (!this.pointElement) {\n                this.pointElement = this.svg.append('circle');\n                this.pointElement.attr('class', 'marker').attr('r', 5);\n            }\n            var tile = this.grid.position(new Gridy.Float2(xy[0], xy[1]));\n            this.pointElement.attr('transform', 'translate(' + (xy[0] + this.translate.x) + ',' + (xy[1] + this.translate.y) + ')');\n            this.tiles.classed('highlight', function (node) {\n                return _this.data[node].tile.equals(tile);\n            });\n            return this;\n        };\n        Diagram.prototype.mousePoint = function () {\n            var _this = this;\n            this.svg.on('mousemove', function () {\n                var xy = d3.mouse(_this.root.node());\n                _this.point(xy);\n            });\n            return this;\n        };\n        Diagram.prototype.initRoot = function () {\n            var bounds = this.grid.bounds();\n            this.translate = new Gridy.Float2((parseFloat(this.svg.attr('width')) - bounds.minX - bounds.maxX) / 2, (parseFloat(this.svg.attr('height')) - bounds.minY - bounds.maxY) / 2);\n            this.transition(this.root).attr('transform', 'translate(' + this.translate + ')');\n            this.transition(this.paths).attr('transform', 'translate(' + this.translate + ')');\n        };\n        Diagram.prototype.initTiles = function () {\n            var _this = this;\n            this.nodes = this.grid.tiles.map(function (n) {\n                var d = { tile: n, key: n.toString(), tileKey: _this.grid.toPoint(n).toString() };\n                _this.data[d.tileKey] = d;\n                return d.tileKey;\n            });\n            this.tiles = this.root.selectAll('g.tile').data(this.nodes, function (d) {\n                return d;\n            });\n            this.transition(this.tiles.exit(), 0.5).style('opacity', 0).remove();\n            var tilesEnter = this.tiles.enter().append('g').attr('class', 'tile').style('opacity', this.animation ? 0 : 1).attr('transform', function (node) {\n                var center = _this.grid.center(_this.data[node].tile);\n                return 'translate(' + center.x + ',' + center.y + ')';\n            });\n            tilesEnter.append('g').attr('class', 'polygon').empty();\n            tilesEnter.append('g').attr('class', 'center').empty();\n            tilesEnter.append('g').attr('class', 'circle').empty();\n            tilesEnter.append('g').attr('class', 'coordinates').empty();\n            tilesEnter.append('g').attr('class', 'tile-coordinates').empty();\n            this.transition(this.tiles).attr('transform', function (node) {\n                var center = _this.grid.center(_this.data[node].tile);\n                return 'translate(' + center.x + ',' + center.y + ')';\n            }).style('opacity', 1);\n            return tilesEnter;\n        };\n        Diagram.prototype.shapePath = function (tileType) {\n            return this.grid.vertices(null, null, tileType).map(function (p) {\n                return p.x.toFixed(3) + ',' + p.y.toFixed(3);\n            }).join(' ');\n        };\n        Diagram.prototype.transition = function (selection, delta) {\n            if (delta === void 0) { delta = 1; }\n            return ((this.animation && (this.duration * delta)) ? selection.transition().duration(this.duration * delta) : selection);\n        };\n        return Diagram;\n    })();\n    Diagramy.Diagram = Diagram;\n})(Diagramy || (Diagramy = {}));\n/// <reference path=\"../../typings/node/node.d.ts\" />\nmodule.exports = Diagramy;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"d3\":undefined}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}