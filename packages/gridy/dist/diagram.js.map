{"version":3,"file":"diagram.js","sources":["es6/Integer2.js","es6/Float2.js","es6/Diagram.js"],"sourcesContent":["export class Integer2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    get value() {\r\n        return [this.x, this.y];\r\n    }\r\n    distance(b) {\r\n        return Math.floor((Math.abs(this.x - b.x) + Math.abs(this.y - b.y)) / 2);\r\n    }\r\n    toString() {\r\n        return this.value.toString();\r\n    }\r\n    equals(p) {\r\n        return (this.x === p.x) && (this.y === p.y);\r\n    }\r\n    add(p) {\r\n        return new Integer2(this.x + p.x, this.y + p.y);\r\n    }\r\n    scale(d) {\r\n        return new Integer2(this.x * d, this.y * d);\r\n    }\r\n    cubeLength() {\r\n        return Math.floor((Math.abs(this.x) + Math.abs(this.y)) / 2);\r\n    }\r\n}\r\n//# sourceMappingURL=Integer2.js.map","import { Integer2 } from './Integer2';\r\nexport class Float2 {\r\n    constructor(x = 0, y = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    static ROUND(h) {\r\n        const rx = Math.round(h.x);\r\n        const ry = Math.round(h.y);\r\n        return new Integer2(rx, ry);\r\n    }\r\n    static LERP(a, b, t) {\r\n        return new Float2(a.x + (b.x - a.x) * t, a.y + (b.y - a.y) * t);\r\n    }\r\n    static LINE(a, b) {\r\n        const N = a.distance(b);\r\n        const results = [];\r\n        for (let i = 0; i < (N + 1); i++) {\r\n            results.push(Float2.ROUND(Float2.LERP(a, b, 1 / Math.max(1, N) * i)));\r\n        }\r\n        return results;\r\n    }\r\n    equals(p) {\r\n        return (this.x === p.x) && (this.y === p.y);\r\n    }\r\n    get value() {\r\n        return [this.x, this.y];\r\n    }\r\n    scale(k) {\r\n        return new Float2(this.x * k, this.y * k);\r\n    }\r\n    toString() {\r\n        return this.value.toString();\r\n    }\r\n}\r\n//# sourceMappingURL=Float2.js.map","import { Float2 } from './Float2';\r\n/**\r\n * @external\r\n */\r\nexport default class Diagram {\r\n    constructor(svg, grid, animation = true) {\r\n        this.translate = new Float2();\r\n        this.fontSize = 14;\r\n        this.duration = 0;\r\n        this.data = {};\r\n        this.showPolygons = true;\r\n        this.showPolygonPaths = true;\r\n        this.showCenters = false;\r\n        this.showCircles = false;\r\n        this.showAxes = false;\r\n        this.showCoordinates = false;\r\n        this.showTiles = false;\r\n        this.svg = svg;\r\n        this.grid = grid;\r\n        this.animation = animation;\r\n        this.root = svg.append('g');\r\n        this.paths = svg.append('g');\r\n        this.init();\r\n    }\r\n    init() {\r\n        if (this.nodes) {\r\n            this.duration = 800;\r\n        }\r\n        this.initRoot();\r\n        this.initTiles();\r\n        if (this.showPolygons) {\r\n            this.polygons(null);\r\n        }\r\n        if (this.showCenters) {\r\n            this.centers(null);\r\n        }\r\n        if (this.showCircles) {\r\n            this.circles(null);\r\n        }\r\n        if (this.showCoordinates) {\r\n            this.coordinates(null);\r\n        }\r\n        if (this.showTiles) {\r\n            this.tiles(null);\r\n        }\r\n        if (this.showAxes) {\r\n            this.axes(null);\r\n        }\r\n        return this;\r\n    }\r\n    polygons(show = true) {\r\n        let polygons;\r\n        const irregular = this.grid.irregular;\r\n        this.polygonPaths(show);\r\n        if (show === false) {\r\n            this.all.selectAll('g.polygon').selectAll('*').remove();\r\n            this.showPolygons = false;\r\n            return this;\r\n        }\r\n        else if (show === true && !this.showPolygons) {\r\n            polygons = this.all.selectAll('g.polygon').append('polygon');\r\n            this.showPolygons = true;\r\n        }\r\n        else if (show !== true) {\r\n            this.tilesEnter.selectAll('g.polygon').append('polygon');\r\n            polygons = this.all.selectAll('g.polygon').selectAll('*');\r\n            this.showPolygons = true;\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n        const paths = [];\r\n        if (!irregular) {\r\n            for (let i = 0; i < (this.grid.tileTypes || 0); i++) {\r\n                paths.push(this.shapePath(i));\r\n            }\r\n        }\r\n        if (this.grid.tileTypes === 1) {\r\n            polygons.attr('points', (node) => {\r\n                if (irregular) {\r\n                    return this.grid.vertices(false, 0, 0, this.data[node].tile).map((p) => `${p.x.toFixed(3)},${p.y.toFixed(3)}`)\r\n                        .join(' ');\r\n                }\r\n                else {\r\n                    return paths[0];\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            polygons.attr('points', (node) => {\r\n                return this.grid.getTileType ? paths[this.grid.getTileType(this.data[node].tile)] : '';\r\n            });\r\n        }\r\n        this.transition(polygons)\r\n            .attr('transform', `rotate(${this.grid.orientation * this.grid.angle})`);\r\n        return this;\r\n    }\r\n    polygonPaths(show = true) {\r\n        let polygons;\r\n        if (show === false) {\r\n            this.all.selectAll('g.paths').selectAll('*').remove();\r\n            this.showPolygonPaths = false;\r\n            return;\r\n        }\r\n        else if (show === true && !this.showPolygonPaths) {\r\n            polygons = this.all.selectAll('g.paths').append('path');\r\n            this.showPolygonPaths = true;\r\n        }\r\n        else if (show !== true) {\r\n            this.tilesEnter.selectAll('g.paths').append('path');\r\n            polygons = this.all.selectAll('g.paths').selectAll('path');\r\n            this.showPolygonPaths = true;\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n        polygons.attr('d', (node) => {\r\n            return this.grid.path ? (this.grid.path)(this.data[node].tile) : 'M 0 0';\r\n        });\r\n        this.transition(polygons)\r\n            .attr('transform', `rotate(${this.grid.orientation * this.grid.angle})`);\r\n    }\r\n    /**\r\n     * Show/hide tile center POINTS\r\n     * @param show\r\n     * @returns {Diagram}\r\n     */\r\n    centers(show = true) {\r\n        if (show === false) {\r\n            this.all.selectAll('g.center').selectAll('circle').remove();\r\n            this.showCenters = false;\r\n            return this;\r\n        }\r\n        else if (show === true && !this.showCenters) {\r\n            this.all.selectAll('g.center').append('circle').attr('class', 'center').attr('r', 5);\r\n            this.showCenters = true;\r\n        }\r\n        else if (show !== true) {\r\n            this.tilesEnter.selectAll('g.center').append('circle').attr('class', 'center').attr('r', 5);\r\n        }\r\n        return this;\r\n    }\r\n    circles(show = true) {\r\n        let circles;\r\n        if (show === false) {\r\n            this.all.selectAll('g.circle').selectAll('circle').remove();\r\n            this.showCircles = false;\r\n            return this;\r\n        }\r\n        else if (show === true && !this.showCircles) {\r\n            circles = this.all.selectAll('g.circle').append('circle').attr('class', 'circle');\r\n            this.showCircles = true;\r\n        }\r\n        else if (show !== true) {\r\n            this.tilesEnter.selectAll('g.circle').append('circle').attr('class', 'circle');\r\n            circles = this.all.selectAll('g.circle').selectAll('circle');\r\n            this.showCircles = true;\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n        this.transition(circles).attr('r', this.grid.radius);\r\n        return this;\r\n    }\r\n    coordinates(show = true) {\r\n        let tiles;\r\n        if (show === false) {\r\n            this.all.selectAll('g.coordinates').selectAll('text').remove();\r\n            this.showCoordinates = false;\r\n            return this;\r\n        }\r\n        else if (show === true && !this.showCoordinates) {\r\n            tiles = this.all.selectAll('g.coordinates').append('text');\r\n            this.showCoordinates = true;\r\n        }\r\n        else if (show !== true) {\r\n            this.tilesEnter.selectAll('g.coordinates').append('text');\r\n            tiles = this.all.selectAll('g.coordinates').selectAll('text');\r\n            this.showCoordinates = true;\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n        const that = this;\r\n        tiles.attr('y', '0.4em')\r\n            .each(function (node) {\r\n            const p = that.grid.toPoint(that.data[node].tile);\r\n            const selection = d3.select(this);\r\n            selection.selectAll('*').remove();\r\n            selection.append('tspan').attr('class', 'x').text(p.x);\r\n            selection.append('tspan').text(', ');\r\n            selection.append('tspan').attr('class', 'y').text(p.y);\r\n        });\r\n        return this;\r\n    }\r\n    axes(show = true) {\r\n        let tiles;\r\n        if (show === false) {\r\n            this.all.selectAll('g.axes').selectAll('text').remove();\r\n            this.showAxes = false;\r\n            return this;\r\n        }\r\n        else if (show === true && !this.showAxes) {\r\n            tiles = this.all.selectAll('g.axes').append('text');\r\n            this.showAxes = true;\r\n        }\r\n        else if (show !== true) {\r\n            this.tilesEnter.selectAll('g.axes').append('text');\r\n            tiles = this.all.selectAll('g.axes').selectAll('text');\r\n            this.showAxes = true;\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n        const that = this;\r\n        tiles.attr('y', '0.4em')\r\n            .each(function (node) {\r\n            const p = that.grid.toPoint(that.data[node].tile);\r\n            const selection = d3.select(this);\r\n            selection.selectAll('*').remove();\r\n            selection.append('tspan').attr('class', 'q').text(p.x.toString(25)\r\n                .replace(/./g, (t) => t === '-'\r\n                ? '-'\r\n                : String.fromCharCode(t.charCodeAt(0) + (t.charCodeAt(0) >= 97 ? 10 : 49))));\r\n            selection.append('tspan').attr('class', 's').text(p.y + 1);\r\n        });\r\n        return this;\r\n    }\r\n    values(data) {\r\n        const that = this;\r\n        this.all.selectAll('g.values').append('text')\r\n            .attr('y', '0.4em')\r\n            .text(function (node) {\r\n            const p = that.grid.toPoint(that.data[node].tile);\r\n            return data[that.data[node].tile.toString()];\r\n        });\r\n        return this;\r\n    }\r\n    tiles(show = true) {\r\n        let tiles;\r\n        if (show === false) {\r\n            this.all.selectAll('g.tiles').selectAll('text').remove();\r\n            this.showTiles = false;\r\n            return this;\r\n        }\r\n        else if (show === true && !this.showTiles) {\r\n            tiles = this.all.selectAll('g.tiles').append('text');\r\n            this.showTiles = true;\r\n        }\r\n        else if (show !== true) {\r\n            this.tilesEnter.selectAll('g.tiles').append('text');\r\n            tiles = this.all.selectAll('g.tiles').selectAll('text');\r\n            this.showTiles = true;\r\n        }\r\n        else {\r\n            return this;\r\n        }\r\n        const that = this;\r\n        tiles.attr('y', '0.4em')\r\n            .each(function (node) {\r\n            const selection = d3.select(this);\r\n            let labels = that.data[node].tile.value;\r\n            if (labels[0] === 0 && labels[1] === 0 && labels[2] === 0) {\r\n                labels = ['x', 'y', 'z'];\r\n            }\r\n            if (labels[2] === true) {\r\n                labels[2] = 'T';\r\n            }\r\n            else if (labels[2] === false) {\r\n                labels[2] = 'F';\r\n            }\r\n            selection.selectAll('*').remove();\r\n            selection.append('tspan').attr('class', 'q').text(labels[0]);\r\n            selection.append('tspan').attr('class', 's').text(labels[1]);\r\n            selection.append('tspan').attr('class', 'r').text(labels[2]);\r\n        });\r\n        if (this.grid.tileTypes === 1) {\r\n            const o = this.grid.vertices(this.grid.orientation, this.grid.scale - this.fontSize * 1.5);\r\n            this.all.select('.tiles .q').attr('x', o[0].x).attr('y', o[0].y + this.fontSize * 0.4);\r\n            this.all.select('.tiles .s').attr('x', o[2].x).attr('y', o[2].y + this.fontSize * 0.4);\r\n            if (o.length > 4) {\r\n                this.all.select('.tiles .r').attr('x', o[4].x).attr('y', o[4].y + this.fontSize * 0.4);\r\n            }\r\n            else if (o.length >= 3) {\r\n                this.all.select('.tiles .r').attr('x', o[1].x).attr('y', o[1].y + this.fontSize * 0.4);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Highlight selected tiles\r\n     * @param tiles Array of selected tiles\r\n     * @param classed Optional highlight class\r\n     * @returns {Diagram} For chain call\r\n     */\r\n    highlight(tiles, classed = 'highlight') {\r\n        const tileSet = d3.set(tiles);\r\n        this.all.classed(classed, (node) => {\r\n            return tileSet.has(this.data[node].tile);\r\n        });\r\n        return this;\r\n    }\r\n    path(tiles, color, width = 5) {\r\n        this.paths.selectAll('*').remove();\r\n        if (!tiles || !tiles.length) {\r\n            return this;\r\n        }\r\n        const path = this.paths.append('path')\r\n            .attr('d', 'M 0 0')\r\n            .attr('class', 'path')\r\n            .attr('style', `stroke: ${color}; stroke-width: ${width}px;`);\r\n        const d = [];\r\n        for (let i = 0; i < tiles.length; i++) {\r\n            d.push(i === 0 ? 'M' : 'L');\r\n            d.push(this.grid.center(tiles[i]).toString());\r\n        }\r\n        path.attr('d', d.join(' '));\r\n        return this;\r\n    }\r\n    lines(tiles, color, width = 5) {\r\n        this.paths.selectAll('*').remove();\r\n        if (!tiles || !tiles.length) {\r\n            return this;\r\n        }\r\n        const path = this.paths.selectAll('path').data(tiles).enter().append('path')\r\n            .attr('d', 'M 0 0')\r\n            .attr('class', 'path')\r\n            .attr('style', `stroke: ${color}; stroke-width: ${width}px;`);\r\n        path.attr('d', (t) => {\r\n            const d = [];\r\n            for (let i = 0; i < t.length; i++) {\r\n                d.push(i === 0 ? 'M' : 'L');\r\n                d.push(this.grid.center(t[i]).toString());\r\n            }\r\n            return d.join(' ');\r\n        });\r\n        return this;\r\n    }\r\n    search(search, fromTile = 'hsl(90, 80%, 80%)', to = 'hsl(200, 80%, 80%)') {\r\n        if (!search) {\r\n            this.all.selectAll('g.polygon').selectAll('polygon').style('fill', null);\r\n            return this;\r\n        }\r\n        const color = d3.interpolate(fromTile, to);\r\n        this.all.selectAll('g.polygon').selectAll('polygon').style('fill', (node) => {\r\n            const v = search.cost[this.data[node].key];\r\n            return (v >= 0) ? color(v / (search.max || 1)) : null;\r\n        });\r\n        return this;\r\n    }\r\n    point(xy) {\r\n        if (!this.pointElement) {\r\n            this.pointElement = this.svg.append('circle');\r\n            this.pointElement.attr('class', 'marker').attr('r', 5);\r\n        }\r\n        const tile = this.grid.position(new Float2(xy[0], xy[1]));\r\n        this.pointElement.attr('transform', `translate(${xy[0] + this.translate.x},${xy[1] + this.translate.y})`);\r\n        // console.log(xy, tile)\r\n        this.all.classed('highlight', (node) => {\r\n            return this.data[node].tile.equals(tile);\r\n        });\r\n        return this;\r\n    }\r\n    mousePoint() {\r\n        this.svg.on('mousemove', () => {\r\n            const xy = d3.mouse(this.root.node());\r\n            this.point(xy);\r\n        });\r\n        return this;\r\n    }\r\n    initRoot() {\r\n        const bounds = this.grid.bounds();\r\n        this.translate = new Float2((parseFloat(this.svg.attr('width')) - bounds.minX - bounds.maxX) / 2, (parseFloat(this.svg.attr('height')) - bounds.minY - bounds.maxY) / 2);\r\n        this.transition(this.root).attr('transform', `translate(${this.translate})`);\r\n        this.transition(this.paths).attr('transform', `translate(${this.translate})`);\r\n        // this.root.append(\"rect\").attr(\"class\", \"bound\")\r\n        // .attr(\"x\", bounds.minX).attr(\"y\", bounds.minY)\r\n        // .attr(\"width\", bounds.maxX - bounds.minX).attr(\"height\", bounds.maxY - bounds.minY);\r\n    }\r\n    initTiles() {\r\n        this.nodes = this.grid.tiles.map((n) => {\r\n            const d = { tile: n, key: n.toString(), tileKey: this.grid.toPoint(n).toString() };\r\n            this.data[d.tileKey] = d;\r\n            return d.tileKey;\r\n        });\r\n        this.tilesElements = this.root.selectAll('g.tile').data(this.nodes, (d) => d);\r\n        this.transition(this.tilesElements.exit(), 0.5).style('opacity', 0).remove();\r\n        const tilesEnter = this.tilesElements.enter().append('g')\r\n            .attr('class', 'tile')\r\n            .style('opacity', this.animation ? 0 : 1)\r\n            .attr('transform', (node) => {\r\n            const center = this.grid.center(this.data[node].tile);\r\n            return `translate(${center.x},${center.y})`;\r\n        });\r\n        tilesEnter.append('g').attr('class', 'polygon');\r\n        tilesEnter.append('g').attr('class', 'paths');\r\n        tilesEnter.append('g').attr('class', 'center');\r\n        tilesEnter.append('g').attr('class', 'circle');\r\n        tilesEnter.append('g').attr('class', 'axes');\r\n        tilesEnter.append('g').attr('class', 'coordinates');\r\n        tilesEnter.append('g').attr('class', 'tiles');\r\n        tilesEnter.append('g').attr('class', 'values');\r\n        this.transition(this.tilesElements.merge(tilesEnter)).attr('transform', (node) => {\r\n            const center = this.grid.center(this.data[node].tile);\r\n            return `translate(${center.x},${center.y})`;\r\n        }).style('opacity', 1);\r\n        this.tilesEnter = tilesEnter;\r\n        this.all = this.tilesEnter.merge(this.tilesElements);\r\n    }\r\n    shapePath(tileType) {\r\n        return this.grid.vertices(undefined, undefined, tileType).map((p) => `${p.x.toFixed(3)},${p.y.toFixed(3)}`)\r\n            .join(' ');\r\n    }\r\n    transition(selection, delta = 1) {\r\n        return ((this.animation && (this.duration * delta))\r\n            ? selection.transition().duration(this.duration * delta)\r\n            : selection);\r\n    }\r\n}\r\n//# sourceMappingURL=Diagram.js.map"],"names":[],"mappings":"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"}